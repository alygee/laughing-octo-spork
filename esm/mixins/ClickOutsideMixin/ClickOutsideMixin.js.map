{"version":3,"file":"ClickOutsideMixin.js","sources":["../../../../src/mixins/ClickOutsideMixin/ClickOutsideMixin.ts"],"sourcesContent":["// Most of the mixin's code was taken from:\n// 1/ https://github.com/react-bootstrap/react-overlays/blob/master/src/useRootClose.ts\n// 2/ https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/ClickAwayListener/ClickAwayListener.js\n\nimport { noop } from 'lodash-es'\nimport { Vue } from 'vue-class-component'\n\nimport {\n  ownerDocument,\n  listen,\n  clickedRootScrollbar,\n} from '../../utils/dom-utils'\nimport { handleMouseCapture } from './ClickOutsideMixin-utils'\n\nexport type ClickOutsideOptions = {\n  disabled: boolean;\n  trigger: 'click' | 'mousedown' | 'mouseup';\n  onClickOutside: (e: Event | undefined) => void;\n}\n\nclass ClickOutsideMixin extends Vue {\n  // Set it `true` to prevent handling a bubbled event\n  // before handling a captured one for the first time\n  private preventMouseRootTrigger = true\n\n  handleMouse (e: MouseEvent, options: ClickOutsideOptions) {\n    if (!this.preventMouseRootTrigger) {\n      const { onClickOutside } = options\n      onClickOutside(e)\n    }\n  }\n\n  handleMouseCapture (e: MouseEvent, target: Element) {\n    // Behave like a blur listener.\n    if (clickedRootScrollbar(e)) {\n      return\n    }\n\n    this.preventMouseRootTrigger = handleMouseCapture(e as MouseEvent, target)\n  }\n\n  registerClickOutsideEvents (\n    target: Element | undefined,\n    options: ClickOutsideOptions,\n  ) {\n    const { trigger, disabled } = options\n\n    if (disabled || !target) {\n      return noop\n    }\n\n    const document = ownerDocument(target as Element)\n\n    // Use capture for this listener so it fires before Vue's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the Vue mouse callback.\n    const removeMouseCaptureListener = listen({\n      node: document,\n      eventName: trigger,\n      handler: (e) => this.handleMouseCapture(e as MouseEvent, target),\n      options: true,\n    })\n\n    const removeMouseListener = listen({\n      node: document,\n      eventName: trigger,\n      handler: (e) => this.handleMouse(e as MouseEvent, options),\n    })\n\n    // Not sure if this is needed\n    // Should make clickable all the elements on body\n    // https://bugs.webkit.org/show_bug.cgi?id=153887\n    let mobileSafariHackListeners: any[] = []\n    if ('ontouchstart' in document.documentElement) {\n      mobileSafariHackListeners = [].slice\n        .call(document.body.children)\n        .map((el) =>\n          listen({ node: el, eventName: 'mousemove', handler: noop }),\n        )\n    }\n\n    return () => {\n      removeMouseCaptureListener()\n      removeMouseListener()\n      mobileSafariHackListeners.forEach((remove) => remove())\n      this.preventMouseRootTrigger = true\n    }\n  }\n}\n\nexport default ClickOutsideMixin\n"],"names":["Vue","constructor","this","handleMouse","e","options","preventMouseRootTrigger","onClickOutside","handleMouseCapture","target","clickedRootScrollbar","registerClickOutsideEvents","trigger","disabled","noop","document","ownerDocument","removeMouseCaptureListener","listen","node","eventName","handler","removeMouseListener","mobileSafariHackListeners","documentElement","slice","call","body","children","map","el","forEach","remove"],"mappings":"sTAoBA,cAAgCA,EAAhCC,kCAGUC,8BAA0B,EAElCC,YAAaC,EAAeC,GAC1B,IAAKH,KAAKI,wBAAyB,CACjC,MAAMC,eAAEA,GAAmBF,EAC3BE,EAAeH,IAInBI,mBAAoBJ,EAAeK,GAE7BC,EAAqBN,KAIzBF,KAAKI,wBAA0BE,EAAmBJ,EAAiBK,IAGrEE,2BACEF,EACAJ,GAEA,MAAMO,QAAEA,EAAOC,SAAEA,GAAaR,EAE9B,GAAIQ,IAAaJ,EACf,OAAOK,EAGT,MAAMC,EAAWC,EAAcP,GAKzBQ,EAA6BC,EAAO,CACxCC,KAAMJ,EACNK,UAAWR,EACXS,QAAUjB,GAAMF,KAAKM,mBAAmBJ,EAAiBK,GACzDJ,SAAS,IAGLiB,EAAsBJ,EAAO,CACjCC,KAAMJ,EACNK,UAAWR,EACXS,QAAUjB,GAAMF,KAAKC,YAAYC,EAAiBC,KAMpD,IAAIkB,EAAmC,GASvC,MARI,iBAAkBR,EAASS,kBAC7BD,EAA4B,GAAGE,MAC5BC,KAAKX,EAASY,KAAKC,UACnBC,KAAKC,GACJZ,EAAO,CAAEC,KAAMW,EAAIV,UAAW,YAAaC,QAASP,OAInD,KACLG,IACAK,IACAC,EAA0BQ,SAASC,GAAWA,MAC9C9B,KAAKI,yBAA0B"}