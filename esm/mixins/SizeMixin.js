import{mixins as e,Vue as i,prop as t}from"../node_modules/vue-class-component/dist/vue-class-component.esm-bundler.js";const s={defaultSize:48,sizes:{small:32,medium:48,large:64}},n={defaultSize:1,sizes:{small:.75,medium:1,large:1.25}};class o{constructor(){this.size=t({type:[String,Number],default:"",validator:e=>"string"==typeof e||"number"==typeof e}),this.sizesConfig=t({type:Object,default:()=>s}),this.fontSizesConfig=t({type:Object,default:()=>n})}}class r extends(e(i.with(o))){constructor(){super(...arguments),this.fontRegex=/(?<fontSize>\d+)(?<extension>px|rem)/i}get sizeComputed(){const{defaultSize:e,sizes:i}=this.sizesConfig;return this.size?"string"==typeof this.size?this.size in i?`${i[this.size]}px`:this.size:`${this.size}px`:`${e}px`}get fontSizeComputed(){return`${this.SizeMixin_fontSize}rem`}get SizeMixin_fontSize(){const{defaultSize:e,sizes:i}=this.fontSizesConfig,t=e=>e/16-.5;if(!this.size)return e;if("string"==typeof this.size){if(this.size in i)return i[this.size];const e=this.size.match(this.fontRegex);if(!e||!e.groups)throw new Error("Size prop should be either valid string or number");const{extension:s,fontSize:n}=e.groups;return"rem"===s?+n:t(+n)}return t(this.size)}}export{r as SizeMixin,n as fontSizesConfig,s as sizesConfig};
//# sourceMappingURL=SizeMixin.js.map
