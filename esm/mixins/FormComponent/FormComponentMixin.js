import{__decorate as r}from"tslib";import{flatten as e,isFunction as t,isString as s}from"lodash-es";import{inject as o}from"vue";import{Vue as i,mixins as n,setup as d,Options as h,prop as u}from"../../node_modules/vue-class-component/dist/vue-class-component.esm-bundler.js";import{FormServiceKey as a}from"../../components/va-form/consts.js";const l=(r=[],e=null)=>(s(r)&&(r=[r]),r.map((r=>t(r)?r(e):r)));const m=i.with(class{constructor(){this.rules=u({type:Array,default:()=>[]}),this.disabled=u({type:Boolean,default:!1}),this.readonly=u({type:Boolean,default:!1}),this.success=u({type:Boolean,default:!1}),this.messages=u({type:Array,default:()=>[]}),this.error=u({type:Boolean,default:!1}),this.errorMessages=u({type:[Array,String]}),this.errorCount=u({type:Number,default:1}),this.id=u({type:[String,Number],default:void 0}),this.name=u({type:[String,Number],default:void 0}),this.modelValue=u({validator:()=>{throw new Error("ValidateMixin: `modelValue` prop should be defined in component.")}})}});let p=class extends(n(m)){constructor(){super(...arguments),this.hadFocus=!1,this.isFocused=!1,this.internalErrorMessages=[],this.internalError=!1,this.isFormComponent=!0,this.formProvider=d((()=>({...o(a,void 0)})))}mounted(){Object.keys(this.formProvider).length&&this.formProvider.onChildMounted(this)}unmounted(){Object.keys(this.formProvider).length&&this.formProvider.onChildUnmounted(this)}validate(){return this.computedError=!1,this.computedErrorMessages=[],this.rules&&this.rules.length>0&&l(e(this.rules),this.modelValue).forEach((r=>{s(r)?(this.computedErrorMessages.push(r),this.computedError=!0):!1===r&&(this.computedError=!0)})),!this.computedError}focus(){throw new Error("focus method should be implemented in component")}reset(){throw new Error("reset method should be implemented in component")}resetValidation(){this.computedErrorMessages=[],this.computedError=!1}hasError(){return this.computedError}ValidateMixin_onBlur(){this.isFocused=!1,this.computedError=!1,this.validate()}get shouldValidateOnBlur(){return this.hadFocus}get computedError(){return this.error||this.internalError}set computedError(r){this.internalError=r}get computedErrorMessages(){return this.errorMessages?l(this.errorMessages):this.internalErrorMessages}set computedErrorMessages(r){this.internalErrorMessages=r}};p=r([h({})],p);export{p as FormComponentMixin};
//# sourceMappingURL=FormComponentMixin.js.map
