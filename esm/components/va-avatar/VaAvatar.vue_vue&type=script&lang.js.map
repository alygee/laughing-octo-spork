{"version":3,"file":"VaAvatar.vue_vue&type=script&lang.js","sources":["../../../../src/components/va-avatar/VaAvatar.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-avatar\"\n    ref=\"avatar\"\n    :style=\"computedStyle\"\n  >\n    <slot>\n      <va-progress-circle\n        v-if=\"loading\"\n        indeterminate\n        :size=\"sizeComputed\"\n        :color=\"colorComputed\"\n      />\n      <img\n        v-else-if=\"src\"\n        :src=\"src\"\n      >\n      <va-icon\n        v-else-if=\"icon\"\n        :name=\"icon\"\n      />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, mixins, prop, Vue } from 'vue-class-component'\n\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport { SizeMixin } from '../../mixins/SizeMixin'\nimport { LoadingMixin } from '../../mixins/LoadingMixin/LoadingMixin'\nimport VaIcon from '../va-icon'\nimport { VaProgressCircle } from '../va-progress-bar'\n\nclass AvatarProps {\n  color = prop<string>({ type: String, default: 'info' })\n  textColor = prop<string>({ type: String, default: 'white' })\n  square = prop<boolean>({ type: Boolean, default: false })\n  icon = prop<string>({ type: String, default: '' })\n  src = prop<string>({ type: String, default: null })\n  fontSize = prop<string>({ type: String, default: '' })\n}\n\nconst AvatarPropsMixin = Vue.with(AvatarProps)\n\n@Options({\n  name: 'VaAvatar',\n  components: { VaIcon, VaProgressCircle },\n})\nexport default class VaAvatar extends mixins(\n  SizeMixin,\n  ColorMixin,\n  LoadingMixin,\n  AvatarPropsMixin,\n) {\n  get computedStyle () {\n    return {\n      color: this.theme.getColor(this.textColor, '#ffffff'),\n      backgroundColor: this.loading ? 'transparent' : this.colorComputed,\n      borderRadius: this.square ? 0 : '',\n      fontSize: this.fontSize || this.fontSizeComputed,\n      width: this.sizeComputed,\n      minWidth: this.sizeComputed, // We only define width because common use case would be flex row, for column we expect user to set appropriate styling externally.\n      height: this.sizeComputed,\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-avatar {\n  align-items: var(--va-avatar-align-items);\n  display: var(--va-avatar-display);\n  justify-content: var(--va-avatar-justify-content);\n  line-height: var(--va-avatar-line-height);\n  position: var(--va-avatar-position);\n  text-align: var(--va-avatar-text-align);\n  vertical-align: var(--va-avatar-vertical-align);\n  border-radius: var(--va-avatar-border-radius);\n\n  img,\n  svg {\n    border-radius: inherit;\n    display: inline-flex;\n    height: inherit;\n    width: inherit;\n    margin: auto;\n  }\n}\n</style>\n"],"names":["AvatarPropsMixin","Vue","with","constructor","this","prop","type","String","default","Boolean","VaAvatar","mixins","SizeMixin","ColorMixin","LoadingMixin","computedStyle","color","theme","getColor","textColor","backgroundColor","loading","colorComputed","borderRadius","square","fontSize","fontSizeComputed","width","sizeComputed","minWidth","height","Options","name","components","VaIcon","VaProgressCircle"],"mappings":"qcA2CA,MAAMA,EAAmBC,EAAIC,KAT7B,MAAAC,cACEC,WAAQC,EAAa,CAAEC,KAAMC,OAAQC,QAAS,SAC9CJ,eAAYC,EAAa,CAAEC,KAAMC,OAAQC,QAAS,UAClDJ,YAASC,EAAc,CAAEC,KAAMG,QAASD,SAAS,IACjDJ,UAAOC,EAAa,CAAEC,KAAMC,OAAQC,QAAS,KAC7CJ,SAAMC,EAAa,CAAEC,KAAMC,OAAQC,QAAS,OAC5CJ,cAAWC,EAAa,CAAEC,KAAMC,OAAQC,QAAS,QASnD,IAAqBE,EAArB,cAAsCC,EACpCC,EACAC,EACAC,EACAd,IAEAe,oBACE,MAAO,CACLC,MAAOZ,KAAKa,MAAMC,SAASd,KAAKe,UAAW,WAC3CC,gBAAiBhB,KAAKiB,QAAU,cAAgBjB,KAAKkB,cACrDC,aAAcnB,KAAKoB,OAAS,EAAI,GAChCC,SAAUrB,KAAKqB,UAAYrB,KAAKsB,iBAChCC,MAAOvB,KAAKwB,aACZC,SAAUzB,KAAKwB,aACfE,OAAQ1B,KAAKwB,gBAdElB,KAJpBqB,EAAQ,CACPC,KAAM,WACNC,WAAY,CAAEC,OAAAA,EAAQC,iBAAAA,MAEHzB,SAAAA"}