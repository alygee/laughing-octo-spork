{"version":3,"file":"VaSelectOptionList.vue_vue&type=template&id=59030744&lang.js","sources":["../../../../../src/components/va-select/VaSelectOptionList/VaSelectOptionList.vue?vue&type=template&id=59030744&lang.js"],"sourcesContent":["<template>\n  <div\n    class=\"va-select-option-list\"\n    ref=\"el\"\n    :tabindex=\"tabindex\"\n    @keydown.up.stop.prevent=\"hoverPreviousOption\"\n    @keydown.left.stop.prevent=\"hoverPreviousOption\"\n    @keydown.down.stop.prevent=\"hoverNextOption\"\n    @keydown.right.stop.prevent=\"hoverNextOption\"\n  >\n    <template v-if=\"filteredOptions.length\">\n      <div\n        v-for=\"option in filteredOptions\"\n        :key=\"$props.getTrackBy(option)\"\n        :ref=\"setItemRef($props.getTrackBy(option))\"\n        :class=\"getOptionClass(option)\"\n        :style=\"getOptionStyle(option)\"\n        @click.stop=\"selectOption(option)\"\n        @mouseover=\"updateHoveredOption(option)\"\n      >\n        <va-icon\n          v-if=\"option.icon\"\n          size=\"small\"\n          class=\"va-select-option-list__option--icon\"\n          :name=\"option.icon\"\n        />\n        <span>{{ getText(option) }}</span>\n        <va-icon\n          v-show=\"$props.getSelectedState(option)\"\n          class=\"va-select-option-list__option--selected-icon\"\n          size=\"small\"\n          name=\"done\"\n          :color=\"colorComputed\"\n        />\n      </div>\n    </template>\n    <div\n      v-else\n      class=\"va-select-option-list no-options\"\n    >\n      {{ noOptionsText }}\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { watch } from 'vue'\nimport { Options, prop, Vue, mixins } from 'vue-class-component'\n\nimport { getHoverColor } from '../../../services/color-config/color-functions'\nimport ColorMixin from '../../../services/color-config/ColorMixin'\nimport VaIcon from '../../va-icon/'\n\nclass SelectOptionListProps {\n  options = prop<any[]>({ type: Array, default: () => [] })\n  noOptionsText = prop<string>({\n    type: String,\n    default: 'Items not found',\n  })\n\n  getSelectedState = prop<Function>({\n    type: Function,\n    default: () => false,\n  })\n\n  getText = prop<Function>({\n    type: Function,\n  })\n\n  getTrackBy = prop<Function>({\n    type: Function,\n  })\n\n  multiple = prop<boolean>({ type: Boolean, default: false })\n  search = prop<string>({ type: String, default: '' })\n\n  hoveredOption = prop<string | object>({\n    type: [String, Object],\n    default: null,\n  })\n\n  tabindex = prop<number>({ type: Number, default: 0 })\n}\n\nconst SelectOptionListPropsMixin = Vue.with(SelectOptionListProps)\n\n@Options({\n  name: 'VaSelectOptionList',\n  components: { VaIcon },\n  emits: [\n    'select-option',\n    'update:hoveredOption',\n    'no-previous-option-to-hover',\n  ],\n})\nexport default class VaSelectOptionList extends mixins(\n  ColorMixin,\n  SelectOptionListPropsMixin,\n) {\n  itemRefs: Record<number, any> = {}\n\n  created () {\n    watch(() => this.$props.hoveredOption, (newOption: any) => {\n      if (newOption) {\n        this.scrollToOption(newOption)\n      }\n    })\n  }\n\n  beforeUpdate () {\n    this.itemRefs = {}\n  }\n\n  setItemRef (option: number) {\n    return (el: any) => {\n      if (el) {\n        this.itemRefs[option] = el\n      }\n    }\n  }\n\n  get hoveredOptionComputed () {\n    return this.hoveredOption || null\n  }\n\n  set hoveredOptionComputed (value: any) {\n    this.$emit('update:hoveredOption', value)\n  }\n\n  get filteredOptions () {\n    if (!this.$props.search) {\n      return this.$props.options as []\n    }\n\n    return (this.$props.options as []).filter((option: string) => {\n      const optionText = (this.$props.getText as Function)(option).toUpperCase()\n      const search = (this.$props.search as string).toUpperCase()\n      return optionText.includes(search)\n    })\n  }\n\n  selectOption (option: any): void {\n    this.$emit('select-option', option)\n  }\n\n  getOptionClass (option: any) {\n    return {\n      'va-select-option-list__option': true,\n      'va-select-option-list__option--selected': (this.$props.getSelectedState as Function)(option),\n    }\n  }\n\n  getOptionStyle (option: any) {\n    return {\n      color: (this.$props.getSelectedState as Function)(option) ? this.colorComputed : 'inherit',\n      backgroundColor: this.isHovered(option) ? getHoverColor(this.colorComputed) : 'transparent',\n    }\n  }\n\n  isHovered (option: any) {\n    if (!this.hoveredOptionComputed) { return false }\n    if (typeof option === 'string') { return option === this.hoveredOptionComputed }\n    if (!this.getTrackBy) { return false }\n\n    return this.getTrackBy(this.hoveredOptionComputed) === this.getTrackBy(option)\n  }\n\n  updateHoveredOption (option: string[] | string): void {\n    if (option) {\n      this.hoveredOptionComputed = option\n    } else {\n      this.hoveredOptionComputed = null\n    }\n  }\n\n  public hoverPreviousOption () {\n    if (!this.hoveredOptionComputed) {\n      // Hover last option from list\n      this.filteredOptions.length && this.updateHoveredOption(this.filteredOptions[this.filteredOptions.length - 1])\n    } else {\n      const hoveredOptionIndex: any =\n        this.filteredOptions.findIndex((option: any) =>\n          (this.$props.getText as Function)(option) === (this.$props.getText as Function)(this.hoveredOptionComputed))\n      if (this.filteredOptions[hoveredOptionIndex - 1]) {\n        this.hoveredOptionComputed = this.filteredOptions[hoveredOptionIndex - 1]\n      } else {\n        this.$emit('no-previous-option-to-hover')\n      }\n    }\n  }\n\n  public hoverNextOption () {\n    if (!this.hoveredOptionComputed) {\n      // Hover first option from list\n      this.filteredOptions.length && this.updateHoveredOption(this.filteredOptions[0])\n    } else {\n      const hoveredOptionIndex: any =\n        this.filteredOptions.findIndex((option: any) =>\n          (this.$props.getText as Function)(option) === (this.$props.getText as Function)(this.hoveredOptionComputed))\n      if (this.filteredOptions[hoveredOptionIndex + 1]) {\n        this.hoveredOptionComputed = this.filteredOptions[hoveredOptionIndex + 1]\n      }\n    }\n  }\n\n  public hoverFirstOption () {\n    if (this.filteredOptions.length > 0) {\n      this.updateHoveredOption(this.filteredOptions[0])\n    }\n  }\n\n  scrollToOption (option: any) {\n    const optionElement: HTMLElement = this.itemRefs[(this.$props.getTrackBy as Function)(option)]\n    if (!optionElement) { return }\n\n    // Scroll list to hinted option position\n    optionElement.scrollIntoView({\n      behavior: 'auto',\n      block: 'nearest',\n      inline: 'nearest',\n    })\n  }\n\n  public focus () {\n    if (this.$refs.el) {\n      (this.$refs as any).el.focus()\n    }\n  }\n}\n</script>\n<style lang=\"scss\">\n@import \"../../../styles/resources/resources\";\n@import 'variables';\n\n.va-select-option-list {\n  display: var(--va-select-option-list-display);\n  flex-direction: var(--va-select-option-list-flex-direction);\n  width: var(--va-select-option-list-width);\n  list-style: var(--va-select-option-list-list-style);\n  max-height: 200px;\n\n  &__option {\n    cursor: var(--va-select-option-list-option-cursor);\n    display: var(--va-select-option-list-option-display);\n    align-items: var(--va-select-option-list-option-align-items);\n    padding: var(--va-select-option-list-option-padding);\n    min-height: var(--va-select-option-list-option-min-height);\n    word-break: var(--va-select-option-list-option-word-break);\n\n    &--icon {\n      margin-right: var(--va-select-option-list-icon-margin-right);\n    }\n\n    &--selected-icon {\n      margin-left: var(--va-select-option-list-selected-icon-margin-left);\n      font-size: var(--va-select-option-list-selected-icon-font-size);\n    }\n  }\n\n  &.no-options {\n    padding: 0.5rem;\n  }\n}\n</style>\n"],"names":["class","_createBlock","ref","tabindex","_ctx","onKeydown","option","key","getTrackBy","style","onClick","onMouseover","size","name","icon","_createVNode","color","getSelectedState","_hoisted_1"],"mappings":"kPAsCMA,MAAM,oFArCVC,SACED,MAAM,wBACNE,IAAI,KACHC,SAAUC,WACVC,oCAAyBD,0GACEA,4GACAA,oGACCA,+EAEbA,kBAAsB,cACpCH,cACmBG,mBAAVE,QADTL,SAEGM,IAAKH,SAAOI,WAAWF,GACvBJ,IAAKE,aAAWA,SAAOI,WAAWF,IAClCN,MAAOI,iBAAeE,GACtBG,MAAOL,iBAAeE,GACtBI,cAAYN,eAAaE,cACzBK,eAAWP,sBAAoBE,KAGxBA,EAAW,UADnBL,WAEEW,KAAK,QACLZ,MAAM,sCACLa,KAAMP,EAAOQ,qCAEhBC,gBAASX,UAAQE,SACjBS,KAEEf,MAAM,+CACNY,KAAK,QACLC,KAAK,OACJG,MAAOZ,uCAJAA,SAAOa,iBAAiBX,mDAQtCL,QAAAiB,IAIKd"}