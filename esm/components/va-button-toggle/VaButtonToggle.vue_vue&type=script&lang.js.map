{"version":3,"file":"VaButtonToggle.vue_vue&type=script&lang.js","sources":["../../../../src/components/va-button-toggle/VaButtonToggle.vue"],"sourcesContent":["<template>\n  <div class=\"va-button-toggle\">\n    <va-button-group\n      :color=\"color\"\n      :textColor=\"textColor\"\n      :rounded=\"rounded\"\n      :outline=\"outline\"\n      :flat=\"flat\"\n      :gradient=\"gradient\"\n    >\n      <va-button\n        v-for=\"option in options\"\n        :key=\"option.value\"\n        :style=\"buttonStyle(option.value)\"\n        :disabled=\"disabled\"\n        :size=\"size\"\n        :class=\"buttonClass(option.value)\"\n        @click=\"changeValue(option.value)\"\n      >\n        {{ option.label }}\n      </va-button>\n    </va-button-group>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, prop, mixins, Vue } from 'vue-class-component'\n\nimport {\n  getFocusColor, getTextColor,\n  shiftHSLAColor,\n} from '../../services/color-config/color-functions'\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport VaButton from '../va-button'\nimport VaButtonGroup from '../va-button-group'\n\nclass ButtonToggleProps {\n  options = prop<any[]>({ type: Array, default: () => [] })\n  color = prop<string>({ type: String, default: 'primary' })\n  textColor = prop<string>({ type: String, default: undefined })\n  activeButtonTextColor = prop<string>({ type: String, default: '#fff' })\n  modelValue = prop<string | number>({ type: [String, Number], default: '' })\n  outline = prop<boolean>({ type: Boolean, default: false })\n  flat = prop<boolean>({ type: Boolean, default: false })\n  rounded = prop<boolean>({ type: Boolean, default: true })\n  disabled = prop<boolean>({ type: Boolean, default: false })\n  size = prop<string>({\n    type: String,\n    default: 'medium',\n    validator: (modelValue: string) => {\n      return ['medium', 'small', 'large'].includes(modelValue)\n    },\n  })\n\n  toggleColor = prop<string>({ type: String, default: '' })\n  gradient = prop<boolean>({ type: Boolean, default: false })\n}\n\nconst ButtonTogglePropsMixin = Vue.with(ButtonToggleProps)\n\n@Options({\n  name: 'VaButtonToggle',\n  components: {\n    VaButtonGroup,\n    VaButton,\n  },\n  emits: ['update:modelValue'],\n})\nexport default class VaButtonToggle extends mixins(\n  ColorMixin,\n  ButtonTogglePropsMixin,\n) {\n  buttonColor (buttonValue: any) {\n    return buttonValue === this.modelValue && this.toggleColor ? this.toggleColor : this.color\n  }\n\n  buttonStyle (buttonValue: any) {\n    if (buttonValue === this.modelValue) {\n      let color = this.activeButtonTextColor ? this.activeButtonTextColor : getTextColor(this.colorComputed)\n      let background = this.toggleColor ? this.theme.getColor(this.toggleColor) : shiftHSLAColor(this.colorComputed, { l: -6 })\n      if (this.outline || this.flat) {\n        background = this.toggleColor ? this.theme.getColor(this.toggleColor) : this.colorComputed\n        color = this.activeButtonTextColor\n      }\n      return {\n        background: background,\n        color: color,\n      }\n    }\n  }\n\n  buttonClass (buttonValue: any) {\n    return {\n      'va-button--active': buttonValue === this.modelValue,\n    }\n  }\n\n  changeValue (value: any) {\n    this.$emit('update:modelValue', value)\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.va-button-toggle {\n  .va-button {\n    &:focus,\n    &:hover {\n      box-shadow: none !important;\n    }\n  }\n}\n</style>\n"],"names":["ButtonTogglePropsMixin","Vue","with","constructor","this","prop","type","Array","default","String","undefined","Number","Boolean","validator","modelValue","includes","VaButtonToggle","mixins","ColorMixin","buttonColor","buttonValue","toggleColor","color","buttonStyle","activeButtonTextColor","getTextColor","colorComputed","background","theme","getColor","shiftHSLAColor","l","outline","flat","buttonClass","changeValue","value","$emit","Options","name","components","VaButtonGroup","VaButton","emits"],"mappings":"sZA0DA,MAAMA,EAAyBC,EAAIC,KAtBnC,MAAAC,cACEC,aAAUC,EAAY,CAAEC,KAAMC,MAAOC,QAAS,IAAM,KACpDJ,WAAQC,EAAa,CAAEC,KAAMG,OAAQD,QAAS,YAC9CJ,eAAYC,EAAa,CAAEC,KAAMG,OAAQD,aAASE,IAClDN,2BAAwBC,EAAa,CAAEC,KAAMG,OAAQD,QAAS,SAC9DJ,gBAAaC,EAAsB,CAAEC,KAAM,CAACG,OAAQE,QAASH,QAAS,KACtEJ,aAAUC,EAAc,CAAEC,KAAMM,QAASJ,SAAS,IAClDJ,UAAOC,EAAc,CAAEC,KAAMM,QAASJ,SAAS,IAC/CJ,aAAUC,EAAc,CAAEC,KAAMM,QAASJ,SAAS,IAClDJ,cAAWC,EAAc,CAAEC,KAAMM,QAASJ,SAAS,IACnDJ,UAAOC,EAAa,CAClBC,KAAMG,OACND,QAAS,SACTK,UAAYC,GACH,CAAC,SAAU,QAAS,SAASC,SAASD,KAIjDV,iBAAcC,EAAa,CAAEC,KAAMG,OAAQD,QAAS,KACpDJ,cAAWC,EAAc,CAAEC,KAAMM,QAASJ,SAAS,OAarD,IAAqBQ,EAArB,cAA4CC,EAC1CC,EACAlB,IAEAmB,YAAaC,GACX,OAAOA,IAAgBhB,KAAKU,YAAcV,KAAKiB,YAAcjB,KAAKiB,YAAcjB,KAAKkB,MAGvFC,YAAaH,GACX,GAAIA,IAAgBhB,KAAKU,WAAY,CACnC,IAAIQ,EAAQlB,KAAKoB,sBAAwBpB,KAAKoB,sBAAwBC,EAAarB,KAAKsB,eACpFC,EAAavB,KAAKiB,YAAcjB,KAAKwB,MAAMC,SAASzB,KAAKiB,aAAeS,EAAe1B,KAAKsB,cAAe,CAAEK,GAAI,IAKrH,OAJI3B,KAAK4B,SAAW5B,KAAK6B,QACvBN,EAAavB,KAAKiB,YAAcjB,KAAKwB,MAAMC,SAASzB,KAAKiB,aAAejB,KAAKsB,cAC7EJ,EAAQlB,KAAKoB,uBAER,CACLG,WAAYA,EACZL,MAAOA,IAKbY,YAAad,GACX,MAAO,CACL,oBAAqBA,IAAgBhB,KAAKU,YAI9CqB,YAAaC,GACXhC,KAAKiC,MAAM,oBAAqBD,KA9BfpB,KARpBsB,EAAQ,CACPC,KAAM,iBACNC,WAAY,CACVC,cAAAA,EACAC,SAAAA,GAEFC,MAAO,CAAC,wBAEW3B,SAAAA"}