{"version":3,"file":"VaIcon.vue_vue&type=template&id=28d73628&lang.js","sources":["../../../../src/components/va-icon/VaIcon.vue?vue&type=template&id=28d73628&lang.js"],"sourcesContent":["<template>\n  <component\n    v-bind=\"computedAttrs\"\n    aria-hidden=\"true\"\n    notranslate\n    class=\"va-icon\"\n    :is=\"computedTag\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n  >\n    <slot>{{ computedContent }}</slot>\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { Options, mixins, prop, Vue, setup } from 'vue-class-component'\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport { SizeMixin } from '../../mixins/SizeMixin'\nimport { useIcons } from '../../services/icon-config/icon-config'\n\nclass IconProps {\n  name = prop<string>({ type: String, default: '' })\n  tag = prop<string>({ type: String })\n  component = prop<Record<string, any>>({ type: Object })\n  color = prop<string>({ type: String, default: undefined })\n  rotation = prop<number | string>({ type: [String, Number], default: undefined })\n  spin = prop<string | boolean>({ type: [String, Boolean], default: undefined })\n}\n\nconst IconPropsMixin = Vue.with(IconProps)\n\n@Options({\n  name: 'VaIcon',\n})\nexport default class VaIcon extends mixins(\n  ColorMixin,\n  SizeMixin,\n  IconPropsMixin,\n) {\n  iconContext = setup(() => useIcons(this.$props))\n\n  get iconConfig () {\n    return this.iconContext.getIcon(this.name)\n  }\n\n  get computedTag () {\n    return this.$props.component || this.$props.tag || this.iconConfig.component || this.iconConfig.tag || 'i'\n  }\n\n  get computedAttrs () {\n    return { ...this.iconConfig.attrs, ...this.$attrs }\n  }\n\n  get computedClass () {\n    const spin = this.$props.spin === undefined ? this.iconConfig.spin : this.$props.spin\n\n    return [\n      this.iconConfig.class,\n      this.getSpinClass(spin),\n    ]\n  }\n\n  getSpinClass (spin?: string | boolean) {\n    if (spin === undefined) { return }\n    return spin === 'counter-clockwise' ? 'va-icon--spin-reverse' : 'va-icon--spin'\n  }\n\n  get computedStyle () {\n    return {\n      transform: this.rotation && 'rotate(' + this.rotation + 'deg)',\n      cursor: this.$attrs.onClick ? 'pointer' : null,\n      color: this.$props.color !== undefined ? this.colorComputed : this.iconConfig.color,\n      fontSize: this.sizeComputed,\n    }\n  }\n\n  get computedContent () {\n    return this.iconConfig.content\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-icon {\n  vertical-align: var(--va-icon-vertical-align);\n  user-select: var(--va-icon-user-select);\n\n  &#{&} {\n    // need 2 classes to make it work\n    font-style: normal;\n  }\n\n  &--spin {\n    animation: va-icon--spin-animation 1500ms linear infinite;\n\n    &-reverse {\n      animation: va-icon--spin-animation 1500ms linear infinite;\n      animation-direction: reverse;\n    }\n  }\n\n  @keyframes va-icon--spin-animation {\n    from {\n      transform: rotate(0deg);\n    }\n\n    to {\n      transform: rotate(360deg);\n    }\n  }\n}\n</style>\n"],"names":["_createBlock","_ctx","_mergeProps","notranslate","class","style","_renderSlot"],"mappings":"gMACEA,IAKOC,eALPC,EACUD,iBACR,cAAY,OACZE,YAAA,GACAC,OAAM,UAEEH,iBACPI,MAAOJ,8BAER,KAAAK,yBAAA,SAASL"}