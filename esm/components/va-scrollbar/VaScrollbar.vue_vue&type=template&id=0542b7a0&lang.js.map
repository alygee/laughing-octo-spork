{"version":3,"file":"VaScrollbar.vue_vue&type=template&id=0542b7a0&lang.js","sources":["../../../../src/components/va-scrollbar/VaScrollbar.vue?vue&type=template&id=0542b7a0&lang.js"],"sourcesContent":["<template>\n  <div\n    class=\"va-scrollbar\"\n    ref=\"vuesticScrollbar\"\n  >\n    <div\n      class=\"scrollbar-wrapper\"\n      ref=\"scrollbarWrapper\"\n    >\n      <div\n        class=\"scrollbar-content\"\n        ref=\"scrollbarContent\"\n        @wheel=\"scroll\"\n        @touchstart=\"startDrag\"\n        @touchmove=\"onDrag\"\n        @touchend=\"stopDrag\"\n        @transitionend=\"onContentResize\"\n      >\n        <slot />\n      </div>\n      <div\n        class=\"track\"\n        ref=\"track\"\n      >\n        <div\n          class=\"thumb\"\n          ref=\"thumb\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { detect } from 'detect-browser'\nimport erd from 'element-resize-detector'\n\nconst browser = detect()\n\nexport default {\n  name: 'VaScrollbar',\n  props: {\n    speed: {\n      type: Number,\n      default: 20,\n    },\n  },\n  methods: {\n    calcSize () {\n      this.isDown = this.isUp = false\n      this.maxHeight = parseFloat(this.wrapper.offsetHeight, 10)\n      this.contentHeight = parseFloat(this.content.offsetHeight, 10)\n      this.trackHeight = parseFloat(this.track.offsetHeight, 10)\n\n      if (this.maxHeight / this.contentHeight * this.trackHeight < 10) {\n        this.thumb.style.height = 10 + 'px'\n      } else {\n        this.thumb.style.height = this.maxHeight / this.contentHeight * this.trackHeight + 'px'\n      }\n\n      if (this.maxHeight / this.contentHeight < 1) {\n        this.thumb.classList.add('active')\n      } else {\n        this.thumb.classList.remove('active')\n      }\n    },\n    calcThumb () {\n      const currentMT = this.content.style.marginTop === ''\n        ? 0\n        : parseInt(this.content.style.marginTop, 10)\n      this.thumb.style.top = (-currentMT / this.contentHeight * this.trackHeight) + 'px'\n    },\n    onContentResize () {\n      const prevHeight = this.contentHeight\n      this.calcSize()\n      this.calcThumb()\n\n      this.content.style.transition = 'margin-top .3s linear'\n      this.thumb.style.transition = 'top .3s linear'\n      const handler = (e) => {\n        if (e.propertyName === 'margin-top') {\n          this.content.style.transition = ''\n          this.calcSize()\n          this.calcThumb()\n          this.content.removeEventListener('transitionend', handler)\n          this.thumb.style.transition = ''\n        }\n      }\n      this.content.addEventListener('transitionend', handler)\n\n      this.setVertical(this.contentHeight - prevHeight)\n    },\n    startDrag (e) {\n      this.isDragging = true\n      this.prevTouch = e.touches[0]\n    },\n    onDrag (e) {\n      if (this.isDragging) {\n        e.preventDefault()\n        const touch = e.touches[0]\n        const delta = this.prevTouch.clientY - touch.clientY\n        this.setVertical(delta)\n        this.prevTouch = touch\n      }\n    },\n    stopDrag () {\n      this.isDragging = false\n    },\n    scroll (e) {\n      let delta = (e.deltaY * 0.01 * this.speed)\n      if (browser.name === 'firefox') {\n        delta *= 10\n      }\n      this.setVertical(delta)\n      e.preventDefault()\n    },\n    setVertical (delta) {\n      if ((this.isDown && delta > 0) || (this.isUp && delta < 0) || (this.contentHeight <= this.maxHeight)) {\n        return\n      }\n      const currentMT = this.content.style.marginTop === ''\n        ? 0\n        : parseFloat(this.content.style.marginTop, 10)\n      let nextMT = 0\n      if (this.maxHeight - (currentMT - delta) > this.contentHeight && delta > 0) {\n        nextMT = this.maxHeight - this.contentHeight\n        this.isDown = true\n      } else {\n        this.isDown = false\n        if (currentMT - delta > 0) {\n          this.isUp = true\n          nextMT = 0\n        } else {\n          nextMT = currentMT - delta\n          this.isUp = false\n        }\n      }\n\n      this.content.style.marginTop = nextMT + 'px'\n      this.calcThumb()\n    },\n  },\n  mounted () {\n    this.track = this.$refs.track\n    this.thumb = this.$refs.thumb\n    this.content = this.$refs.scrollbarContent\n    this.wrapper = this.$refs.scrollbarWrapper\n    this.calcSize()\n    this.calcThumb()\n    erd.listenTo(this.content, () => {\n      this.calcSize()\n      this.calcThumb()\n    })\n  },\n  beforeUnmount () {\n    erd.removeAllListeners(this.content)\n  },\n  data () {\n    return {\n      wrapper: undefined,\n      maxHeight: undefined,\n      thumb: undefined,\n      track: undefined,\n      trackHeight: undefined,\n      content: undefined,\n      contentHeight: undefined,\n      isDown: false,\n      isUp: true,\n      prevTouch: {},\n      isDragging: false,\n    }\n  },\n}\n\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources/resources\";\n@import 'variables';\n\n.va-scrollbar {\n  background: var(--va-scrollbar-background);\n  transition: var(--va-scrollbar-transition);\n  position: var(--va-scrollbar-position);\n\n  .scrollbar-wrapper {\n    border-radius: var(--va-scrollbar-wrapper-border-radius);\n    box-shadow: var(--va-scrollbar-wrapper-box-shadow);\n    position: var(--va-scrollbar-wrapper-position);\n    overflow: var(--va-scrollbar-wrapper-overflow);\n    max-height: var(--va-scrollbar-wrapper-max-height);\n\n    .track {\n      width: var(--va-scrollbar-wrapper-track-width);\n      position: var(--va-scrollbar-wrapper-track-position);\n      right: var(--va-scrollbar-wrapper-track-right);\n      top: var(--va-scrollbar-wrapper-track-top);\n      height: var(--va-scrollbar-wrapper-track-height);\n\n      .thumb {\n        transition: var(--va-scrollbar-thumb-transition);\n        position: var(--va-scrollbar-thumb-position);\n        width: var(--va-scrollbar-thumb-width);\n        background-color: var(--va-scrollbar-thumb-background-color);\n        opacity: var(--va-scrollbar-thumb-opacity);\n\n        &.active {\n          opacity: 0.3;\n        }\n      }\n    }\n  }\n\n  &:hover {\n    .thumb.active {\n      opacity: 1 !important;\n    }\n  }\n}\n</style>\n"],"names":["class","ref","_createBlock","_hoisted_1","_createVNode","_hoisted_2","onWheel","$options","onTouchstart","onTouchmove","onTouchend","onTransitionend","_renderSlot","_hoisted_3","_hoisted_4"],"mappings":"2FAEIA,MAAM,eACNC,IAAI,uBAGFD,MAAM,oBACNC,IAAI,uBAcFD,MAAM,QACNC,IAAI,YAGFD,MAAM,QACNC,IAAI,4CAzBZC,QAAAC,GAIEC,QAAAC,GAIED,SACEJ,MAAM,oBACNC,IAAI,mBACHK,4BAAOC,0BACPC,iCAAYD,gCACZE,gCAAWF,0BACXG,+BAAUH,8BACVI,oCAAeJ,8CAEhBK,4BAEFR,QAAAS,GAIET,QAAAU"}