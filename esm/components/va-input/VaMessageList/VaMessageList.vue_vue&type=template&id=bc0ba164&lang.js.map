{"version":3,"file":"VaMessageList.vue_vue&type=template&id=bc0ba164&lang.js","sources":["../../../../../src/components/va-input/VaMessageList/VaMessageList.vue?vue&type=template&id=bc0ba164&lang.js"],"sourcesContent":["<template>\n  <div\n    v-if=\"messages.length\"\n    class=\"va-message-list\"\n    :style=\"computedStyle\"\n  >\n    <div\n      v-for=\"(message, index) in messages\"\n      :key=\"index\"\n      class=\"va-message-list__message\"\n    >\n      {{ message }}\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, prop, Vue, mixins } from 'vue-class-component'\n\nimport ColorMixin from '../../../services/color-config/ColorMixin'\n\nclass MessagesListProps {\n  value = prop<string | number | Record<string, unknown> | any[]>({ type: [String, Number, Object, Array], default: '' })\n  limit = prop<number>({ type: Number, default: 1 })\n  color = prop<string>({ type: String, default: 'gray' })\n}\n\nconst MessagesListPropsMixin = Vue.with(MessagesListProps)\n\n@Options({\n  name: 'VaMessageList',\n})\nexport default class VaMessageList extends mixins(\n  ColorMixin,\n  MessagesListPropsMixin,\n) {\n  get messages () {\n    if (!this.value) { return [] }\n    if (!Array.isArray(this.value)) { return [this.value] }\n\n    return this.value.slice(0, this.limit)\n  }\n\n  get computedStyle () {\n    return { color: this.colorComputed }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources/resources\";\n\n.va-message-list {\n  &__message {\n    vertical-align: middle;\n    font-size: $font-size-mini;\n  }\n}\n</style>\n"],"names":["_ctx","_createBlock","class","style","message","index","key"],"mappings":"mJAEUA,WAAe,YADvBC,eAEEC,MAAM,kBACLC,MAAOH,yBAERC,WAC6BD,aAAnBI,EAASC,SADnBJ,SAEGK,IAAKD,EACNH,MAAM,8BAEHE"}