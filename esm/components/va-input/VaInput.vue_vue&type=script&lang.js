import{__decorate as e}from"tslib";import{Vue as t,prop as s,mixins as r,Options as o}from"../../node_modules/vue-class-component/dist/vue-class-component.esm-bundler.js";import i from"../../services/color-config/ColorMixin.js";import l from"./VaInputWrapper/index.js";import a from"../va-icon/index.js";import{InputMixin as p}from"./helpers/InputMixin.js";import{TextareaMixin as u}from"./helpers/TextareaMixin.js";const n=t.with(class{constructor(){this.color=s({type:String,default:"primary"}),this.placeholder=s({type:String,default:""}),this.clearable=s({type:Boolean,default:!1}),this.tabindex=s({type:Number,default:0}),this.outline=s({type:Boolean,default:!1}),this.bordered=s({type:Boolean,default:!1})}});let d=class extends(r(i,p,u,n)){get labelStyle(){return{color:this.colorComputed}}stateClasses(e){const t=[e];return this.isTextarea&&t.push(`${e}_textarea`),this.isFocusedComputed&&t.push(`${e}_focused`),this.label&&t.push(`${e}_labeled`),this.$props.outline?t.push(`${e}_outline`):this.$props.bordered?t.push(`${e}_bordered`):t.push(`${e}_solid`),this.$props.success&&t.push(`${e}_success`),(this.$props.error||this.computedError)&&t.push(`${e}_error`),this.$props.disabled&&t.push(`${e}_disabled`),t}get wrapperClass(){return this.stateClasses("va-input")}get computedBorderColorStyle(){return this.isFocusedComputed?{"border-color":this.colorComputed}:{}}get clearIconColor(){return this.isFocusedComputed?this.colorComputed:this.computedError?"danger":this.success?"success":"grey"}get computedInputAttributes(){return{...this.$attrs,id:this.id,name:this.name,type:this.type,placeholder:this.placeholder,disabled:this.disabled,readonly:this.readonly,tabindex:this.tabindex,style:this.$attrs.inputStyle,class:this.$attrs.inputClass,value:this.computedValue,"aria-label":this.label}}focus(){if(this.$refs.input)this.$refs.input.focus({preventScroll:!0});else if(this.$refs.textarea)this.$refs.textarea.focus();else if(!this.$slots.content)throw new Error("There is no DOM element to focus")}blur(){if(this.$refs.input)this.$refs.input.blur();else if(this.$refs.textarea)this.$refs.textarea.blur();else if(!this.$slots.content)throw new Error("There is no DOM element to blur")}reset(){this.$emit("update:modelValue",""),this.$emit("cleared")}};d=e([o({name:"VaInput",components:{VaInputWrapper:l,VaIcon:a},emits:["update:modelValue","update:focused","change","click-prepend","click-prepend-inner","click-append","click-append-inner","focus","blur","keyup","keydown","click","cleared"]})],d);var c=d;export default c;
//# sourceMappingURL=VaInput.vue_vue&type=script&lang.js.map
