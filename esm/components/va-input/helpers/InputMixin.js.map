{"version":3,"file":"InputMixin.js","sources":["../../../../../src/components/va-input/helpers/InputMixin.ts"],"sourcesContent":["import Cleave from 'cleave.js'\nimport { watch } from 'vue'\nimport { mixins, prop, setup, Vue } from 'vue-class-component'\nimport { CleaveOptions } from 'cleave.js/options'\nimport { StatefulMixin } from '../../../mixins/StatefulMixin/StatefulMixin'\nimport { FormComponentMixin } from '../../../mixins/FormComponent/FormComponentMixin'\n\nconst DEFAULT_MASK_TOKENS: Record<string, Record<string, unknown>> = {\n  creditCard: {\n    creditCard: true,\n  },\n  date: {\n    date: true,\n    datePattern: ['d', 'm', 'Y'],\n  },\n  time: {\n    time: true,\n    timePattern: ['h', 'm'],\n    timeFormat: '24',\n  },\n  numeral: {\n    numeral: true,\n    numeralThousandsGroupStyle: 'thousand',\n  },\n}\n\nclass Props {\n  // Mask option list - https://github.com/nosir/cleave.js/blob/master/doc/options.md#blocks\n  mask = prop<string | CleaveOptions>({\n    type: [String, Object],\n    default: () => ({}),\n  })\n\n  returnRaw = ({\n    type: Boolean,\n    default: true,\n  })\n\n  clearable = prop({ type: Boolean, default: false })\n  clearableIcon = prop<string>({ type: String, default: 'highlight_off' })\n  loading = prop({ type: Boolean, default: false })\n  canBeFocused = prop({ type: Boolean, default: true })\n  focused = prop({ type: Boolean, default: undefined })\n  modelValue = prop<string | number>({ type: [String, Number], default: '' })\n}\n\nconst PropsMixin = Vue.with(Props)\n\nexport class InputMixin extends mixins(FormComponentMixin, StatefulMixin, PropsMixin) {\n  inputElement: Cleave | null = null\n  eventListeners: any = {}\n  isFocused = false\n\n  get isFocusedComputed () {\n    if (this.$props.focused === undefined) {\n      return this.isFocused\n    }\n\n    return this.$props.focused\n  }\n\n  set isFocusedComputed (value: boolean) {\n    if (this.$props.focused === undefined) {\n      this.isFocused = value\n    }\n\n    this.$emit('update:focused', value)\n  }\n\n  context = setup(() => {\n    watch(() => this.$props.mask, (mask: string | CleaveOptions) => {\n      this.destroyCleaveInstance()\n      this.inputElement = new Cleave(this.$refs.input as HTMLInputElement, this.getMask(mask))\n      this.inputElement.setRawValue(this.modelValue)\n    })\n\n    return {}\n  })\n\n  get computedValue (): string {\n    if (!this.inputElement) {\n      return this.modelValue\n    }\n    if (this.returnRaw && this.modelValue === this.inputElement.getRawValue()) {\n      return this.inputElement.getFormattedValue()\n    }\n    return this.modelValue\n  }\n\n  get showIcon (): boolean {\n    return this.success || this.computedError || this.canBeCleared || this.loading\n  }\n\n  get canBeCleared (): boolean {\n    return this.hasContent && this.clearable\n  }\n\n  get hasContent (): boolean {\n    return ![null, undefined, ''].includes(this.modelValue)\n  }\n\n  onInput (event: any): void {\n    if (typeof this.mask !== 'string' && !Object.keys(this.mask).length) {\n      this.$emit('update:modelValue', event.target.value)\n      return\n    }\n    if (this.inputElement) {\n      this.inputElement.setRawValue(event.target.value)\n      if (this.returnRaw) {\n        this.$emit('update:modelValue', this.inputElement.getRawValue())\n        return\n      }\n    }\n    this.$emit('update:modelValue', event.target.value)\n  }\n\n  onChange (event: any): void {\n    if (typeof this.mask !== 'string' && !Object.keys(this.mask).length) {\n      this.$emit('change', event.target.value)\n      return\n    }\n    if (this.inputElement) {\n      this.inputElement.setRawValue(event.target.value)\n      if (this.returnRaw) {\n        this.$emit('change', this.inputElement.getRawValue())\n        return\n      }\n    }\n    this.$emit('change', event.target.value)\n  }\n\n  onClick (event: Event): void {\n    this.$emit('click', event)\n  }\n\n  onPrependClick (event: Event): void {\n    this.$emit('click-prepend', event)\n  }\n\n  onPrependInnerClick (event: Event): void {\n    this.$emit('click-prepend-inner', event)\n  }\n\n  onAppendClick (event: Event): void {\n    this.$emit('click-append', event)\n  }\n\n  onAppendInnerClick (event: Event): void {\n    this.$emit('click-append-inner', event)\n  }\n\n  onFocus (event: Event): void {\n    if (this.canBeFocused) {\n      this.isFocusedComputed = true\n    }\n\n    this.$emit('focus', event)\n  }\n\n  onBlur (event: Event): void {\n    this.isFocusedComputed = false\n    this.ValidateMixin_onBlur()\n    this.$emit('blur', event)\n  }\n\n  onKeyup (event: Event): void {\n    this.$emit('keyup', event)\n  }\n\n  onKeydown (event: Event): void {\n    this.$emit('keydown', event)\n  }\n\n  getMask (mask: CleaveOptions | string) {\n    if (typeof mask === 'string') {\n      return DEFAULT_MASK_TOKENS[mask] ? { ...DEFAULT_MASK_TOKENS[mask] } : {}\n    }\n    return { ...mask }\n  }\n\n  destroyCleaveInstance () {\n    if (this.inputElement) {\n      this.inputElement.destroy()\n    }\n  }\n\n  initInput () {\n    if (this.$refs.input) {\n      this.inputElement = new Cleave(this.$refs.input as HTMLInputElement, this.getMask(this.mask))\n    }\n    this.setEventListeners()\n  }\n\n  setEventListeners () {\n    this.eventListeners = {\n      input: this.onInput,\n      change: this.onChange,\n      click: this.onClick,\n      focus: this.onFocus,\n      blur: this.onBlur,\n      keyup: this.onKeyup,\n      keydown: this.onKeydown,\n    }\n  }\n\n  mounted () {\n    this.initInput()\n  }\n\n  /**\n   * Free up memory\n   */\n  beforeUnmount () {\n    this.destroyCleaveInstance()\n  }\n}\n"],"names":["DEFAULT_MASK_TOKENS","creditCard","date","datePattern","time","timePattern","timeFormat","numeral","numeralThousandsGroupStyle","PropsMixin","Vue","with","constructor","this","prop","type","String","Object","default","Boolean","undefined","Number","InputMixin","mixins","FormComponentMixin","StatefulMixin","setup","watch","$props","mask","destroyCleaveInstance","inputElement","Cleave","$refs","input","getMask","setRawValue","modelValue","isFocusedComputed","focused","isFocused","value","$emit","computedValue","returnRaw","getRawValue","getFormattedValue","showIcon","success","computedError","canBeCleared","loading","hasContent","clearable","includes","onInput","event","keys","length","target","onChange","onClick","onPrependClick","onPrependInnerClick","onAppendClick","onAppendInnerClick","onFocus","canBeFocused","onBlur","ValidateMixin_onBlur","onKeyup","onKeydown","destroy","initInput","setEventListeners","eventListeners","change","click","focus","blur","keyup","keydown","mounted","beforeUnmount"],"mappings":"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"}