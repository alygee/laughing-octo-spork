import{__decorate as t}from"tslib";import{Vue as e,mixins as o,Options as s,prop as r}from"../../node_modules/vue-class-component/dist/vue-class-component.esm-bundler.js";import{getFocusColor as i}from"../../services/color-config/color-functions.js";import a from"../../services/color-config/ColorMixin.js";import{StatefulMixin as l}from"../../mixins/StatefulMixin/StatefulMixin.js";import{SizeMixin as n}from"../../mixins/SizeMixin.js";import h from"./VaRatingItem/index.js";import{RatingValue as u}from"./VaRating.types.js";const p=e.with(class{constructor(){this.modelValue=r({type:Number,default:0}),this.icon=r({type:String,default:"star"}),this.halfIcon=r({type:String,default:"star_half"}),this.emptyIcon=r({type:String,default:"star_outline"}),this.readonly=r({type:Boolean,default:!1}),this.disabled=r({type:Boolean,default:!1}),this.numbers=r({type:Boolean,default:!1}),this.halves=r({type:Boolean,default:!1}),this.max=r({type:Number,default:5}),this.clearable=r({type:Boolean,default:!1}),this.hover=r({type:Boolean,default:!1}),this.texts=r({type:Array,default:()=>[]}),this.textColor=r({type:String}),this.unselectedColor=r({type:String}),this.color=r({type:String,default:"primary"})}});let d=class extends(o(a,n,l,p)){constructor(){super(...arguments),this.isHovered=!1,this.forceEmit=!1,this.hoveredValue=u.EMPTY}mounted(){this.hoveredValue=this.valueComputed}get valueProxy(){return this.isHovered?this.hoveredValue:this.valueComputed}set valueProxy(t){this.hoveredValue=t,this.forceEmit&&(this.valueComputed=t,this.forceEmit=!1)}get focusColor(){return this.$props.unselectedColor?this.computeColor(this.$props.unselectedColor):i(this.colorComputed)}get classList(){return{"va-rating--disabled":this.$props.disabled,"va-rating--readonly":this.$props.readonly}}get interactionsEnabled(){return!(this.$props.disabled||this.$props.readonly)}get hoverEnabled(){return this.$props.hover&&this.interactionsEnabled}get tabIndex(){return this.interactionsEnabled?0:void 0}getItemValue(t){const e=t-this.valueProxy;switch(!0){case e<=0:return u.FULL;case e===u.HALF&&this.$props.halves:return u.HALF;default:return u.EMPTY}}onHover(t,e){this.valueProxy=e===u.FULL?t:t-u.HALF}onMouseEnter(){this.isHovered=this.hoverEnabled&&!0}onMouseLeave(){this.isHovered=!1}onArrow(t,e){const o=(this.valueProxy||u.EMPTY)+(this.$props.halves?u.HALF:u.FULL)*e;o<0||o>this.$props.max||(this.forceEmit=!0,this.valueProxy=o)}onItemSelected(t,e){if(!this.interactionsEnabled)return;const o=this.$props.halves&&e===u.HALF?t-u.HALF:t,s=this.$props.clearable&&this.valueComputed===o?u.EMPTY:o;this.forceEmit=!0,this.valueProxy=s}};d=t([s({name:"VaRating",components:{VaRatingItem:h}})],d);var c=d;export default c;
//# sourceMappingURL=VaRating.vue_vue&type=script&lang.js.map
