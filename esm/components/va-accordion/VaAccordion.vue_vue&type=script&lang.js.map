{"version":3,"file":"VaAccordion.vue_vue&type=script&lang.js","sources":["../../../../src/components/va-accordion/VaAccordion.vue"],"sourcesContent":["<template>\n  <div class=\"va-accordion\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { useStateful } from '../../mixins/StatefulMixin/cStatefulMixin'\nimport { provide, defineComponent, ref, onMounted, onUpdated } from 'vue'\nimport Collapse from '../va-collapse/VaCollapse.vue'\n\nexport const AccordionServiceKey = Symbol('AccordionService')\n\nexport type Accordion = {\n  isInsideAccordion: boolean;\n  getProps: () => any;\n  getState: () => any;\n  onChildChange: (child: Collapse) => void;\n  onChildMounted: (child: Collapse) => void;\n  onChildUnmounted: (child: Collapse) => void;\n}\n\nexport default defineComponent({\n  name: 'VaAccordion',\n  emits: ['update:modelValue'],\n  props: {\n    modelValue: { type: Array, default: () => [] },\n    multiply: { type: Boolean, default: false },\n    inset: { type: Boolean, default: false },\n    popout: { type: Boolean, default: false },\n  },\n  setup (props, ctx) {\n    const stateful = useStateful(props, ctx.emit)\n    const collapses = ref<Collapse[]>([])\n\n    const getProps = () => ({ inset: props.inset, popout: props.popout })\n    const onChildMounted = (child: Collapse) => { collapses.value.push(child) }\n    const onChildUnmounted = (child: Collapse) => {\n      collapses.value = collapses.value.filter(collapse => collapse !== child)\n    }\n    const onChildChange = (child: Collapse) => {\n      const accordionValues = collapses.value.map((collapse: Collapse) => {\n        if (collapse === child) {\n          return collapse.valueProxy\n        }\n\n        if (!props.multiply) {\n          collapse.valueProxy = false\n        }\n\n        return collapse.valueProxy\n      })\n\n      stateful.valueComputed.value = accordionValues\n    }\n\n    const accordion = {\n      isInsideAccordion: true,\n      getProps,\n      getState: () => stateful.valueComputed,\n      onChildMounted,\n      onChildUnmounted,\n      onChildChange,\n    }\n\n    provide(AccordionServiceKey, accordion)\n\n    const updateCollapsesValues = () => {\n      collapses.value.forEach((collapse: Collapse, index: number) => {\n        collapse.valueProxy = stateful.valueComputed.value[index]\n      })\n    }\n\n    onMounted(updateCollapsesValues)\n    onUpdated(updateCollapsesValues)\n\n    return { collapses, value: stateful.valueComputed }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-accordion {\n}\n</style>\n"],"names":["AccordionServiceKey","Symbol","defineComponent","name","emits","props","modelValue","type","Array","default","multiply","Boolean","inset","popout","setup","ctx","stateful","useStateful","emit","collapses","ref","provide","isInsideAccordion","getProps","getState","valueComputed","onChildMounted","child","value","push","onChildUnmounted","filter","collapse","onChildChange","accordionValues","map","valueProxy","updateCollapsesValues","forEach","index","onMounted","onUpdated"],"mappings":"2KAWaA,EAAsBC,OAAO,oBAW1C,MAAeC,EAAgB,CAC7BC,KAAM,cACNC,MAAO,CAAC,qBACRC,MAAO,CACLC,WAAY,CAAEC,KAAMC,MAAOC,QAAS,IAAM,IAC1CC,SAAU,CAAEH,KAAMI,QAASF,SAAS,GACpCG,MAAO,CAAEL,KAAMI,QAASF,SAAS,GACjCI,OAAQ,CAAEN,KAAMI,QAASF,SAAS,IAEpCK,MAAOT,EAAOU,GACZ,MAAMC,EAAWC,EAAYZ,EAAOU,EAAIG,MAClCC,EAAYC,EAAgB,IAgClCC,EAAQrB,EATU,CAChBsB,mBAAmB,EACnBC,SAvBe,MAASX,MAAOP,EAAMO,MAAOC,OAAQR,EAAMQ,SAwB1DW,SAAU,IAAMR,EAASS,cACzBC,eAxBsBC,IAAsBR,EAAUS,MAAMC,KAAKF,IAyBjEG,iBAxBwBH,IACxBR,EAAUS,MAAQT,EAAUS,MAAMG,QAAOC,GAAYA,IAAaL,KAwBlEM,cAtBqBN,IACrB,MAAMO,EAAkBf,EAAUS,MAAMO,KAAKH,IACvCA,IAAaL,GAIZtB,EAAMK,WACTsB,EAASI,YAAa,GAJfJ,EAASI,cAUpBpB,EAASS,cAAcG,MAAQM,KAcjC,MAAMG,EAAwB,KAC5BlB,EAAUS,MAAMU,SAAQ,CAACN,EAAoBO,KAC3CP,EAASI,WAAapB,EAASS,cAAcG,MAAMW,OAOvD,OAHAC,EAAUH,GACVI,EAAUJ,GAEH,CAAElB,UAAAA,EAAWS,MAAOZ,EAASS"}