{"version":3,"file":"VaYearPicker.vue_vue&type=script&lang.js","sources":["../../../../../../src/components/va-date-picker/components/VaYearPicker/VaYearPicker.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-year-picker\"\n    ref=\"rootNode\"\n    v-bind=\"containerAttributes\"\n    @keydown.space.prevent\n  >\n    <va-date-picker-cell\n      v-for=\"(year, index) in years\"\n      :key=\"year\"\n      :in-range=\"isInRange(year)\"\n      :selected=\"isSelected(year)\"\n      :disabled=\"isYearDisabled(year)\"\n      :today=\"isToday(year)\"\n      :focused=\"focusedCellIndex === index\"\n      :highlight-today=\"highlightToday\"\n      @click=\"onClick(year); focusedCellIndex = index\"\n      @mouseenter=\"hoveredIndex = index\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      {{ year.getFullYear() }}\n    </va-date-picker-cell>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, toRefs, onMounted, ref, computed, watch } from 'vue'\nimport { VaDatePickerMode, VaDatePickerModelValue, VaDatePickerView } from '../../types/types'\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\nimport { createYearDate, isDatesYearEqual } from '../../utils/date-utils'\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\n\nexport default defineComponent({\n  components: { VaDatePickerCell },\n\n  props: {\n    modelValue: { type: [Date, Array, Object] as PropType<VaDatePickerModelValue> },\n    allowedYears: { type: Function as PropType<(date: Date) => boolean>, default: undefined },\n    highlightToday: { type: Boolean, default: true },\n    mode: { type: String as PropType<VaDatePickerMode>, default: 'auto' },\n    view: { type: Object as PropType<VaDatePickerView>, default: () => ({ type: 'year' }) },\n    startYear: { type: Number, default: () => 1970 },\n    endYear: { type: Number, default: () => new Date().getFullYear() + 50 },\n  },\n\n  emits: ['update:modelValue', 'hover:year', 'click:year'],\n\n  setup (props, { emit }) {\n    const { view } = toRefs(props)\n    const rootNode = ref<HTMLElement | null>(null)\n\n    const generateYearsArray = (start: number, end: number) => {\n      const yearsCount = end - start + 1\n      return Array.from(Array(yearsCount).keys())\n        .map((i) => createYearDate(start + i))\n    }\n\n    const years = computed(() => generateYearsArray(props.startYear, props.endYear))\n\n    const scrollIntoYearIndex = (index: number) => {\n      if (!rootNode.value) { return }\n\n      const scrollHeight = rootNode.value.scrollHeight\n      const rootNodeHeight = rootNode.value.offsetHeight\n      const currentYearOffset = scrollHeight / years.value.length * index\n      const cellSize = scrollHeight / years.value.length\n      const relativeScrollPosition = currentYearOffset - rootNode.value.scrollTop\n\n      if (relativeScrollPosition < 0) {\n        // First element in view\n        rootNode.value.scrollTo({ top: currentYearOffset })\n      } else if (relativeScrollPosition > rootNodeHeight) {\n        // Last element in view\n        rootNode.value.scrollTo({ top: currentYearOffset - rootNodeHeight + cellSize })\n      }\n    }\n\n    const scrollIntoYearIndexCenter = (index: number) => {\n      if (!rootNode.value) { return }\n\n      const scrollHeight = rootNode.value.scrollHeight\n      const rootNodeHeight = rootNode.value.offsetHeight\n      const currentYearOffset = scrollHeight / years.value.length * index\n\n      rootNode.value.scrollTo({ top: currentYearOffset - rootNodeHeight / 2 })\n    }\n\n    onMounted(() => {\n      const currentYearIndex = years.value.findIndex((date) => date.getFullYear() === view.value.year)\n\n      scrollIntoYearIndexCenter(currentYearIndex)\n    })\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('year', years, props, emit)\n\n    const isYearDisabled = (year: Date) => props.allowedYears === undefined ? false : !props.allowedYears(year)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 1,\n      start: 0,\n      end: years.value.length,\n      onFocusIndex: computed(() => years.value.findIndex((date) => date.getFullYear() === view.value.year)),\n      onSelected: (selectedIndex) => onClick(years.value[selectedIndex]),\n    })\n\n    watch(focusedCellIndex, (index) => index !== -1 && scrollIntoYearIndex(index))\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    return {\n      hoveredIndex,\n      years,\n      rootNode,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isYearDisabled,\n      focusedCellIndex,\n      containerAttributes,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-year-picker {\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  grid-gap: var(--va-date-picker-cell-gap);\n  max-height: 100%;\n  position: relative;\n\n  .va-year-picker-cell {\n    width: 100%;\n    height: 30px;\n  }\n}\n</style>\n"],"names":["defineComponent","components","VaDatePickerCell","props","modelValue","type","Date","Array","Object","allowedYears","Function","default","undefined","highlightToday","Boolean","mode","String","view","startYear","Number","endYear","getFullYear","emits","setup","emit","toRefs","rootNode","ref","years","computed","start","end","yearsCount","from","keys","map","i","createYearDate","generateYearsArray","onMounted","index","value","scrollHeight","rootNodeHeight","offsetHeight","currentYearOffset","length","scrollTo","top","scrollIntoYearIndexCenter","findIndex","date","year","hoveredIndex","onClick","isToday","isSelected","isInRange","useDatePicker","focusedCellIndex","containerAttributes","useGridKeyboardNavigation","rowSize","onFocusIndex","onSelected","selectedIndex","watch","cellSize","relativeScrollPosition","scrollTop","scrollIntoYearIndex","isYearDisabled"],"mappings":"8YAiCA,MAAeA,EAAgB,CAC7BC,WAAY,kBAAEC,GAEdC,MAAO,CACLC,WAAY,CAAEC,KAAM,CAACC,KAAMC,MAAOC,SAClCC,aAAc,CAAEJ,KAAMK,SAA+CC,aAASC,GAC9EC,eAAgB,CAAER,KAAMS,QAASH,SAAS,GAC1CI,KAAM,CAAEV,KAAMW,OAAsCL,QAAS,QAC7DM,KAAM,CAAEZ,KAAMG,OAAsCG,QAAS,MAASN,KAAM,UAC5Ea,UAAW,CAAEb,KAAMc,OAAQR,QAAS,IAAM,MAC1CS,QAAS,CAAEf,KAAMc,OAAQR,QAAS,KAAM,IAAIL,MAAOe,cAAgB,KAGrEC,MAAO,CAAC,oBAAqB,aAAc,cAE3CC,MAAOpB,GAAOqB,KAAEA,IACd,MAAMP,KAAEA,GAASQ,EAAOtB,GAClBuB,EAAWC,EAAwB,MAQnCC,EAAQC,GAAS,IANI,EAACC,EAAeC,KACzC,MAAMC,EAAaD,EAAMD,EAAQ,EACjC,OAAOvB,MAAM0B,KAAK1B,MAAMyB,GAAYE,QACjCC,KAAKC,GAAMC,EAAeP,EAAQM,MAGVE,CAAmBnC,EAAMe,UAAWf,EAAMiB,WA8BvEmB,GAAU,KAVwB,CAACC,IACjC,IAAKd,EAASe,MAAS,OAEvB,MAAMC,EAAehB,EAASe,MAAMC,aAC9BC,EAAiBjB,EAASe,MAAMG,aAChCC,EAAoBH,EAAed,EAAMa,MAAMK,OAASN,EAE9Dd,EAASe,MAAMM,SAAS,CAAEC,IAAKH,EAAoBF,EAAiB,KAMpEM,CAFyBrB,EAAMa,MAAMS,WAAWC,GAASA,EAAK9B,gBAAkBJ,EAAKwB,MAAMW,WAK7F,MAAMC,aACJA,EAAYC,QACZA,EAAOC,QACPA,EAAOC,WACPA,EAAUC,UACVA,GACEC,EAAc,OAAQ9B,EAAOzB,EAAOqB,IAIlCmC,iBACJA,EAAgBC,oBAAEA,GAChBC,EAA0B,CAC5BC,QAAS,EACThC,MAAO,EACPC,IAAKH,EAAMa,MAAMK,OACjBiB,aAAclC,GAAS,IAAMD,EAAMa,MAAMS,WAAWC,GAASA,EAAK9B,gBAAkBJ,EAAKwB,MAAMW,SAC/FY,WAAaC,GAAkBX,EAAQ1B,EAAMa,MAAMwB,MAOrD,OAJAC,EAAMP,GAAmBnB,IAAqB,IAAXA,GAtDP,CAACA,IAC3B,IAAKd,EAASe,MAAS,OAEvB,MAAMC,EAAehB,EAASe,MAAMC,aAC9BC,EAAiBjB,EAASe,MAAMG,aAChCC,EAAoBH,EAAed,EAAMa,MAAMK,OAASN,EACxD2B,EAAWzB,EAAed,EAAMa,MAAMK,OACtCsB,EAAyBvB,EAAoBnB,EAASe,MAAM4B,UAE9DD,EAAyB,EAE3B1C,EAASe,MAAMM,SAAS,CAAEC,IAAKH,IACtBuB,EAAyBzB,GAElCjB,EAASe,MAAMM,SAAS,CAAEC,IAAKH,EAAoBF,EAAiBwB,KAwCrBG,CAAoB9B,KACvE0B,EAAMP,GAAmBnB,IAAYa,EAAaZ,MAAQD,KAC1D0B,EAAMb,GAAeb,IAAYmB,EAAiBlB,MAAQD,KAEnD,CACLa,aAAAA,EACAzB,MAAAA,EACAF,SAAAA,EACA4B,QAAAA,EACAC,QAAAA,EACAC,WAAAA,EACAC,UAAAA,EACAc,eAxBsBnB,QAAsCxC,IAAvBT,EAAMM,eAAsCN,EAAMM,aAAa2C,GAyBpGO,iBAAAA,EACAC,oBAAAA"}