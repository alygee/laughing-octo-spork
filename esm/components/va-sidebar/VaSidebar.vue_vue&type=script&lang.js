import{__decorate as t}from"tslib";import{Vue as e,Options as i,prop as o}from"../../node_modules/vue-class-component/dist/vue-class-component.esm-bundler.js";import{getGradientBackground as s}from"../../services/color-config/color-functions.js";import{useColors as r}from"../../services/color-config/color-config.js";const d=e.with(class{constructor(){this.color=o({type:String,default:"background"}),this.textColor=o({type:String,default:void 0}),this.gradient=o({type:Boolean,default:!1}),this.minimized=o({type:Boolean,default:!1}),this.hoverable=o({type:Boolean,default:!1}),this.position=o({type:String,default:"left"}),this.width=o({type:String,default:"16rem"}),this.minimizedWidth=o({type:String,default:"2.5rem"}),this.modelValue=o({type:Boolean,default:!0})}});let l=class extends d{constructor(){super(...arguments),this.isHovered=!1}get isMinimized(){return this.$props.minimized||this.$props.hoverable&&!this.isHovered}get computedStyle(){const{getColor:t,getTextColor:e}=r(),i=t(this.color),o=this.gradient?s(i):i;return{color:this.$props.textColor?t(this.textColor):e(i),background:o,width:this.computedWidth}}get computedWidth(){return this.$props.modelValue?this.isMinimized?this.$props.minimizedWidth:this.$props.width:0}get computedClass(){return{"va-sidebar":!0,"va-sidebar--minimized":this.isMinimized,"va-sidebar--hidden":!this.modelValue,"va-sidebar--right":"right"===this.$props.position}}updateHoverState(t){this.isHovered=!!this.$props.hoverable&&t}};l=t([i({name:"VaSidebar"})],l);var n=l;export default n;
//# sourceMappingURL=VaSidebar.vue_vue&type=script&lang.js.map
