{"version":3,"file":"VaTreeRoot.vue_vue&type=template&id=0e558b08&lang.js","sources":["../../../../src/components/va-tree-view/VaTreeRoot.vue?vue&type=template&id=0e558b08&lang.js"],"sourcesContent":["<template>\n  <div class=\"va-tree-root\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { provide, ref } from 'vue'\nimport { Options, setup, mixins } from 'vue-class-component'\n\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport VaTreeCategory from './VaTreeCategory/VaTreeCategory.vue'\n\n@Options({\n  name: 'VaTreeRoot',\n})\n\nexport default class VaTreeRoot extends mixins(ColorMixin) {\n  setupContext = setup(() => {\n    const categories = ref<VaTreeCategory[]>([])\n\n    const onChildMounted = (category: VaTreeCategory) => {\n      categories.value.push(category)\n    }\n\n    const onChildUnmounted = (removableCategory: VaTreeCategory) => {\n      categories.value = categories.value.filter((category: VaTreeCategory) => category !== removableCategory)\n    }\n\n    const treeRoot = {\n      color: this.$props.color,\n      onChildMounted,\n      onChildUnmounted,\n    }\n\n    provide('treeRoot', treeRoot)\n\n    return {\n      categories,\n    }\n  })\n\n  collapse () {\n    this.$nextTick(() => {\n      this.setupContext.categories.forEach((child: VaTreeCategory) => {\n        child.collapse()\n      })\n    })\n  }\n\n  expand () {\n    this.$nextTick(() => {\n      this.setupContext.categories.forEach((child: VaTreeCategory) => {\n        child.expand()\n      })\n    })\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-tree-root {\n  padding: var(--va-tree-root-padding);\n}\n</style>\n"],"names":["class","_createBlock","_hoisted_1","_renderSlot"],"mappings":"0EACOA,MAAM,2CAAXC,QAAAC,GACEC"}