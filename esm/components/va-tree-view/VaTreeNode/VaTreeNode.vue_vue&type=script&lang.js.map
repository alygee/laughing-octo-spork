{"version":3,"file":"VaTreeNode.vue_vue&type=script&lang.js","sources":["../../../../../src/components/va-tree-view/VaTreeNode/VaTreeNode.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-tree-node\"\n    :class=\"{ 'va-tree-node--highlighted': $props.highlighted }\"\n  >\n    <div\n      class=\"va-tree-node__checkbox\"\n      v-if=\"$slots.checkbox\"\n    >\n      <slot name=\"checkbox\" />\n    </div>\n    <div\n      class=\"va-tree-node__icon\"\n      v-if=\"$props.icon\"\n    >\n      <va-icon\n        :name=\"$props.icon\"\n        :color=\"theme.getColor('info')\"\n        :size=\"24\"\n      />\n    </div>\n    <div class=\"va-tree-node__label\">\n      <slot />\n    </div>\n    <div\n      class=\"va-tree-node__icon-right\"\n      v-if=\"$props.iconRight\"\n      :size=\"24\"\n    >\n      <va-icon\n        :name=\"$props.iconRight\"\n        :color=\"theme.getColor('info')\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { inject } from 'vue'\nimport { mixins, Options, prop, setup, Vue } from 'vue-class-component'\n\nimport ColorMixin from '../../../services/color-config/ColorMixin'\nimport VaIcon from '../../va-icon'\n\nclass TreeNodeProps {\n  highlighted = prop<boolean>(Boolean)\n  icon = prop<string>({ type: String, default: '' })\n  iconRight = prop<string>({ type: String, default: '' })\n  color = prop<string>({ type: String, default: 'primary' })\n}\n\nconst TreeNodePropsMixin = Vue.with(TreeNodeProps)\n\n@Options({\n  name: 'VaTreeNode',\n  components: { VaIcon },\n})\nexport default class VaTreeNode extends mixins(\n  ColorMixin,\n  TreeNodePropsMixin,\n) {\n  setupContext = setup(() => {\n    const treeCategory = inject('treeCategory', {\n      onChildMounted: (value: any) => undefined,\n      onChildUnmounted: (value: any) => undefined,\n    })\n\n    return {\n      treeCategory,\n    }\n  })\n\n  mounted () {\n    if (this.setupContext.treeCategory) {\n      this.setupContext.treeCategory.onChildMounted(this)\n    }\n  }\n\n  beforeUnmount () {\n    if (this.setupContext.treeCategory) {\n      this.setupContext.treeCategory.onChildUnmounted(this)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources/resources\";\n@import 'variables.scss';\n\n.va-tree-node {\n  display: var(--va-tree-node-display);\n  align-items: var(--va-tree-node-align-items);\n\n  .form-group {\n    margin-bottom: 0;\n  }\n\n  &__icon {\n    margin-right: var(--va-tree-node-icon-margin-right);\n  }\n\n  &__icon-right {\n    margin-left: var(--va-tree-node-icon-margin-right);\n  }\n\n  &__label {\n    flex-grow: var(--va-tree-node-label-flex-grow);\n    word-wrap: var(--va-tree-node-label-word-wrap);\n    overflow: var(--va-tree-node-label-overflow);\n  }\n\n  &--highlighted #{&}__label {\n    background-color: var(--va-tree-node-label-highlighted-bg);\n  }\n}\n</style>\n"],"names":["TreeNodePropsMixin","Vue","with","constructor","this","prop","Boolean","type","String","default","VaTreeNode","mixins","ColorMixin","setup","treeCategory","inject","onChildMounted","value","onChildUnmounted","mounted","setupContext","beforeUnmount","Options","name","components","VaIcon"],"mappings":"wTAmDA,MAAMA,EAAqBC,EAAIC,KAP/B,MAAAC,cACEC,iBAAcC,EAAcC,SAC5BF,UAAOC,EAAa,CAAEE,KAAMC,OAAQC,QAAS,KAC7CL,eAAYC,EAAa,CAAEE,KAAMC,OAAQC,QAAS,KAClDL,WAAQC,EAAa,CAAEE,KAAMC,OAAQC,QAAS,eAShD,IAAqBC,EAArB,cAAwCC,EACtCC,EACAZ,IAFFG,kCAIEC,kBAAeS,GAAM,KAMZ,CACLC,aANmBC,EAAO,eAAgB,CAC1CC,eAAiBC,MACjBC,iBAAmBD,YAQvBE,UACMf,KAAKgB,aAAaN,cACpBV,KAAKgB,aAAaN,aAAaE,eAAeZ,MAIlDiB,gBACMjB,KAAKgB,aAAaN,cACpBV,KAAKgB,aAAaN,aAAaI,iBAAiBd,QAvBjCM,KAJpBY,EAAQ,CACPC,KAAM,aACNC,WAAY,CAAEC,OAAAA,MAEKf,SAAAA"}