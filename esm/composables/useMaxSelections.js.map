{"version":3,"file":"useMaxSelections.js","sources":["../../../src/composables/useMaxSelections.ts"],"sourcesContent":["import { PropType, Ref } from 'vue'\n\n/**\n * You could add these props to any component by destructuring them inside props option.\n * @example\n * props: { ...useMaxSelectionsProps, componentsOwnProp, etc. }\n * It's better to add props at the beginning, to make sure that Component own props will be used instead in case of collision\n */\nexport const useMaxSelectionsProps = {\n  maxSelections: {\n    type: Number as PropType<number>,\n    default: undefined,\n  },\n}\n\nexport function useMaxSelections (selections: Ref<any[]>, maxSelections: Ref<number>, emit: (event: 'update:modelValue', ...args: any[]) => void) {\n  const exceedsMaxSelections = (): boolean => {\n    return selections.value.length >= maxSelections.value\n  }\n\n  const addOption = (optionToAdd: any): void => {\n    const newSelectedOptions = [...selections.value, optionToAdd]\n    emit('update:modelValue', newSelectedOptions)\n  }\n\n  return {\n    exceedsMaxSelections,\n    addOption,\n  }\n}\n"],"names":["useMaxSelectionsProps","maxSelections","type","Number","default","undefined","useMaxSelections","selections","emit","exceedsMaxSelections","value","length","addOption","optionToAdd","newSelectedOptions"],"mappings":"MAQaA,EAAwB,CACnCC,cAAe,CACbC,KAAMC,OACNC,aAASC,aAIGC,EAAkBC,EAAwBN,EAA4BO,GAUpF,MAAO,CACLC,qBAV2B,IACpBF,EAAWG,MAAMC,QAAUV,EAAcS,MAUhDE,UAPiBC,IACjB,MAAMC,EAAqB,IAAIP,EAAWG,MAAOG,GACjDL,EAAK,oBAAqBM"}