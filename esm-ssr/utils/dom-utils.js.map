{"version":3,"file":"dom-utils.js","sources":["../../../src/utils/dom-utils.ts"],"sourcesContent":["export const clickedRootScrollbar = (event: MouseEvent) => {\n  return (\n    document.documentElement.clientWidth < event.clientX ||\n    document.documentElement.clientHeight < event.clientY\n  )\n}\n\nexport const ownerDocument = (node?: Element) => {\n  return (node && node.ownerDocument) || document\n}\n\nexport const isLeftClickEvent = (event: MouseEvent) => {\n  return event.button === 0\n}\n\nexport const isModifiedEvent = (event: MouseEvent) => {\n  return event.metaKey || event.altKey || event.ctrlKey || event.shiftKey\n}\n\n// https://github.com/react-bootstrap/dom-helpers/blob/master/src/contains.ts\n// HTML DOM and SVG DOM may have different support levels,\n// so we need to check on context instead of a document root element.\nexport const contains = (context: Element, node: Element) => {\n  if (context.contains) {\n    return context.contains(node)\n  }\n\n  if (context.compareDocumentPosition) {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n    // 16 - node is contained by the context\n    return context === node || !!(context.compareDocumentPosition(node) & 16)\n  }\n\n  return false\n}\n\ntype ListenOptions<K> = {\n  node: HTMLElement | Document | Window;\n  eventName: K extends keyof HTMLElementEventMap ? K : never;\n  handler: EventListenerOrEventListenerObject;\n  options?: boolean | AddEventListenerOptions;\n}\n\nexport const listen = ({\n  node,\n  eventName,\n  handler,\n  options,\n}: ListenOptions<keyof HTMLElementEventMap>) => {\n  node.addEventListener(eventName, handler, options)\n  return () => {\n    node.removeEventListener(eventName, handler, options)\n  }\n}\n"],"names":["clickedRootScrollbar","event","document","documentElement","clientWidth","clientX","clientHeight","clientY","ownerDocument","node","isLeftClickEvent","button","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","contains","context","compareDocumentPosition","listen","eventName","handler","options","addEventListener","removeEventListener"],"mappings":"MAAaA,EAAwBC,GAEjCC,SAASC,gBAAgBC,YAAcH,EAAMI,SAC7CH,SAASC,gBAAgBG,aAAeL,EAAMM,QAIrCC,EAAiBC,GACpBA,GAAQA,EAAKD,eAAkBN,SAG5BQ,EAAoBT,GACP,IAAjBA,EAAMU,OAGFC,EAAmBX,GACvBA,EAAMY,SAAWZ,EAAMa,QAAUb,EAAMc,SAAWd,EAAMe,SAMpDC,EAAW,CAACC,EAAkBT,IACrCS,EAAQD,SACHC,EAAQD,SAASR,KAGtBS,EAAQC,0BAGHD,IAAYT,MAAmD,GAAxCS,EAAQC,wBAAwBV,KAarDW,EAAS,EACpBX,KAAAA,EACAY,UAAAA,EACAC,QAAAA,EACAC,QAAAA,MAEAd,EAAKe,iBAAiBH,EAAWC,EAASC,GACnC,KACLd,EAAKgB,oBAAoBJ,EAAWC,EAASC"}