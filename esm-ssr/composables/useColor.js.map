{"version":3,"file":"useColor.js","sources":["../../../src/composables/useColor.ts"],"sourcesContent":["import { PropType, computed } from 'vue'\nimport { getColor } from '../services/color-config/color-config'\n\n/**\n * You could add these props to any component by destructuring them inside props option.\n * @example\n * props: { ...useColorProps, componentsOwnProp, etc. }\n * It's better to add props at the beginning, to make sure that Component own props will be used instead in case of collision\n */\nexport const useColorProps = {\n  color: {\n    type: String as PropType<string>,\n    default: '',\n  },\n}\n\nexport function useColor (props: any) {\n  const hasColorTheme = true\n  const theme = { getColor }\n\n  const colorComputed = computed(() => {\n    return theme.getColor(props.color)\n  })\n\n  const computeColor = (prop: string, defaultColor?: string) => {\n    return theme.getColor(prop, defaultColor)\n  }\n\n  return {\n    hasColorTheme,\n    theme,\n    colorComputed,\n    computeColor,\n  }\n}\n"],"names":["useColor","props","theme","getColor","colorComputed","computed","color","hasColorTheme","computeColor","prop","defaultColor"],"mappings":"4GAgBgBA,EAAUC,GACxB,MACMC,EAAQ,CAAEC,SAAAA,GAEVC,EAAgBC,GAAS,IACtBH,EAAMC,SAASF,EAAMK,SAO9B,MAAO,CACLC,eAZoB,EAapBL,MAAAA,EACAE,cAAAA,EACAI,aARmB,CAACC,EAAcC,IAC3BR,EAAMC,SAASM,EAAMC"}