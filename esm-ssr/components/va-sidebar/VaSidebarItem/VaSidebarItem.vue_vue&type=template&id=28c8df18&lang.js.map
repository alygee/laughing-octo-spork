{"version":3,"file":"VaSidebarItem.vue_vue&type=template&id=28c8df18&lang.js","sources":["../../../../../src/components/va-sidebar/VaSidebarItem/VaSidebarItem.vue?vue&type=template&id=28c8df18&lang.js"],"sourcesContent":["<template>\n  <router-link custom :to=\"to\" v-slot=\"{ href, navigate }\">\n    <a\n      v-bind=\"$attrs\"\n      class=\"va-sidebar__item va-sidebar-item\"\n      :style=\"computedStyle\"\n      :href=\"href\"\n      @click=\"navigate\"\n      @mouseenter=\"onMouseEnter\"\n      @mouseleave=\"onMouseLeave\"\n      v-on=\"keyboardFocusListeners\"\n    >\n      <slot />\n    </a>\n  </router-link>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref, computed } from 'vue'\nimport { useColors } from '../../../services/color-config/color-config'\nimport useKeyboardOnlyFocus from '../../../composables/useKeyboardOnlyFocus'\n\nconst useHover = () => {\n  const isHovered = ref(false)\n  const onMouseEnter = () => { isHovered.value = true }\n  const onMouseLeave = () => { isHovered.value = false }\n\n  return { isHovered, onMouseEnter, onMouseLeave }\n}\n\nexport default defineComponent({\n  name: 'VaSidebarItem',\n  props: {\n    to: {\n      type: [String, Object] as PropType<string | Record<string, any>>,\n      default: {},\n    },\n    active: { type: Boolean, default: false },\n    textColor: { type: String, default: undefined },\n    activeColor: { type: String, default: 'primary' },\n    hoverColor: { type: String, default: undefined },\n    borderColor: { type: String, default: undefined },\n  },\n  setup (props) {\n    const { isHovered, onMouseEnter, onMouseLeave } = useHover()\n    const { getColor, getHoverColor, getTextColor, getFocusColor } = useColors()\n\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    const computedStyle = computed(() => {\n      const style: Record<string, string> = {}\n\n      style.color = getColor(props.textColor, 'inherit')\n\n      if (isHovered.value) {\n        style['background-color'] = getHoverColor(getColor(props.hoverColor || props.activeColor))\n      }\n\n      if (props.active) {\n        const border = props.borderColor === undefined ? props.activeColor : props.borderColor\n\n        style['border-color'] = getColor(border)\n        style['background-color'] = getColor(props.activeColor)\n        style.color = getTextColor(style['background-color'], getColor('dark'), '#ffffff')\n      }\n\n      if (hasKeyboardFocus.value) {\n        style['background-color'] = getFocusColor(getColor(props.hoverColor || props.activeColor))\n      }\n\n      // Override default link color from VaContent\n      style.color = `${style.color} !important`\n\n      return style\n    })\n\n    return { isHovered, onMouseEnter, onMouseLeave, computedStyle, keyboardFocusListeners }\n  },\n})\n</script>\n\n<style lang=\"scss\" scoped>\n  @import '../variables';\n\n  .va-sidebar__item {\n    border-left: var(--va-sidebar-item-active-border-size) solid transparent;\n    padding-right: var(--va-sidebar-item-active-border-size);\n    display: inline-block;\n    width: 100%;\n    color: inherit !important;\n  }\n</style>\n"],"names":["_mergeProps","custom","to","_ctx","href","navigate","_createVNode","class","style","onClick","onMouseenter","onMouseleave","_toHandlers","_renderSlot"],"mappings":"+SACEA,GAAaC,OAAA,GAAQC,GAAIC,qBAAzB,EAAuCC,KAAAA,EAAMC,SAAAA,yBAC3CC,MAAAN,YAEEO,MAAM,mCACLC,MAAOL,gBACPC,KAAMA,EACNK,QAAOJ,EACPK,aAAYP,eACZQ,aAAYR,gBACbS,EAAMT,4BAENU,sFAVFb,EACUG,UACRI,MAAM,mCACLC,MAAOL,gBACPC,KAAMA"}