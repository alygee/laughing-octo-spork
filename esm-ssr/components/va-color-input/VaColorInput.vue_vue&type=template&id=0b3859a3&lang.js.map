{"version":3,"file":"VaColorInput.vue_vue&type=template&id=0b3859a3&lang.js","sources":["../../../../src/components/va-color-input/VaColorInput.vue?vue&type=template&id=0b3859a3&lang.js"],"sourcesContent":["<template>\n  <div class=\"va-color-input\">\n    <va-color-indicator\n      class=\"va-color-input__dot\"\n      :color=\"context.valueComputed\"\n      :indicator=\"indicator\"\n    />\n    <va-input\n      class=\"va-color-input__input\"\n      v-model=\"context.valueComputed\"\n      :disabled=\"disabled\"\n      placeholder=\"input color\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { useStateful, statefulComponentOptions } from '../../mixins/StatefulMixin/cStatefulMixin'\nimport { Vue, Options, prop, setup } from 'vue-class-component'\nimport VaColorIndicator from '../va-color-indicator'\nimport VaInput from '../va-input'\n\nclass ColorInputProps {\n  modelValue = prop<string>({\n    type: String,\n    default: '',\n  })\n\n  indicator = prop<string>({\n    type: String,\n    default: 'dot',\n    validator: (value: string) => {\n      return ['dot', 'square'].includes(value)\n    },\n  })\n\n  disabled = prop<boolean>({\n    type: Boolean,\n    default: false,\n  })\n}\n\n@Options({\n  name: 'VaColorInput',\n  components: {\n    VaInput,\n    VaColorIndicator,\n  },\n  ...statefulComponentOptions,\n})\nexport default class VaColorInput extends Vue.with(ColorInputProps) {\n  context = setup(() => useStateful(this.$props, this.$emit))\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.va-color-input {\n  display: flex;\n  align-items: center !important;\n\n  .form-group {\n    margin-bottom: 0;\n  }\n\n  &__input {\n    margin-bottom: 0;\n    min-width: 5.6rem;\n\n    &__pointer {\n      cursor: pointer;\n    }\n  }\n}\n\n</style>\n"],"names":["_mergeProps","class","color","_ctx","valueComputed","indicator","disabled","placeholder"],"mappings":"2PACEA,GAAKC,MAAM,iDAEPA,MAAM,sBACLC,MAAOC,UAAQC,cACfC,UAAWF,6BAGZF,MAAM,mCACGE,UAAQC,uCAARD,UAAQC,gBAChBE,SAAUH,WACXI,YAAY"}