{"version":3,"file":"VaBacktop.vue_vue&type=template&id=17846d70&lang.js","sources":["../../../../src/components/va-backtop/VaBacktop.vue?vue&type=template&id=17846d70&lang.js"],"sourcesContent":["<template>\n  <div\n    v-if=\"visible\"\n    class=\"va-backtop\"\n    :style=\"computedStyle\"\n    @click=\"scrollToTop()\"\n  >\n    <slot>\n      <va-button\n        icon=\"expand_less\"\n        :color=\"color\"\n      />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, mixins, prop, Vue } from 'vue-class-component'\n\nimport VaButton from '../va-button'\n\nclass Props {\n  target = prop<Element | string | undefined>({\n    type: [Object, String],\n    default: () => window,\n  })\n\n  visibilityHeight = prop<number>({ type: Number, default: 300 })\n  speed = prop<number>({ type: Number, default: 50 })\n  verticalOffset = prop<string>({ type: String, default: '1rem' })\n  horizontalOffset = prop<string>({ type: String, default: '1rem' })\n  color = prop<string>({ type: String, default: '' })\n  horizontalPosition = prop<string>({\n    type: String,\n    default: 'right',\n    validator: (value: string) => {\n      return ['right', 'left'].includes(value)\n    },\n  })\n\n  verticalPosition = prop<string>({\n    type: String,\n    default: 'bottom',\n    validator: (value: string) => {\n      return ['bottom', 'top'].includes(value)\n    },\n  })\n}\n\nconst PropsMixin = Vue.with(Props)\n\n@Options({\n  name: 'VaBacktop',\n  components: { VaButton },\n})\nexport default class VaBacktop extends mixins(\n  PropsMixin,\n) {\n  visible = false\n  scrolled = false\n  interval = 0\n\n  get computedStyle () {\n    return {\n      [this.verticalPosition]: this.verticalOffset,\n      [this.horizontalPosition]: this.horizontalOffset,\n    }\n  }\n\n  get targetElement (): Element {\n    return typeof this.target === 'string'\n      ? document.querySelector(this.target)\n      : (this.target || this.$el.parentElement)\n  }\n\n  handleScroll (): void {\n    this.visible = this.targetElement.scrollTop > this.visibilityHeight\n  }\n\n  scrollToTop (): void {\n    if (this.scrolled) {\n      return\n    }\n    this.scrolled = true\n    this.interval = window.setInterval(() => {\n      const next = Math.floor(this.targetElement.scrollTop - this.speed)\n      if (this.targetElement.scrollTop === 0) {\n        clearInterval(this.interval)\n        this.scrolled = false\n      } else {\n        this.targetElement.scrollTo(0, next)\n      }\n    }, 15)\n  }\n\n  mounted () {\n    this.targetElement.addEventListener('scroll', this.handleScroll)\n  }\n\n  beforeUnmount () {\n    this.targetElement.removeEventListener('scroll', this.handleScroll)\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import '../../styles/resources/resources';\n@import 'variables';\n\n.va-backtop {\n  position: var(--va-backtop-position);\n  top: var(--va-backtop-top);\n  left: var(--va-backtop-left);\n  right: var(--va-backtop-right);\n  bottom: var(--va-backtop-bottom);\n  cursor: var(--va-backtop-cursor);\n  z-index: var(--va-backtop-z-index);\n}\n</style>\n"],"names":["_ctx","_mergeProps","class","style","icon","color"],"mappings":"mMAEUA,sBADRC,GAEEC,MAAM,aACLC,MAAOH,8DAKJI,KAAK,cACJC,MAAOL"}