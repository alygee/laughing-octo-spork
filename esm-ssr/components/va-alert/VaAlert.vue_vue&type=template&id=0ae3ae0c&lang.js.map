{"version":3,"file":"VaAlert.vue_vue&type=template&id=0ae3ae0c&lang.js","sources":["../../../../src/components/va-alert/VaAlert.vue?vue&type=template&id=0ae3ae0c&lang.js"],"sourcesContent":["<template>\n  <transition\n    v-if=\"valueComputed\"\n    name=\"fade\"\n  >\n    <div\n      class=\"va-alert\"\n      :style=\"alertStyle\"\n    >\n      <div\n        :style=\"borderStyle\"\n        :class=\"borderClass\"\n        class=\"va-alert__border\"\n      />\n\n      <div\n        :style=\"contentStyle\"\n        class=\"va-alert__icon\"\n        v-if=\"hasIcon\"\n      >\n        <slot name=\"icon\">\n          <va-icon\n            :name=\"icon\"\n          />\n        </slot>\n      </div>\n\n      <div\n        :style=\"contentStyle\"\n        class=\"va-alert__content\"\n      >\n        <div\n          :style=\"titleStyle\"\n          class=\"va-alert__title\"\n          v-if=\"hasTitle\"\n        >\n          <slot name=\"title\">\n            {{ title }}\n          </slot>\n        </div>\n        <slot>\n          {{ description }}\n        </slot>\n      </div>\n\n      <div\n        class=\"va-alert__close\"\n        v-if=\"closeable\"\n      >\n        <div\n          :style=\"contentStyle\"\n          class=\"va-alert__close--closeable\"\n          @click=\"hide()\"\n        >\n          <slot name=\"close\">\n            <va-icon\n              v-if=\"!closeText\"\n              :name=\"closeIcon\"\n              size=\"small\"\n            />\n            {{ closeText }}\n          </slot>\n        </div>\n      </div>\n\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { Options, prop, mixins, Vue } from 'vue-class-component'\n\nimport {\n  getHoverColor,\n  getBoxShadowColor, getTextColor,\n} from '../../services/color-config/color-functions'\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\n\nimport VaIcon from '../va-icon'\n\nclass AlertProps {\n  color = prop<string>({ type: String, default: 'primary' })\n  title = prop<string>({ type: String, default: '' })\n  description = prop<string>({ type: String, default: '' })\n  icon = prop<string>({ type: String, default: '' })\n  closeText = prop<string>({ type: String, default: '' })\n  closeable = prop<boolean>({ type: Boolean, default: false })\n  dense = prop<boolean>({ type: Boolean, default: false })\n  outline = prop<boolean>({ type: Boolean, default: false })\n  center = prop<boolean>({ type: Boolean, default: false })\n  borderColor = prop<string>({ type: String, default: '' })\n  border = prop<string>({\n    type: String,\n    default: '',\n    validator: (value: string) => {\n      return ['top', 'right', 'bottom', 'left', ''].includes(value)\n    },\n  })\n\n  modelValue = prop<boolean>({\n    type: Boolean,\n    default: true,\n  })\n}\n\nconst AlertPropsMixin = Vue.with(AlertProps)\nconst dark = 'var(--va-dark)'\n\n@Options({\n  name: 'VaAlert',\n  components: { VaIcon },\n})\nexport default class VaAlert extends mixins(\n  StatefulMixin,\n  ColorMixin,\n  AlertPropsMixin,\n) {\n  get hasIcon () {\n    return this.icon || this.$slots.icon\n  }\n\n  get hasTitle () {\n    return this.$props.title || this.$slots.title\n  }\n\n  get alertStyle () {\n    let background = this.colorComputed\n    let boxShadow = 'none'\n    if (this.outline) {\n      background = 'transparent'\n    }\n    if (this.border) {\n      background = '#ffffff'\n      boxShadow = 'var(--va-alert-box-shadow)'\n    }\n    return {\n      border: this.outline && `1px solid ${this.colorComputed}`,\n      background: background,\n      boxShadow: boxShadow,\n      padding: this.dense && '0.25rem 0.75rem',\n    }\n  }\n\n  get contentStyle () {\n    let color = getTextColor(this.colorComputed)\n    if (this.outline) {\n      color = this.colorComputed\n    }\n    if (this.border) {\n      color = dark\n    }\n    return {\n      alignItems: this.center && 'center',\n      color: color,\n    }\n  }\n\n  get titleStyle () {\n    let color = getTextColor(this.colorComputed)\n    if (this.outline) {\n      color = this.colorComputed\n    }\n    if (this.border) {\n      color = this.colorComputed\n    }\n    return {\n      color: color,\n    }\n  }\n\n  get borderClass () {\n    return `va-alert__border--${this.border}`\n  }\n\n  get borderStyle () {\n    return {\n      backgroundColor: this.$props.borderColor\n        ? this.theme.getColor(this.$props.borderColor)\n        : this.colorComputed,\n    }\n  }\n\n  get closeIcon () {\n    return !this.closeText ? 'close' : this.closeText\n  }\n\n  hide (): void {\n    this.valueComputed = false\n  }\n}\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources/resources\";\n@import \"variables\";\n\n.va-alert {\n  position: var(--va-alert-position);\n  padding: var(--va-alert-padding-y) var(--va-alert-padding-x);\n  margin: var(--va-alert-margin-y) auto;\n  display: var(--va-alert-display);\n  align-items: var(--va-alert-align-items);\n  border: var(--va-alert-border-width, var(--va-control-border)) solid transparent;\n  border-radius: var(--va-alert-border-radius, var(--va-block-border-radius));\n\n  &__border {\n    content: '';\n    position: absolute;\n\n    &--top {\n      border-radius: var(--va-alert-top-border-radius);\n      width: 100%;\n      height: var(--va-alert-stripe-border-size);\n      top: 0;\n      left: 0;\n    }\n\n    &--right {\n      border-radius: var(--va-alert-right-border-radius);\n      height: 100%;\n      width: var(--va-alert-stripe-border-size);\n      bottom: 0;\n      right: 0;\n    }\n\n    &--bottom {\n      border-radius: var(--va-alert-bottom-border-radius);\n      width: 100%;\n      height: var(--va-alert-stripe-border-size);\n      bottom: 0;\n      left: 0;\n    }\n\n    &--left {\n      border-radius: var(--va-alert-left-border-radius);\n      height: 100%;\n      width: var(--va-alert-stripe-border-size);\n      bottom: 0;\n      left: 0;\n    }\n  }\n\n  &__icon {\n    display: flex;\n    align-items: center;\n    padding-right: var(--va-alert-padding-x);\n  }\n\n  &__title {\n    display: flex;\n    align-items: center;\n    font-weight: var(--va-alert-title-font-weight);\n  }\n\n  &__content {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex-grow: 1;\n    color: var(--va-alert-color);\n  }\n\n  &__close {\n    padding-left: var(--va-alert-close-padding-x);\n    font-size: var(--va-alert-close-font-size);\n\n    &--closeable {\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n    }\n  }\n\n  @include media-breakpoint-down(xs) {\n    @at-root {\n      .va-alert {\n        &__content {\n          flex-direction: column;\n          align-items: flex-start;\n        }\n\n        &__close {\n          align-self: flex-start;\n          display: flex;\n          align-items: flex-start;\n          padding: 0 var(--va-alert-close-padding-x) 0 0;\n          margin: 0;\n        }\n      }\n    }\n  }\n}\n</style>\n"],"names":["_ctx","_mergeProps","class","style","name","size"],"mappings":"6PAEUA,4BAGNC,GACEC,MAAM,WACLC,MAAOH,mCAGEA,6BACAA,8CAOFA,8BAFEA,8EAMHI,KAAMJ,2EAMHA,+CAMAA,+BAFEA,8EAKHA,wFAIFA,qCAMCA,6DAGIA,oFAMGA,sCACNI,KAAMJ,YACPK,KAAK,0BAEJL"}