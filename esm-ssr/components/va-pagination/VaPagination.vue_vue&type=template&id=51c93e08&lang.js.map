{"version":3,"file":"VaPagination.vue_vue&type=template&id=51c93e08&lang.js","sources":["../../../../src/components/va-pagination/VaPagination.vue?vue&type=template&id=51c93e08&lang.js"],"sourcesContent":["<template>\n  <va-button-group\n    v-if=\"showPagination\"\n    class=\"va-pagination\"\n    :flat=\"$props.flat\"\n    :size=\"$props.size\"\n    :color=\"$props.color\"\n    outline\n  >\n    <va-button\n      v-if=\"showBoundaryLinks\"\n      :disabled=\"$props.disabled || currentValue === 1\"\n      :icon=\"$props.boundaryIconLeft\"\n      @click=\"onUserInput(1)\"\n    />\n    <va-button\n      v-if=\"showDirectionLinks\"\n      outline\n      :disabled=\"$props.disabled || currentValue === 1\"\n      :icon=\"$props.directionIconLeft\"\n      @click=\"onUserInput(currentValue - 1)\"\n    />\n    <slot v-if=\"!$props.input\">\n      <va-button\n        :style=\"activeButtonStyle(n)\"\n        outline\n        v-for=\"(n, key) in paginationRange\"\n        :key=\"key\"\n        :disabled=\"$props.disabled || n === '...'\"\n        :class=\"{\n          'va-button--ellipsis': n === '...',\n        }\"\n\n        @click=\"onUserInput(n)\"\n      >\n        {{ n }}\n      </va-button>\n    </slot>\n    <input\n      v-else\n      ref=\"htmlInput\"\n      class=\"va-pagination__input va-button\"\n      :style=\"{\n        cursor: 'default',\n        color: computeColor($props.color),\n        opacity: $props.disabled ? 0.4 : 1\n      }\"\n      :class=\"{ 'va-pagination__input--flat': $props.flat }\"\n      @keydown.enter=\"changeValue\"\n      @focus=\"focusInput\"\n      @blur=\"changeValue\"\n      :disabled=\"$props.disabled\"\n      :placeholder=\"`${currentValue}/${lastPage}`\"\n      v-model=\"inputValue\"\n    />\n    <va-button\n      v-if=\"showDirectionLinks\"\n      outline\n      :disabled=\"$props.disabled || currentValue === lastPage\"\n      :icon=\"$props.directionIconRight\"\n      @click=\"onUserInput(currentValue + 1)\"\n    />\n    <va-button\n      v-if=\"showBoundaryLinks\"\n      outline\n      :disabled=\"$props.disabled || currentValue === lastPage\"\n      :icon=\"$props.boundaryIconRight\"\n      @click=\"onUserInput(lastPage)\"\n    />\n  </va-button-group>\n</template>\n\n<script lang=\"ts\">\nimport { watch } from 'vue'\nimport { Options, mixins, prop, Vue } from 'vue-class-component'\n\nimport { Ref } from '../../utils/decorators'\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\nimport VaButtonGroup from '../va-button-group'\nimport VaButton from '../va-button'\nimport VaInput from '../va-input'\n\nimport { setPaginationRange } from './setPaginationRange'\n\nclass PaginationProps {\n  modelValue = prop<number>({ type: Number, default: 1 })\n  visiblePages = prop<number>({ type: Number, default: 0 })\n  pages = prop<number>({ type: Number, default: 0 })\n  disabled = prop<boolean>({ type: Boolean, default: false })\n  color = prop<string>({ type: String, default: 'primary' })\n  size = prop<string>({\n    type: String,\n    default: 'medium',\n    validator: (v: string) => ['medium', 'small', 'large'].includes(v),\n  })\n\n  boundaryLinks = prop<boolean>({ type: Boolean, default: true })\n  boundaryNumbers = prop<boolean>({ type: Boolean, default: false })\n  directionLinks = prop<boolean>({ type: Boolean, default: true })\n  input = prop<boolean>({ type: Boolean, default: false })\n  hideOnSinglePage = prop<boolean>({ type: Boolean, default: false })\n  flat = prop<boolean>({ type: Boolean, default: false })\n  total = prop<number>({ type: Number, default: null })\n  pageSize = prop<number>({ type: Number, default: null })\n  boundaryIconLeft = prop<string>({ type: String, default: 'first_page' })\n  boundaryIconRight = prop<string>({ type: String, default: 'last_page' })\n  directionIconLeft = prop<string>({ type: String, default: 'chevron_left' })\n  directionIconRight = prop<string>({ type: String, default: 'chevron_right' })\n}\n\nconst PaginationPropsMixin = Vue.with(PaginationProps)\n\n@Options({\n  name: 'VaPagination',\n  components: {\n    VaButtonGroup,\n    VaButton,\n    VaInput,\n  },\n})\nexport default class VaPagination extends mixins(\n  StatefulMixin,\n  ColorMixin,\n  PaginationPropsMixin,\n) {\n  inputValue = ''\n\n  @Ref() readonly htmlInput!: HTMLInputElement\n\n  created () {\n    watch([() => this.useTotal, () => this.$props.pages], () => {\n      if (this.useTotal && this.$props.pages) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error('Please, use either `total` and `page-size` props, or `pages`.')\n        }\n      }\n    })\n  }\n\n  get lastPage (): number {\n    const { total, pageSize, pages } = this.$props\n    return this.useTotal\n      ? Math.ceil((total as number) / (pageSize as number)) || 1\n      : pages as number\n  }\n\n  get paginationRange () {\n    const { visiblePages, total, pageSize, boundaryNumbers, pages } = this.$props\n    const value = this.currentValue || 1\n    const totalPages = this.useTotal ? Math.ceil((total as number) / (pageSize as number)) : pages\n    return setPaginationRange(value, visiblePages as number, totalPages as number, boundaryNumbers)\n  }\n\n  get showBoundaryLinks () {\n    const { visiblePages, boundaryLinks, boundaryNumbers, input } = this.$props\n    return input ||\n      ((visiblePages && this.lastPage > visiblePages) && boundaryLinks && !boundaryNumbers)\n  }\n\n  get showDirectionLinks () {\n    const { visiblePages, directionLinks, input } = this.$props\n    return input || ((visiblePages && this.lastPage > visiblePages) && directionLinks)\n  }\n\n  get showPagination () {\n    return this.lastPage > 1 || (!this.$props.hideOnSinglePage && this.lastPage <= 1)\n  }\n\n  get fontColor () {\n    return this.computeColor(this.$props.color as string)\n  }\n\n  get useTotal () {\n    const { total, pageSize } = this.$props\n    return !!((total || total === 0) && pageSize)\n  }\n\n  get currentValue () {\n    if (this.useTotal) {\n      return Math.ceil(this.valueComputed / (this.$props.pageSize as number)) || 1\n    } else {\n      return this.valueComputed\n    }\n  }\n\n  set currentValue (value) {\n    this.valueComputed = value\n  }\n\n  focusInput () {\n    const { currentValue, $nextTick } = this\n    this.inputValue = currentValue\n    $nextTick(() => this.htmlInput.setSelectionRange(0, this.htmlInput.value.length))\n  }\n\n  onUserInput (pageNum: number) {\n    if (pageNum < 1 || pageNum > this.lastPage) {\n      return\n    }\n    this.currentValue = this.useTotal\n      ? (pageNum - 1) * (this.$props.pageSize as number) + 1\n      : pageNum\n  }\n\n  resetInput () {\n    this.inputValue = ''\n    this.htmlInput.blur()\n  }\n\n  changeValue () {\n    if (this.inputValue === this.currentValue) { this.resetInput() }\n    if (!this.inputValue.length) { return }\n    let pageNum = Number.parseInt(this.inputValue)\n    switch (true) {\n    case pageNum < 1:\n      pageNum = 1\n      break\n    case pageNum > this.lastPage:\n      pageNum = this.lastPage\n      break\n    case isNaN(pageNum):\n      pageNum = this.currentValue\n      break\n    default:\n      break\n    }\n    this.onUserInput(pageNum)\n    this.resetInput()\n  }\n\n  activeButtonStyle (buttonValue: number) {\n    if (buttonValue === this.currentValue) {\n      return {\n        backgroundColor: this.colorComputed,\n        color: '#ffffff',\n      }\n    }\n    return {\n      color: this.fontColor,\n    }\n  }\n}\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources/resources\";\n@import 'variables';\n\n.va-pagination {\n  &__input {\n    border-style: var(--va-pagination-input-border-style);\n    border-width: var(--va-pagination-input-border-width);\n    text-align: var(--va-pagination-input-text-align);\n    font-size: var(--va-pagination-input-font-size);\n\n    &--flat {\n      border-top-width: var(--va-pagination-input-flat-border-top-width);\n    }\n  }\n\n  .va-button {\n    &.va-input {\n      cursor: default;\n    }\n\n    &--ellipsis {\n      cursor: default;\n      opacity: 1;\n    }\n\n    &--ellipsis > .va-button__content {\n      opacity: 0.4;\n    }\n  }\n}\n</style>\n"],"names":["_ctx","_mergeProps","class","flat","size","color","outline","_createBlock","disabled","icon","boundaryIconLeft","onClick","directionIconLeft","input","ref","style","onKeydown","onFocus","onBlur","placeholder","_renderSlot","n","key","directionIconRight","boundaryIconRight"],"mappings":"ufAEUA,uBADRC,GAEEC,MAAM,gBACLC,KAAMH,SAAOG,KACbC,KAAMJ,SAAOI,KACbC,MAAOL,SAAOK,MACfC,QAAA,mBANF,yBASUN,EAAiB,uBADzBO,WAEGC,SAAUR,SAAOQ,cAAYR,eAC7BS,KAAMT,SAAOU,iBACbC,WAAOX,sEAGFA,EAAkB,wBAD1BO,WAEED,QAAA,GACCE,SAAUR,SAAOQ,cAAYR,eAC7BS,KAAMT,SAAOY,kBACbD,WAAOX,cAAYA,uEAETA,SAAOa,aAgBpBN,iBAEEO,IAAI,YACJZ,OAAM,+DAMkCF,SAAOG,OAL9CY,6FAMAC,YAAehB,yBACfiB,QAAOjB,aACPkB,OAAMlB,cACNQ,SAAUR,SAAOQ,SACjBW,eAAgBnB,kBAAgBA,sCACxBA,8GAAAA,gBA/BXoB,8BAAA,YACEb,WAGqBP,oBAAXqB,EAAGC,SAHbf,KACGQ,MAAOf,oBAAkBqB,GAC1Bf,QAAA,GAECgB,IAAKA,EACLd,SAAUR,SAAOQ,kBAAYa,EAC7BnB,wCAIAS,WAAOX,cAAYqB,gBAEpB,SAAGA,uEAqBCrB,EAAkB,wBAD1BO,WAEED,QAAA,GACCE,SAAUR,SAAOQ,UAAYR,iBAAiBA,WAC9CS,KAAMT,SAAOuB,mBACbZ,WAAOX,cAAYA,uEAGdA,EAAiB,uBADzBO,WAEED,QAAA,GACCE,SAAUR,SAAOQ,UAAYR,iBAAiBA,WAC9CS,KAAMT,SAAOwB,kBACbb,WAAOX,cAAYA,kEAzDdA,2BACLQ,SAAUR,SAAOQ,cAAYR,eAC7BS,KAAMT,SAAOU,gDAIRV,4BACNM,QAAA,GACCE,SAAUR,SAAOQ,cAAYR,eAC7BS,KAAMT,SAAOY,iDAGHZ,SAAOa,+JAyBsBb,SAAOG,4CAIpCH,SAAe,4BACzB,iBAAgBA,kBAAgBA,0BACxBA,0EA3BYA,oBAAXqB,EAAGC,YAFVP,MAAOf,oBAAkBqB,GAC1Bf,QAAA,GAECgB,IAAKA,EACLd,SAAUR,SAAOQ,kBAAYa,EAC7BnB,qDANH,6BAYKmB,cAAAA,oDAqBCrB,4BACNM,QAAA,GACCE,SAAUR,SAAOQ,UAAYR,iBAAiBA,WAC9CS,KAAMT,SAAOuB,kDAIRvB,2BACNM,QAAA,GACCE,SAAUR,SAAOQ,UAAYR,iBAAiBA,WAC9CS,KAAMT,SAAOwB"}