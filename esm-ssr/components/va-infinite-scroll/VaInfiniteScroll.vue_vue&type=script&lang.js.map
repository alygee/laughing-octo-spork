{"version":3,"file":"VaInfiniteScroll.vue_vue&type=script&lang.js","sources":["../../../../src/components/va-infinite-scroll/VaInfiniteScroll.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"$props.tag\"\n    class=\"va-infinite-scroll\"\n    :class=\"{'va-infinite-scroll--reversed': $props.reverse}\"\n  >\n    <slot\n      name=\"default\"\n      ref=\"content\"\n    />\n    <div\n      class=\"va-infinite-scroll__spinner\"\n      :class=\"{'va-infinite-scroll__spinner--invisible': !fetching}\"\n      ref=\"loadingSlotContainer\"\n    >\n      <slot\n        name=\"loading\"\n        v-if=\"!$props.disabled\"\n      >\n        <div\n          ref=\"defaultSpinner\"\n          class=\"va-infinite-scroll__spinner__default\"\n        >\n          <va-progress-circle\n            size=\"small\"\n            :thickness=\"0.15\"\n            :color=\"error ? colors.danger : colors.primary\"\n            indeterminate\n          />\n        </div>\n      </slot>\n    </div>\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { debounce } from 'lodash-es'\nimport { watch } from 'vue'\nimport { mixins, Options, prop, Vue } from 'vue-class-component'\n\nimport { sleep } from '../../services/utils'\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport { VaProgressCircle } from '../va-progress-bar'\n\nclass InfiniteScrollProps {\n  load = prop<Function>({ type: Function, required: true })\n  offset = prop<number>({ type: Number, default: 500 })\n  reverse = prop<boolean>({ type: Boolean, default: false })\n  disabled = prop<boolean>({ type: Boolean, default: false })\n  scrollTarget = prop<Element | string>({ type: [Object, String], default: null })\n  debounce = prop<number>({ type: Number, default: 100 })\n  tag = prop<string>({ type: String, default: 'div' })\n}\n\nconst InfiniteScrollPropsMixin = Vue.with(InfiniteScrollProps)\n\n@Options({\n  name: 'VaInfiniteScroll',\n  components: { VaProgressCircle },\n})\nexport default class VaInfiniteScroll extends mixins(\n  ColorMixin,\n  InfiniteScrollPropsMixin,\n) {\n  index = 0\n  fetching = false\n  error = false\n  initialHeight: any = null\n  debouncedLoad!: any\n  scrollTop!: number\n\n  created () {\n    watch(() => this.$props.disabled, (value) => {\n      if (value) {\n        this.stop()\n      } else {\n        this.resume()\n      }\n    })\n\n    watch(() => this.$props.debounce, (value) => {\n      this.setDebounce(value as number)\n    })\n  }\n\n  get scrollAmount () {\n    return this.$props.offset as number + 1 + this.$el.offsetHeight\n  }\n\n  get scrollTargetElement () {\n    return typeof this.$props.scrollTarget === 'string'\n      ? document.querySelector(this.$props.scrollTarget)\n      : this.$props.scrollTarget || this.$el.parentElement\n  }\n\n  get colors () {\n    return {\n      primary: this.theme.getColor('primary', '#23e066'),\n      danger: this.theme.getColor('danger', '#e34b4a'),\n    }\n  }\n\n  onLoad () {\n    if (this.$props.disabled || this.error || this.fetching) {\n      return\n    }\n\n    const { scrollTop, scrollHeight } = this.scrollTargetElement\n    const containerHeight = this.scrollTargetElement.offsetHeight\n    const isLoadingRequired = this.$props.reverse\n      ? scrollTop < this.scrollAmount\n      : scrollTop + containerHeight + this.scrollAmount >= scrollHeight\n    if (!isLoadingRequired) { return }\n\n    this.fetching = true\n    this.scrollTop = this.$props.reverse ? 0 : (this as any).$el.offsetHeight\n    this.initialHeight = this.$el.offsetHeight\n    this.$props.load()\n      .then(this.finishLoading).catch(this.onError)\n  }\n\n  onError () {\n    this.stop()\n    this.error = true\n    this.fetching = true\n    sleep(1200)\n      .then(this.stopErrorDisplay)\n      .then(this.resume)\n  }\n\n  stopErrorDisplay () {\n    this.scrollTargetElement.scrollTop = this.$props.reverse\n      ? this.scrollAmount\n      : this.scrollTargetElement.scrollTop - this.scrollTargetElement.offsetHeight - this.scrollAmount\n    this.error = false\n    this.fetching = false\n  }\n\n  finishLoading () {\n    this.fetching = false\n    if (this.$props.reverse) {\n      this.scrollTargetElement.scrollTop = this.$el.offsetHeight - this.initialHeight\n    }\n  }\n\n  resume () {\n    if (!this.$props.disabled) {\n      this.scrollTargetElement.addEventListener(\n        'scroll',\n        this.debouncedLoad,\n        {\n          passive: true,\n        },\n      )\n    }\n  }\n\n  stop () {\n    if (this.$props.disabled) {\n      return\n    }\n\n    this.fetching = false\n    this.scrollTargetElement.removeEventListener(\n      'scroll',\n      this.debouncedLoad,\n      { passive: true },\n    )\n  }\n\n  setDebounce (value: number) {\n    this.debouncedLoad = debounce(this.onLoad, value)\n  }\n\n  mounted () {\n    if (!this.scrollTargetElement) {\n      return\n    }\n    this.scrollTargetElement.style.overflowY = 'scroll'\n\n    if (this.$props.reverse) {\n      this.scrollTargetElement.scrollTop = this.scrollTargetElement.scrollHeight\n    }\n\n    this.setDebounce(this.$props.debounce as number)\n    this.scrollTargetElement.addEventListener('scroll', this.debouncedLoad, {\n      passive: true,\n    })\n  }\n\n  beforeUnmount () {\n    if (!this.$props.disabled) {\n      this.scrollTargetElement.removeEventListener(\n        'scroll',\n        this.debouncedLoad,\n        { passive: true },\n      )\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"../../styles/resources/resources\";\n@import 'variables';\n\n.va-infinite-scroll {\n  display: var(--va-infinite-scroll-display);\n  flex-direction: var(--va-infinite-scroll-flex-direction);\n\n  &--reversed {\n    flex-direction: var(--va-infinite-scroll-reversed-flex-direction);\n  }\n\n  &__spinner {\n    &__default {\n      @include flex-center();\n\n      width: var(--va-infinite-scroll-spinner-default-width);\n      min-height: var(--va-infinite-scroll-spinner-default-min-height);\n    }\n\n    &--invisible {\n      visibility: hidden !important;\n    }\n\n    @include flex-center();\n  }\n}\n</style>\n"],"names":["InfiniteScrollPropsMixin","Vue","with","constructor","this","prop","type","Function","required","Number","default","Boolean","Object","String","VaInfiniteScroll","mixins","ColorMixin","created","watch","$props","disabled","value","stop","resume","debounce","setDebounce","scrollAmount","offset","$el","offsetHeight","scrollTargetElement","scrollTarget","document","querySelector","parentElement","colors","primary","theme","getColor","danger","onLoad","error","fetching","scrollTop","scrollHeight","containerHeight","reverse","initialHeight","load","then","finishLoading","catch","onError","sleep","stopErrorDisplay","addEventListener","debouncedLoad","passive","removeEventListener","mounted","style","overflowY","beforeUnmount","Options","name","components","VaProgressCircle"],"mappings":"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"}