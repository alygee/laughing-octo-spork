{"version":3,"file":"VaButtonToggle.vue_vue&type=template&id=39f0c05a&lang.js","sources":["../../../../src/components/va-button-toggle/VaButtonToggle.vue?vue&type=template&id=39f0c05a&lang.js"],"sourcesContent":["<template>\n  <div class=\"va-button-toggle\">\n    <va-button-group\n      :color=\"color\"\n      :textColor=\"textColor\"\n      :rounded=\"rounded\"\n      :outline=\"outline\"\n      :flat=\"flat\"\n      :gradient=\"gradient\"\n    >\n      <va-button\n        v-for=\"option in options\"\n        :key=\"option.value\"\n        :style=\"buttonStyle(option.value)\"\n        :disabled=\"disabled\"\n        :size=\"size\"\n        :class=\"buttonClass(option.value)\"\n        @click=\"changeValue(option.value)\"\n      >\n        {{ option.label }}\n      </va-button>\n    </va-button-group>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, prop, mixins, Vue } from 'vue-class-component'\n\nimport {\n  getFocusColor, getTextColor,\n  shiftHSLAColor,\n} from '../../services/color-config/color-functions'\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport VaButton from '../va-button'\nimport VaButtonGroup from '../va-button-group'\n\nclass ButtonToggleProps {\n  options = prop<any[]>({ type: Array, default: () => [] })\n  color = prop<string>({ type: String, default: 'primary' })\n  textColor = prop<string>({ type: String, default: undefined })\n  activeButtonTextColor = prop<string>({ type: String, default: '#fff' })\n  modelValue = prop<string | number>({ type: [String, Number], default: '' })\n  outline = prop<boolean>({ type: Boolean, default: false })\n  flat = prop<boolean>({ type: Boolean, default: false })\n  rounded = prop<boolean>({ type: Boolean, default: true })\n  disabled = prop<boolean>({ type: Boolean, default: false })\n  size = prop<string>({\n    type: String,\n    default: 'medium',\n    validator: (modelValue: string) => {\n      return ['medium', 'small', 'large'].includes(modelValue)\n    },\n  })\n\n  toggleColor = prop<string>({ type: String, default: '' })\n  gradient = prop<boolean>({ type: Boolean, default: false })\n}\n\nconst ButtonTogglePropsMixin = Vue.with(ButtonToggleProps)\n\n@Options({\n  name: 'VaButtonToggle',\n  components: {\n    VaButtonGroup,\n    VaButton,\n  },\n  emits: ['update:modelValue'],\n})\nexport default class VaButtonToggle extends mixins(\n  ColorMixin,\n  ButtonTogglePropsMixin,\n) {\n  buttonColor (buttonValue: any) {\n    return buttonValue === this.modelValue && this.toggleColor ? this.toggleColor : this.color\n  }\n\n  buttonStyle (buttonValue: any) {\n    if (buttonValue === this.modelValue) {\n      let color = this.activeButtonTextColor ? this.activeButtonTextColor : getTextColor(this.colorComputed)\n      let background = this.toggleColor ? this.theme.getColor(this.toggleColor) : shiftHSLAColor(this.colorComputed, { l: -6 })\n      if (this.outline || this.flat) {\n        background = this.toggleColor ? this.theme.getColor(this.toggleColor) : this.colorComputed\n        color = this.activeButtonTextColor\n      }\n      return {\n        background: background,\n        color: color,\n      }\n    }\n  }\n\n  buttonClass (buttonValue: any) {\n    return {\n      'va-button--active': buttonValue === this.modelValue,\n    }\n  }\n\n  changeValue (value: any) {\n    this.$emit('update:modelValue', value)\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.va-button-toggle {\n  .va-button {\n    &:focus,\n    &:hover {\n      box-shadow: none !important;\n    }\n  }\n}\n</style>\n"],"names":["_mergeProps","class","color","_ctx","textColor","rounded","outline","flat","gradient","_createBlock","option","key","value","style","disabled","size","onClick","label"],"mappings":"8WACEA,GAAKC,MAAM,mCAENC,MAAOC,QACPC,UAAWD,YACXE,QAASF,UACTG,QAASH,UACTI,KAAMJ,OACNK,SAAUL,wBANb,gCAQEM,WACmBN,WAAVO,QADTD,KAEGE,IAAKD,EAAOE,MACZC,MAAOV,cAAYO,EAAOE,OAC1BE,SAAUX,WACVY,KAAMZ,OACNF,MAAOE,cAAYO,EAAOE,OAC1BI,WAAOb,cAAYO,EAAOE,oBAE3B,SAAGF,EAAOO,sGAROd,WAAVO,WACNC,IAAKD,EAAOE,MACZC,MAAOV,cAAYO,EAAOE,OAC1BE,SAAUX,WACVY,KAAMZ,OACNF,MAAOE,cAAYO,EAAOE,oBAN7B,6BASKF,EAAOO,kBAAPP,EAAOO"}