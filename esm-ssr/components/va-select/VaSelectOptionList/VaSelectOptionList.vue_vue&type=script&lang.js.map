{"version":3,"file":"VaSelectOptionList.vue_vue&type=script&lang.js","sources":["../../../../../src/components/va-select/VaSelectOptionList/VaSelectOptionList.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-select-option-list\"\n    ref=\"el\"\n    :tabindex=\"tabindex\"\n    @keydown.up.stop.prevent=\"hoverPreviousOption\"\n    @keydown.left.stop.prevent=\"hoverPreviousOption\"\n    @keydown.down.stop.prevent=\"hoverNextOption\"\n    @keydown.right.stop.prevent=\"hoverNextOption\"\n  >\n    <template v-if=\"filteredOptions.length\">\n      <div\n        v-for=\"option in filteredOptions\"\n        :key=\"$props.getTrackBy(option)\"\n        :ref=\"setItemRef($props.getTrackBy(option))\"\n        :class=\"getOptionClass(option)\"\n        :style=\"getOptionStyle(option)\"\n        @click.stop=\"selectOption(option)\"\n        @mouseover=\"updateHoveredOption(option)\"\n      >\n        <va-icon\n          v-if=\"option.icon\"\n          size=\"small\"\n          class=\"va-select-option-list__option--icon\"\n          :name=\"option.icon\"\n        />\n        <span>{{ getText(option) }}</span>\n        <va-icon\n          v-show=\"$props.getSelectedState(option)\"\n          class=\"va-select-option-list__option--selected-icon\"\n          size=\"small\"\n          name=\"done\"\n          :color=\"colorComputed\"\n        />\n      </div>\n    </template>\n    <div\n      v-else\n      class=\"va-select-option-list no-options\"\n    >\n      {{ noOptionsText }}\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { watch } from 'vue'\nimport { Options, prop, Vue, mixins } from 'vue-class-component'\n\nimport { getHoverColor } from '../../../services/color-config/color-functions'\nimport ColorMixin from '../../../services/color-config/ColorMixin'\nimport VaIcon from '../../va-icon/'\n\nclass SelectOptionListProps {\n  options = prop<any[]>({ type: Array, default: () => [] })\n  noOptionsText = prop<string>({\n    type: String,\n    default: 'Items not found',\n  })\n\n  getSelectedState = prop<Function>({\n    type: Function,\n    default: () => false,\n  })\n\n  getText = prop<Function>({\n    type: Function,\n  })\n\n  getTrackBy = prop<Function>({\n    type: Function,\n  })\n\n  multiple = prop<boolean>({ type: Boolean, default: false })\n  search = prop<string>({ type: String, default: '' })\n\n  hoveredOption = prop<string | object>({\n    type: [String, Object],\n    default: null,\n  })\n\n  tabindex = prop<number>({ type: Number, default: 0 })\n}\n\nconst SelectOptionListPropsMixin = Vue.with(SelectOptionListProps)\n\n@Options({\n  name: 'VaSelectOptionList',\n  components: { VaIcon },\n  emits: [\n    'select-option',\n    'update:hoveredOption',\n    'no-previous-option-to-hover',\n  ],\n})\nexport default class VaSelectOptionList extends mixins(\n  ColorMixin,\n  SelectOptionListPropsMixin,\n) {\n  itemRefs: Record<number, any> = {}\n\n  created () {\n    watch(() => this.$props.hoveredOption, (newOption: any) => {\n      if (newOption) {\n        this.scrollToOption(newOption)\n      }\n    })\n  }\n\n  beforeUpdate () {\n    this.itemRefs = {}\n  }\n\n  setItemRef (option: number) {\n    return (el: any) => {\n      if (el) {\n        this.itemRefs[option] = el\n      }\n    }\n  }\n\n  get hoveredOptionComputed () {\n    return this.hoveredOption || null\n  }\n\n  set hoveredOptionComputed (value: any) {\n    this.$emit('update:hoveredOption', value)\n  }\n\n  get filteredOptions () {\n    if (!this.$props.search) {\n      return this.$props.options as []\n    }\n\n    return (this.$props.options as []).filter((option: string) => {\n      const optionText = (this.$props.getText as Function)(option).toUpperCase()\n      const search = (this.$props.search as string).toUpperCase()\n      return optionText.includes(search)\n    })\n  }\n\n  selectOption (option: any): void {\n    this.$emit('select-option', option)\n  }\n\n  getOptionClass (option: any) {\n    return {\n      'va-select-option-list__option': true,\n      'va-select-option-list__option--selected': (this.$props.getSelectedState as Function)(option),\n    }\n  }\n\n  getOptionStyle (option: any) {\n    return {\n      color: (this.$props.getSelectedState as Function)(option) ? this.colorComputed : 'inherit',\n      backgroundColor: this.isHovered(option) ? getHoverColor(this.colorComputed) : 'transparent',\n    }\n  }\n\n  isHovered (option: any) {\n    if (!this.hoveredOptionComputed) { return false }\n    if (typeof option === 'string') { return option === this.hoveredOptionComputed }\n    if (!this.getTrackBy) { return false }\n\n    return this.getTrackBy(this.hoveredOptionComputed) === this.getTrackBy(option)\n  }\n\n  updateHoveredOption (option: string[] | string): void {\n    if (option) {\n      this.hoveredOptionComputed = option\n    } else {\n      this.hoveredOptionComputed = null\n    }\n  }\n\n  public hoverPreviousOption () {\n    if (!this.hoveredOptionComputed) {\n      // Hover last option from list\n      this.filteredOptions.length && this.updateHoveredOption(this.filteredOptions[this.filteredOptions.length - 1])\n    } else {\n      const hoveredOptionIndex: any =\n        this.filteredOptions.findIndex((option: any) =>\n          (this.$props.getText as Function)(option) === (this.$props.getText as Function)(this.hoveredOptionComputed))\n      if (this.filteredOptions[hoveredOptionIndex - 1]) {\n        this.hoveredOptionComputed = this.filteredOptions[hoveredOptionIndex - 1]\n      } else {\n        this.$emit('no-previous-option-to-hover')\n      }\n    }\n  }\n\n  public hoverNextOption () {\n    if (!this.hoveredOptionComputed) {\n      // Hover first option from list\n      this.filteredOptions.length && this.updateHoveredOption(this.filteredOptions[0])\n    } else {\n      const hoveredOptionIndex: any =\n        this.filteredOptions.findIndex((option: any) =>\n          (this.$props.getText as Function)(option) === (this.$props.getText as Function)(this.hoveredOptionComputed))\n      if (this.filteredOptions[hoveredOptionIndex + 1]) {\n        this.hoveredOptionComputed = this.filteredOptions[hoveredOptionIndex + 1]\n      }\n    }\n  }\n\n  public hoverFirstOption () {\n    if (this.filteredOptions.length > 0) {\n      this.updateHoveredOption(this.filteredOptions[0])\n    }\n  }\n\n  scrollToOption (option: any) {\n    const optionElement: HTMLElement = this.itemRefs[(this.$props.getTrackBy as Function)(option)]\n    if (!optionElement) { return }\n\n    // Scroll list to hinted option position\n    optionElement.scrollIntoView({\n      behavior: 'auto',\n      block: 'nearest',\n      inline: 'nearest',\n    })\n  }\n\n  public focus () {\n    if (this.$refs.el) {\n      (this.$refs as any).el.focus()\n    }\n  }\n}\n</script>\n<style lang=\"scss\">\n@import \"../../../styles/resources/resources\";\n@import 'variables';\n\n.va-select-option-list {\n  display: var(--va-select-option-list-display);\n  flex-direction: var(--va-select-option-list-flex-direction);\n  width: var(--va-select-option-list-width);\n  list-style: var(--va-select-option-list-list-style);\n  max-height: 200px;\n\n  &__option {\n    cursor: var(--va-select-option-list-option-cursor);\n    display: var(--va-select-option-list-option-display);\n    align-items: var(--va-select-option-list-option-align-items);\n    padding: var(--va-select-option-list-option-padding);\n    min-height: var(--va-select-option-list-option-min-height);\n    word-break: var(--va-select-option-list-option-word-break);\n\n    &--icon {\n      margin-right: var(--va-select-option-list-icon-margin-right);\n    }\n\n    &--selected-icon {\n      margin-left: var(--va-select-option-list-selected-icon-margin-left);\n      font-size: var(--va-select-option-list-selected-icon-font-size);\n    }\n  }\n\n  &.no-options {\n    padding: 0.5rem;\n  }\n}\n</style>\n"],"names":["SelectOptionListPropsMixin","Vue","with","constructor","this","prop","type","Array","default","String","Function","Boolean","Object","Number","VaSelectOptionList","mixins","ColorMixin","created","watch","$props","hoveredOption","newOption","scrollToOption","beforeUpdate","itemRefs","setItemRef","option","el","hoveredOptionComputed","value","$emit","filteredOptions","search","options","filter","optionText","getText","toUpperCase","includes","selectOption","getOptionClass","getSelectedState","getOptionStyle","color","colorComputed","backgroundColor","isHovered","getHoverColor","getTrackBy","updateHoveredOption","hoverPreviousOption","hoveredOptionIndex","findIndex","length","hoverNextOption","hoverFirstOption","optionElement","scrollIntoView","behavior","block","inline","focus","$refs","Options","name","components","VaIcon","emits"],"mappings":"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"}