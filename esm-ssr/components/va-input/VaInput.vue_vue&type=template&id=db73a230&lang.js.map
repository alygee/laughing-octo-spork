{"version":3,"file":"VaInput.vue_vue&type=template&id=db73a230&lang.js","sources":["../../../../src/components/va-input/VaInput.vue?vue&type=template&id=db73a230&lang.js"],"sourcesContent":["<template>\n  <va-input-wrapper\n    class=\"va-input\"\n    :class=\"wrapperClass\"\n    :disabled=\"disabled\"\n    :success=\"success\"\n    :messages=\"messages\"\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"errorCount\"\n    @click:prepend=\"onPrependClick\"\n    @click:append=\"onAppendClick\"\n    @click=\"focus\"\n  >\n    <template\n      v-if=\"$slots.prepend\"\n      #prepend\n    >\n      <slot name=\"prepend\" />\n    </template>\n\n    <div\n      class=\"va-input__container\"\n      ref=\"container\"\n      :style=\"computedBorderColorStyle\"\n    >\n      <div\n        v-if=\"$slots.prependInner\"\n        class=\"va-input__prepend-inner\"\n        @click=\"onPrependInnerClick\"\n      >\n        <slot name=\"prependInner\" />\n      </div>\n\n      <div\n        class=\"va-input__content-wrapper\"\n        @click=\"focus()\"\n      >\n        <div class=\"va-input__content\">\n          <label\n            aria-hidden=\"true\"\n            class=\"va-input__label\"\n            :style=\"labelStyle\"\n          >\n            {{ label }}\n          </label>\n\n          <div\n            v-if=\"$slots.content\"\n            class=\"va-input__content__input\"\n          >\n            <slot\n              name=\"content\"\n              v-bind=\"{ value: computedValue, focus }\"\n            />\n          </div>\n          <textarea\n            v-else-if=\"isTextarea\"\n            v-bind=\"computedInputAttributes\"\n            ref=\"textarea\"\n            class=\"va-input__content__input\"\n            :tabindex=\"tabindex\"\n            v-on=\"eventListeners\"\n          />\n          <input\n            v-else\n            v-bind=\"computedInputAttributes\"\n            ref=\"input\"\n            class=\"va-input__content__input\"\n            v-on=\"eventListeners\"\n          >\n        </div>\n      </div>\n\n      <div\n        v-if=\"showIcon\"\n        class=\"va-input__icons\"\n      >\n        <va-icon\n          v-if=\"success\"\n          color=\"success\"\n          name=\"check_circle\"\n          size=\"small\"\n        />\n        <va-icon\n          v-if=\"computedError\"\n          color=\"danger\"\n          name=\"warning\"\n          size=\"small\"\n        />\n        <va-icon\n          v-if=\"canBeCleared\"\n          :name=\"clearableIcon\"\n          size=\"small\"\n          :color=\"clearIconColor\"\n          @click.stop=\"reset()\"\n        />\n        <va-icon\n          v-if=\"loading\"\n          name=\"loop\"\n          size=\"small\"\n          spin=\"counter-clockwise\"\n          :color=\"colorComputed\"\n        />\n      </div>\n\n      <div\n        v-if=\"$slots.appendInner\"\n        class=\"va-input__append-inner\"\n        @click=\"onAppendInnerClick\"\n      >\n        <slot name=\"appendInner\" />\n      </div>\n    </div>\n\n    <div\n      v-if=\"bordered\"\n      class=\"va-input_bordered__border\"\n      :style=\"computedBorderColorStyle\"\n    />\n\n    <template\n      v-if=\"$slots.append\"\n      #append\n    >\n      <slot name=\"append\" />\n    </template>\n  </va-input-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport { Options, mixins, prop, Vue } from 'vue-class-component'\n\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport VaInputWrapper from '../va-input/VaInputWrapper'\nimport VaIcon from '../va-icon'\n\nimport { InputMixin } from './helpers/InputMixin'\nimport { TextareaMixin } from './helpers/TextareaMixin'\n\nconst InputProps = Vue.with(class InputProps {\n  color = prop<string>({ type: String, default: 'primary' })\n  placeholder = prop<string>({ type: String, default: '' })\n  clearable = prop<boolean>({ type: Boolean, default: false })\n  tabindex = prop<number>({ type: Number, default: 0 })\n  outline = prop({ type: Boolean, default: false })\n  bordered = prop({ type: Boolean, default: false })\n})\n\n@Options({\n  name: 'VaInput',\n  components: { VaInputWrapper, VaIcon },\n  emits: ['update:modelValue', 'update:focused', 'change', 'click-prepend', 'click-prepend-inner',\n    'click-append', 'click-append-inner', 'focus', 'blur', 'keyup', 'keydown', 'click', 'cleared'],\n})\nexport default class VaInput extends mixins(\n  ColorMixin,\n  InputMixin,\n  TextareaMixin,\n  InputProps,\n) {\n  get labelStyle (): any {\n    return { color: this.colorComputed }\n  }\n\n  stateClasses (baseclass: string) {\n    const classes = [baseclass]\n\n    if (this.isTextarea) {\n      classes.push(`${baseclass}_textarea`)\n    }\n    if (this.isFocusedComputed) {\n      classes.push(`${baseclass}_focused`)\n    }\n\n    if (this.label) {\n      classes.push(`${baseclass}_labeled`)\n    }\n\n    if (this.$props.outline) {\n      classes.push(`${baseclass}_outline`)\n    } else if (this.$props.bordered) {\n      classes.push(`${baseclass}_bordered`)\n    } else {\n      classes.push(`${baseclass}_solid`)\n    }\n\n    if (this.$props.success) {\n      classes.push(`${baseclass}_success`)\n    }\n    if (this.$props.error || this.computedError) {\n      classes.push(`${baseclass}_error`)\n    }\n\n    if (this.$props.disabled) {\n      classes.push(`${baseclass}_disabled`)\n    }\n\n    return classes\n  }\n\n  get wrapperClass () {\n    return this.stateClasses('va-input')\n  }\n\n  get computedBorderColorStyle () {\n    if (this.isFocusedComputed) {\n      return {\n        'border-color': this.colorComputed,\n      }\n    }\n\n    return {}\n  }\n\n  get clearIconColor () {\n    if (this.isFocusedComputed) {\n      return this.colorComputed\n    }\n\n    if (this.computedError) {\n      return 'danger'\n    }\n\n    if (this.success) {\n      return 'success'\n    }\n\n    return 'grey'\n  }\n\n  get computedInputAttributes (): Record<string, any> {\n    return {\n      ...this.$attrs,\n      id: this.id,\n      name: this.name,\n      type: this.type,\n      placeholder: this.placeholder,\n      disabled: this.disabled,\n      readonly: this.readonly,\n      tabindex: this.tabindex,\n      // Do not inherit style from $attrs\n      style: this.$attrs.inputStyle,\n      // Do not inherit class from $attrs\n      class: this.$attrs.inputClass,\n      value: this.computedValue,\n      'aria-label': this.label,\n    }\n  }\n\n  /** @public */\n  focus (): void {\n    if (this.$refs.input) {\n      (this as any).$refs.input.focus({ preventScroll: true })\n    } else if (this.$refs.textarea) {\n      (this as any).$refs.textarea.focus()\n    } else if (!this.$slots.content) {\n      throw new Error('There is no DOM element to focus')\n    }\n  }\n\n  /** @public */\n  blur (): void {\n    if (this.$refs.input) {\n      (this as any).$refs.input.blur()\n    } else if (this.$refs.textarea) {\n      (this as any).$refs.textarea.blur()\n    } else if (!this.$slots.content) {\n      throw new Error('There is no DOM element to blur')\n    }\n  }\n\n  /** @public */\n  reset (): void {\n    this.$emit('update:modelValue', '')\n    this.$emit('cleared')\n  }\n}\n</script>\n\n<style lang='scss'>\n@import '../../styles/resources/resources';\n@import 'variables';\n\n.va-input {\n  position: relative;\n  display: flex;\n  align-items: center;\n  color: var(--va-input-text-color);\n  cursor: var(--va-input-cursor);\n\n  &_disabled {\n    @include va-disabled;\n  }\n\n  &__container {\n    display: flex;\n    position: relative;\n    align-items: center;\n    width: 100%;\n    min-height: var(--va-input-min-height);\n    border-color: var(--va-input-color);\n    border-style: solid;\n    border-width: var(--va-input-border-width);\n    overflow: hidden;\n    padding: 0 var(--va-input-content-horizontal-padding);\n\n    /* Creates gap between prepend, content, validation icons, append */\n    & > * {\n      padding-right: var(--va-input-content-items-gap);\n      line-height: 0;\n\n      &:last-child {\n        padding-right: 0;\n      }\n    }\n  }\n\n  &__content-wrapper {\n    display: flex;\n    align-items: center;\n    width: 100%;\n\n    .va-input__content {\n      width: 100%;\n      position: relative;\n\n      input {\n        cursor: inherit;\n      }\n\n      &__input {\n        @include va-scroll(var(--va-input-scroll-color));\n\n        width: 100%;\n        // Use line-height as min-height for empty content slot\n        min-height: var(--va-input-line-height);\n        color: var(--va-input-text-color);\n        background-color: transparent;\n        border-style: none;\n        outline: none;\n        line-height: var(--va-input-line-height);\n        font-size: var(--va-input-font-size);\n        font-family: var(--va-input-font-family, var(--va-font-family));\n        font-weight: var(--va-input-font-weight);\n        font-style: var(--va-input-font-style);\n        font-stretch: var(--va-input-font-stretch);\n        letter-spacing: var(--va-input-letter-spacing);\n        transform: translateY(-1px);\n\n        &::placeholder {\n          color: var(--va-input-placeholder-text-color);\n        }\n\n        &:disabled {\n          opacity: var(--va-input-disabled-opacity);\n        }\n      }\n    }\n  }\n\n  &__icons {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    & > * {\n      margin-right: calc(var(--va-input-content-items-gap) / 4);\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  }\n\n  textarea {\n    margin: 12px 0;\n    resize: vertical;\n  }\n\n  &_labeled {\n    .va-input__content-wrapper {\n      padding-top: 12px;\n      height: 100%;\n      align-items: flex-end;\n    }\n\n    .va-input__label {\n      @include va-ellipsis();\n\n      height: 12px;\n      transform: translateY(-100%);\n      position: absolute;\n      display: block;\n      left: 0;\n      top: 0;\n      padding-top: 1px;\n      max-width: var(--va-input-container-label-max-width);\n      color: var(--va-input-container-label-color);\n      font-size: var(--va-input-container-label-font-size);\n      letter-spacing: var(--va-input-container-label-letter-spacing, var(--va-letter-spacing));\n      line-height: var(--va-input-container-label-line-height);\n      font-weight: var(--va-input-container-label-font-weight);\n      text-transform: var(--va-input-container-label-text-transform);\n      transform-origin: top left;\n    }\n\n    textarea {\n      margin-top: 0;\n    }\n  }\n\n  /* We have 3 styles and two states for each style separately */\n  &_solid {\n    .va-input__container {\n      background: var(--va-input-color);\n      border-color: var(--va-input-color);\n      border-radius: var(--va-input-border-radius);\n    }\n\n    &.va-input_success {\n      .va-input__container {\n        background: var(--va-input-success-background);\n        border-color: var(--va-input-success-color);\n      }\n    }\n\n    &.va-input_error {\n      .va-input__container {\n        background: var(--va-input-error-background);\n        border-color: var(--va-input-error-color);\n      }\n    }\n  }\n\n  &_outline {\n    .va-input__container {\n      border-radius: 0;\n      border-color: var(--va-input-bordered-color);\n    }\n\n    &.va-input_success {\n      .va-input__container {\n        background: var(--va-input-success-background);\n        border-color: var(--va-input-success-color);\n      }\n    }\n\n    &.va-input_error {\n      .va-input__container {\n        background: var(--va-input-error-background);\n        border-color: var(--va-input-error-color);\n      }\n    }\n  }\n\n  &_bordered {\n    /*\n      We can not just set border-bottom, becouse we also have border on the other sides.\n      We also can not use after or before, becouse we need to set border-color according to\n      color prop\n    */\n    &__border {\n      border-color: var(--va-input-bordered-color);\n      position: absolute;\n      height: 0;\n      border-bottom-width: var(--va-input-border-width);\n      border-bottom-style: solid;\n      width: 100%;\n      bottom: 0;\n    }\n\n    .va-input__container {\n      background: var(--va-input-color);\n      border-top-left-radius: var(--va-input-border-radius);\n      border-top-right-radius: var(--va-input-border-radius);\n      border-color: transparent !important;\n    }\n\n    &.va-input_success {\n      .va-input__container {\n        background: var(--va-input-success-background);\n      }\n\n      .va-input_bordered__border {\n        border-color: var(--va-input-success-color);\n      }\n    }\n\n    &.va-input_error {\n      .va-input__container {\n        background: var(--va-input-error-background);\n      }\n\n      .va-input_bordered__border {\n        border-color: var(--va-input-error-color);\n      }\n    }\n  }\n}\n</style>\n"],"names":["_mergeProps","class","_ctx","disabled","success","messages","error","_createVNode","ref","style","_createBlock","onClick","_renderSlot","tabindex","_toHandlers","color","name","size","spin","prependInner","content","appendInner"],"mappings":"4bACEA,GACEC,OAAM,WACEC,gBACPC,SAAUD,WACVE,QAASF,UACTG,SAAUH,WACVI,MAAOJ,gBACP,iBAAgBA,wBAChB,cAAaA,+BARhB,yBAoBEK,SACEN,MAAM,sBACNO,IAAI,YACHC,MAAOP,6BAGAA,SAAmB,kBAD3BQ,eAEET,MAAM,0BACLU,QAAOT,wBAERU,yDAGFL,SACEN,MAAM,4BACLU,WAAOT,YAERK,SAAKN,MAAM,sBACTM,WACE,cAAY,OACZN,MAAM,kBACLQ,MAAOP,gBAELA,YAIGA,SAAc,aADtBQ,eAEET,MAAM,6BAENW,4BAEmBV,sBAAeA,aAIvBA,EAAU,gBADvBQ,aAAAV,UAEUE,2BACRM,IAAI,WACJP,MAAM,2BACLY,SAAUX,YACXY,EAAMZ,+CAERQ,UAAAV,UAEUE,2BACRM,IAAI,QACJP,MAAM,4BACNa,EAAMZ,+CAMJA,EAAQ,cADhBQ,eAEET,MAAM,oBAGEC,EAAO,aADfQ,WAEEK,MAAM,UACNC,KAAK,eACLC,KAAK,wBAGCf,EAAa,mBADrBQ,WAEEK,MAAM,SACNC,KAAK,UACLC,KAAK,wBAGCf,EAAY,kBADpBQ,WAEGM,KAAMd,gBACPe,KAAK,QACJF,MAAOb,iBACPS,cAAYT,uEAGPA,EAAO,aADfQ,WAEEM,KAAK,OACLC,KAAK,QACLC,KAAK,oBACJH,MAAOb,iEAKJA,SAAkB,iBAD1BQ,eAEET,MAAM,yBACLU,QAAOT,uBAERU,4DAKIV,EAAQ,cADhBQ,eAEET,MAAM,4BACLQ,MAAOP,kGA9FAA,qCAGAA,SAAOiB,oRAeDjB,wBAELA,oBAIGA,SAAOkB,qFAKMlB,sBAAeA,kCAIvBA,+BADbF,EAEUE,2BACRM,IAAI,WACJP,MAAM,2BACLY,SAAUX,qFAGbF,EAEUE,2BACRM,IAAI,QACJP,MAAM,wDAOJC,mDAIEA,iBACNa,MAAM,UACNC,KAAK,eACLC,KAAK,uCAGCf,uBACNa,MAAM,SACNC,KAAK,UACLC,KAAK,uCAGCf,sBACLc,KAAMd,gBACPe,KAAK,QACJF,MAAOb,gDAIFA,iBACNc,KAAK,OACLC,KAAK,QACLC,KAAK,oBACJH,MAAOb,+EAKJA,SAAOmB,+IASTnB,gEAEEA,uEAvGFA,SAAc,cACnB,gBAFH,yBAIEU,sEAwGMV,SAAa,aAClB,eAFH,yBAIEU"}