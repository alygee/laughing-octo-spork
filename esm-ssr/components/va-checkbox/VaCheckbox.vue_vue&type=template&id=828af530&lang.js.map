{"version":3,"file":"VaCheckbox.vue_vue&type=template&id=828af530&lang.js","sources":["../../../../src/components/va-checkbox/VaCheckbox.vue?vue&type=template&id=828af530&lang.js"],"sourcesContent":["<template>\n  <va-input-wrapper\n    class=\"va-checkbox\"\n    :class=\"computedClass\"\n    :disabled=\"disabled\"\n    :success=\"success\"\n    :messages=\"messages\"\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"errorCount\"\n  >\n    <div\n      class=\"va-checkbox__input-container\"\n      @click=\"onWrapperClick()\"\n      tabindex=\"-1\"\n      @blur=\"onBlur\"\n      ref=\"container\"\n    >\n      <div\n        class=\"va-checkbox__square\"\n        :style=\"inputStyle\"\n      >\n        <input\n          ref=\"input\"\n          :id=\"id\"\n          :name=\"name\"\n          type=\"checkbox\"\n          role=\"checkbox\"\n          readonly\n          v-on=\"SetupContext.keyboardFocusListeners\"\n          @focus=\"onFocus\"\n          @blur=\"onBlur($event)\"\n          class=\"va-checkbox__input\"\n          @keypress.prevent=\"toggleSelection()\"\n          :disabled=\"disabled\"\n          :indeterminate=\"indeterminate\"\n        >\n        <va-icon\n          class=\"va-checkbox__icon\"\n          :name=\"computedIconName\"\n          size=\"20px\"\n        />\n      </div>\n      <div\n        class=\"va-checkbox__label\"\n        :style=\"labelStyle\"\n        ref=\"label\"\n        tabindex=\"-1\"\n        @blur=\"onBlur\"\n      >\n        <slot name=\"label\">\n          {{ label }}\n        </slot>\n      </div>\n    </div>\n  </va-input-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport { Options, mixins, prop, setup, Vue } from 'vue-class-component'\n\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport { SelectableMixin } from '../../mixins/SelectableMixin/SelectableMixin'\nimport VaIcon from '../va-icon/'\nimport { VaInputWrapper } from '../va-input'\nimport useKeyboardOnlyFocus from '../../composables/useKeyboardOnlyFocus'\n\ntype ModelValue = boolean | boolean[] | string | Record<string, unknown>\n\nclass CheckboxProps {\n  modelValue = prop<ModelValue>({\n    type: [Boolean, Array, String, Object],\n    default: false,\n  })\n\n  color = prop<string>({ type: String, default: 'primary' })\n  checkedIcon = prop<string>({ type: String, default: 'check' })\n  indeterminateIcon = prop<string>({ type: String, default: 'remove' })\n}\n\nconst CheckboxPropsMixin = Vue.with(CheckboxProps)\n\n@Options({\n  name: 'VaCheckbox',\n  components: { VaInputWrapper, VaIcon },\n})\nexport default class VaCheckbox extends mixins(\n  ColorMixin,\n  SelectableMixin,\n  CheckboxPropsMixin,\n) {\n  SetupContext = setup(() => {\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    return {\n      hasKeyboardFocus,\n      keyboardFocusListeners,\n    }\n  })\n\n  get computedClass () {\n    return {\n      'va-checkbox--selected': this.isChecked,\n      'va-checkbox--readonly': this.readonly,\n      'va-checkbox--disabled': this.disabled,\n      'va-checkbox--indeterminate': this.indeterminate,\n      'va-checkbox--error': this.computedError,\n      'va-checkbox--left-label': this.leftLabel,\n      'va-checkbox--on-keyboard-focus': this.SetupContext.hasKeyboardFocus,\n    }\n  }\n\n  get labelStyle () {\n    return {\n      color: this.computedError ? this.theme.getColor('danger') : '',\n      padding: !this.label\n        ? ''\n        : this.leftLabel\n          ? '0 0.5rem 0 0'\n          : '0 0 0 0.5rem',\n    }\n  }\n\n  get inputStyle () {\n    return this.computedError\n      ? (this.isChecked || this.isIndeterminate)\n        ? {\n          background: this.colorComputed,\n          borderColor: this.theme.getColor('danger'),\n        }\n        : { borderColor: this.theme.getColor('danger') }\n      : (this.isChecked || this.isIndeterminate)\n        ? { background: this.colorComputed, borderColor: this.colorComputed }\n        : {}\n  }\n\n  get computedIconName () {\n    return (this.indeterminate && this.isIndeterminate)\n      ? this.indeterminateIcon\n      : this.checkedIcon\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources/resources\";\n@import \"variables\";\n\n.va-checkbox {\n  display: var(--va-checkbox-display);\n  max-width: var(--va-checkbox-max-width);\n\n  &__input-container {\n    align-items: var(--va-checkbox-input-align-items);\n    display: var(--va-checkbox-input-display);\n    padding: var(--va-checkbox-input-padding);\n    cursor: var(--va-checkbox-input-cursor);\n\n    @at-root {\n      .va-checkbox--disabled & {\n        @include va-disabled();\n\n        cursor: var(--va-checkbox-disabled-cursor);\n      }\n\n      .va-checkbox--readonly & {\n        cursor: var(--va-checkbox-readonly-cursor);\n      }\n\n      .va-checkbox--left-label & {\n        flex-direction: row-reverse;\n      }\n    }\n  }\n\n  #{&}__square {\n    @include flex-center();\n\n    width: var(--va-checkbox-square-width);\n    min-width: var(--va-checkbox-square-min-width);\n    height: var(--va-checkbox-square-height);\n    position: var(--va-checkbox-square-position);\n    background-color: var(--va-checkbox-square-background-color, var(--va-background-color));\n    border: var(--va-checkbox-square-border, var(--va-control-border));\n    border-radius: var(--va-checkbox-square-border-radius, var(--va-square-border-radius));\n\n    @at-root {\n      .va-checkbox--on-keyboard-focus#{&} {\n        transition: all, 0.6s, ease-in;\n        box-shadow: 0 0 0.5rem 0 rgba(0, 0, 0, 0.3);\n      }\n    }\n  }\n\n  &__input {\n    opacity: 0;\n    width: 0;\n    height: 0 !important;\n  }\n\n  &__label {\n    display: var(--va-checkbox-label-display);\n    position: var(--va-checkbox-label-position);\n  }\n\n  &__icon {\n    pointer-events: var(--va-checkbox-icon-pointer-events);\n    position: var(--va-checkbox-icon-position);\n    color: var(--va-checkbox-icon-color);\n  }\n\n  &--selected {\n    .va-checkbox {\n      &__icon {\n        color: var(--va-checkbox-selected-icon-color);\n      }\n    }\n  }\n\n  &--indeterminate {\n    .va-checkbox {\n      &__icon {\n        color: var(--va-checkbox-indeterminate-icon-color);\n      }\n    }\n  }\n}\n\n</style>\n"],"names":["_mergeProps","class","_ctx","disabled","success","messages","error","_createVNode","onClick","tabindex","onBlur","ref","style","id","name","type","role","readonly","_toHandlers","keyboardFocusListeners","onFocus","$event","onKeypress","indeterminate","size","_renderSlot"],"mappings":"iYACEA,GACEC,OAAM,cACEC,iBACPC,SAAUD,WACVE,QAASF,UACTG,SAAUH,WACVI,MAAOJ,gBACP,iBAAgBA,wBAChB,cAAaA,6BARhB,yBAUEK,SACEN,MAAM,+BACLO,WAAON,mBACRO,SAAS,KACRC,OAAMR,SACPS,IAAI,cAEJJ,SACEN,MAAM,sBACLW,MAAOV,eAERK,UAAAP,GACEW,IAAI,QACHE,GAAIX,KACJY,KAAMZ,OACPa,KAAK,WACLC,KAAK,WACLC,SAAA,IACAC,iBAAmBC,yBAClBC,QAAOlB,UACPQ,UAAMR,SAAOmB,GACdpB,MAAM,qBACLqB,iBAAkBpB,kCAClBC,SAAUD,WACVqB,cAAerB,oGAElBK,KACEN,MAAM,oBACLa,KAAMZ,mBACPsB,KAAK,6BAGTjB,SACEN,MAAM,qBACLW,MAAOV,aACRS,IAAI,QACJF,SAAS,KACRC,OAAMR,WAEPuB,uBAAA,SACKvB,qKA/BGA,8BAIL,KAAIA,UACJ,OAAMA,8EASIA,EAAQ,4BAClB,gBAAeA,gCAGhBD,MAAM,oBACLa,KAAMZ,mBACPsB,KAAK,uEAKCtB,wEAMHA"}