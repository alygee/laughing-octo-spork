{"version":3,"file":"VaAppBar.vue_vue&type=template&id=07072507&lang.js","sources":["../../../../src/components/va-app-bar/VaAppBar.vue?vue&type=template&id=07072507&lang.js"],"sourcesContent":["<template>\n  <header :class=\"computedClass\" :style=\"computedStyle\" ref=\"scrollRoot\">\n    <slot />\n  </header>\n</template>\n\n<script lang=\"ts\">\nimport { mixins, Options, prop, setup, Vue } from 'vue-class-component'\nimport { setupScroll } from '../../mixins/ScrollMixin/ScrollMixin'\nimport {\n  getGradientBackground,\n  getBoxShadowColor,\n} from '../../services/color-config/color-functions'\nimport ColorMixin from '../../services/color-config/ColorMixin'\n\nclass VaAppBarProps {\n  gradient = prop<boolean>({ type: Boolean, default: false })\n  bottom = prop<boolean>({ type: Boolean, default: false })\n  target = prop<string | Element>({ type: [Object, String], default: '' })\n  hideOnScroll = prop<boolean>({ type: Boolean, default: false })\n  shadowOnScroll = prop<boolean>({ type: Boolean, default: false })\n  shadowColor = prop<string>({ type: String, default: '' })\n  color = prop<string>({ type: String, default: undefined })\n}\n\nconst CardPropsMixin = Vue.with(VaAppBarProps)\n\n@Options({ name: 'VaAppBar' })\nexport default class VaAppBar extends mixins(ColorMixin, CardPropsMixin) {\n  isHidden = false\n  doShowShadow = false\n\n  scrollRoot = setup(() => {\n    let prevScrollPosition = 0\n    return setupScroll(this.target, (e: any) => {\n      if (prevScrollPosition < e.target.scrollTop) {\n        // Scroll down\n        this.isHidden = !!this.hideOnScroll\n        this.doShowShadow = !!this.shadowOnScroll\n      } else {\n        // Scroll up\n        this.isHidden = false\n        this.doShowShadow = false\n      }\n      prevScrollPosition = e.target.scrollTop\n    })\n  })\n\n  get colorComputed () {\n    return this.theme.getColor(this.color, 'primary')\n  }\n\n  get shadowColorComputed () {\n    return this.theme.getColor(this.shadowColor, this.colorComputed)\n  }\n\n  get computedShadow () {\n    if (!this.doShowShadow) {\n      return ''\n    }\n\n    const shadow = getBoxShadowColor(this.shadowColor ? this.shadowColorComputed : this.colorComputed)\n\n    return `0px 0px 12px 2px ${shadow}`\n  }\n\n  get transformComputed () {\n    if (!this.isHidden) {\n      return ''\n    }\n\n    return this.bottom ? 'translateY(100%)' : 'translateY(-100%)'\n  }\n\n  get computedStyle () {\n    return {\n      background: this.gradient ? getGradientBackground(this.colorComputed) : this.colorComputed,\n      'box-shadow': this.computedShadow,\n      transform: this.transformComputed,\n    }\n  }\n\n  get computedClass () {\n    return {\n      'va-app-bar': true,\n      'va-app-bar--bottom': this.bottom,\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-app-bar {\n  display: flex;\n  align-items: center;\n  position: var(--va-app-bar-position);\n  transition: all 0.5s ease;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: var(--va-app-bar-height);\n  min-height: var(--va-app-bar-height);\n  min-width: 100%;\n\n  &--bottom {\n    top: 100%;\n    transform: translateY(-100%);\n  }\n}\n</style>\n"],"names":["_mergeProps","class","_ctx","style","ref"],"mappings":"4IACEA,GAASC,MAAOC,gBAAgBC,MAAOD,gBAAeE,IAAI"}