{"version":3,"file":"VaTreeCategory.vue_vue&type=template&id=5e011da2&lang.js","sources":["../../../../../src/components/va-tree-view/VaTreeCategory/VaTreeCategory.vue?vue&type=template&id=5e011da2&lang.js"],"sourcesContent":["<template>\n  <div class=\"va-tree-category\">\n    <div\n      class=\"va-tree-category__header\"\n      @click=\"toggle\"\n    >\n      <div class=\"va-tree-category__header-switcher\">\n        <square-with-icon\n          :icon=\"isOpenCached ? 'remove' : 'add'\"\n          :color=\"setupContext.treeRoot.color || colorComputed\"\n        />\n      </div>\n      <div\n        class=\"va-tree-category__header-checkbox\"\n        v-if=\"$slots.checkbox\"\n      >\n        <slot name=\"checkbox\" />\n      </div>\n      <div\n        class=\"va-tree-category__header-icon\"\n        v-if=\"$props.icon\"\n      >\n        <va-icon\n          :name=\"$props.icon\"\n          :color=\"theme.getColor('info')\"\n        />\n      </div>\n      <div class=\"va-tree-category__header-label\">\n        {{ $props.label }}\n      </div>\n    </div>\n\n    <div\n      class=\"va-tree-category__list-container\"\n      v-if=\"isOpenCached\"\n    >\n      <div class=\"va-tree-category__list-internal-container\">\n        <slot />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { provide, inject, watch, ComponentPublicInstance, ref } from 'vue'\nimport { Options, Vue, mixins, prop, setup } from 'vue-class-component'\n\nimport ColorMixin from '../../../services/color-config/ColorMixin'\nimport SquareWithIcon from '../SquareWithIcon'\nimport VaIcon from '../../va-icon'\nimport VaTreeNode from '../VaTreeNode/VaTreeNode.vue'\n\nclass TreeCategoryProps {\n  label = prop<string | number>({ default: '', type: [String, Number] })\n  isOpen = prop<boolean>(Boolean)\n  icon = prop<string>({ default: '', type: String })\n  color = prop<string>({ type: String, default: 'primary' })\n}\n\nconst TreeCategoryPropsMixin = Vue.with(TreeCategoryProps)\n\n@Options({\n  name: 'VaTreeCategory',\n  components: { VaIcon, SquareWithIcon },\n})\nexport default class VaTreeCategory extends mixins(\n  ColorMixin,\n  TreeCategoryPropsMixin,\n) {\n  isOpenCached: boolean | undefined = false\n\n  setupContext = setup(() => {\n    const nodes = ref<(VaTreeCategory | VaTreeNode)[]>([])\n\n    const onChildMounted = (node: VaTreeCategory | VaTreeNode) => {\n      nodes.value.push(node)\n    }\n\n    const onChildUnmounted = (removableNode: VaTreeCategory | VaTreeNode) => {\n      nodes.value = nodes.value.filter((node: VaTreeCategory | VaTreeNode) => node !== removableNode)\n    }\n\n    const treeCategory = {\n      onChildMounted,\n      onChildUnmounted,\n    }\n\n    provide('treeCategory', treeCategory)\n\n    const treeRoot = inject('treeRoot', {\n      onChildMounted: (value: any) => undefined,\n      onChildUnmounted: (value: any) => undefined,\n    })\n\n    return {\n      treeCategory,\n      treeRoot,\n      nodes,\n    }\n  })\n\n  created () {\n    watch(\n      () => this.$props.isOpen,\n      (isOpen) => {\n        this.isOpenCached = isOpen\n      },\n      { immediate: true })\n  }\n\n  collapse () {\n    this.isOpenCached = false\n    this.$nextTick(() => {\n      this.setupContext.nodes.forEach((child: ComponentPublicInstance) => {\n        if (child.$options.name === 'va-tree-category') {\n          (child as VaTreeCategory).collapse()\n        }\n      })\n    })\n  }\n\n  expand () {\n    this.isOpenCached = true\n    this.$nextTick(() => {\n      this.setupContext.nodes.forEach((child: VaTreeCategory | VaTreeNode) => {\n        if (child instanceof VaTreeCategory) {\n          child.expand()\n        }\n      })\n    })\n  }\n\n  toggle (e: MouseEvent) {\n    if (!(e.target as HTMLElement).classList.contains('va-checkbox__input')) {\n      this.isOpenCached = !this.isOpenCached\n    }\n  }\n\n  mounted () {\n    if (this.setupContext.treeRoot) {\n      this.setupContext.treeRoot.onChildMounted(this)\n    }\n  }\n\n  beforeUnmount () {\n    if (this.setupContext.treeRoot) {\n      this.setupContext.treeRoot.onChildUnmounted(this)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources/resources\";\n@import 'variables';\n\n.va-tree-category {\n  &__header {\n    cursor: var(--va-tree-category-header-cursor);\n    display: var(--va-tree-category-header-display);\n    align-items: var(--va-tree-category-header-align-items);\n  }\n\n  &__header-switcher {\n    margin-right: 0.5rem;\n  }\n\n  &__header-checkbox {\n    margin-right: var(--va-tree-category-header-checkbox-margin-right);\n    height: var(--va-tree-category-header-checkbox-height);\n    width: var(--va-tree-category-header-checkbox-width);\n    display: var(--va-tree-category-header-checkbox-display);\n    align-items: var(--va-tree-category-header-checkbox-align-items);\n    justify-content: var(--va-tree-category-header-checkbox-justify-content);\n\n    .va-checkbox__square {\n      width: 1.5rem;\n      height: 1.5rem;\n      flex: 0 0 1.5rem;\n    }\n  }\n\n  &__header-icon {\n    color: var(--va-tree-category-header-icon-color);\n    margin-right: var(--va-tree-category-header-icon-margin-right);\n    font-size: var(--va-tree-category-header-icon-font-size);\n    line-height: var(--va-tree-category-header-icon-line-height);\n  }\n\n  &__header-label {\n    word-wrap: var(--va-tree-category-header-label-word-wrap);\n    overflow: var(--va-tree-category-header-label-overflow);\n  }\n\n  &__list-container {\n    margin-top: var(--va-tree-category-list-container-margin-top);\n    padding-left: var(--va-tree-category-list-container-padding-left);\n  }\n\n  &__list-internal-container {\n    background-image: linear-gradient(#adb3b9 33%, rgba(255, 255, 255, 0) 0%);\n    background-position: left;\n    background-size: 1px 3px;\n    background-repeat: repeat-y;\n    padding-left: 1.1875rem;\n  }\n\n  & + .va-tree-category,\n  .va-tree-node + .va-tree-node,\n  .va-tree-category + .va-tree-node,\n  .va-tree-node + .va-tree-category {\n    margin-top: 0.75rem;\n  }\n}\n</style>\n"],"names":["_mergeProps","class","icon","_ctx","color","treeRoot","checkbox","name","getColor","label"],"mappings":"wPACEA,GAAKC,MAAM,wHAOFC,KAAMC,8BACNC,MAAOD,eAAaE,SAASD,OAASD,sCAKnCA,SAAOG,kIAMPH,SAAOD,8DAGVK,KAAMJ,SAAOD,KACbE,MAAOD,QAAMK,8GAIbL,SAAOM,sBAMNN"}