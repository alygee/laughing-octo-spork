{"version":3,"file":"VaFileUploadList.vue_vue&type=template&id=6af3e000&lang.js","sources":["../../../../../src/components/va-file-upload/VaFileUploadList/VaFileUploadList.vue?vue&type=template&id=6af3e000&lang.js"],"sourcesContent":["<template>\n  <div\n    class=\"va-file-upload-list\"\n    :class=\"`va-file-upload-list--${type}`\"\n  >\n    <template v-if=\"type === 'list'\">\n      <va-file-upload-list-item\n        v-for=\"(file, index) in filesList\"\n        :key=\"file.name\"\n        :file=\"file\"\n        :color=\"color\"\n        @remove=\"$emit('remove', index)\"\n      />\n    </template>\n    <template v-if=\"type === 'gallery'\">\n      <va-file-upload-gallery-item\n        v-for=\"(file, index) in filesList\"\n        :file=\"file\"\n        :key=\"file.name\"\n        :color=\"color\"\n        @remove=\"$emit('remove', index)\"\n      />\n    </template>\n    <va-file-upload-single-item\n      v-if=\"type === 'single' && filesList.length\"\n      :file=\"filesList[filesList.length - 1]\"\n      @remove=\"$emit('removeSingle')\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue, prop, mixins } from 'vue-class-component'\n\nimport VaFileUploadListItem from '../VaFileUploadListItem'\nimport VaFileUploadGalleryItem from '../VaFileUploadGalleryItem'\nimport VaFileUploadSingleItem from '../VaFileUploadSingleItem'\n\nclass FileUploadListProps {\n  type = prop<string>({ type: String, default: '' })\n  files = prop<any|any[]>({ type: [Object, Array], default: null })\n  color = prop<string>({ type: String, default: 'success' })\n}\n\nconst FileUploadListPropsMixin = Vue.with(FileUploadListProps)\n\n@Options({\n  name: 'VaFileUploadList',\n  components: {\n    VaFileUploadListItem,\n    VaFileUploadGalleryItem,\n    VaFileUploadSingleItem,\n  },\n  emits: ['remove', 'removeSingle'],\n})\nexport default class VaFileUploadList extends mixins(\n  FileUploadListPropsMixin,\n) {\n  get filesList () {\n    return this.files.map(this.convertFile)\n  }\n\n  convertFile (file: any) {\n    return {\n      name: file.name || file.url,\n      size: file.size ? this.formatSize(file.size) : '',\n      date: this.formatDate(new Date()),\n      image: file,\n    }\n  }\n\n  formatSize (bytes: number) {\n    if (bytes === 0) { return '0 Bytes' }\n    const k = 1024\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n  }\n\n  formatDate (date: Date) {\n    if (!date) { return '' }\n    return date.toLocaleDateString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric',\n    })\n  }\n}\n</script>\n\n<style lang='scss'>\n.va-file-upload-list {\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0 0 1.5rem;\n\n  &--gallery {\n    padding-bottom: 0.5rem;\n  }\n}\n</style>\n"],"names":["_mergeProps","class","_ctx","file","index","key","name","color","length"],"mappings":"kSACEA,GACEC,OAAM,8CAC0BC,4BAEhBA,8BAEYA,cAAhBC,EAAMC,YACbC,IAAKF,EAAKG,KACVH,KAAMA,EACNI,MAAOL,yEAIIA,8BAEYA,cAAhBC,EAAMC,YACbD,KAAMA,EACNE,IAAKF,EAAKG,KACVC,MAAOL,wEAKJA,QAAqBA,YAAUM,cACpCL,KAAMD,YAAUA,YAAUM"}