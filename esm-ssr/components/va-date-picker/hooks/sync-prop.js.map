{"version":3,"file":"sync-prop.js","sources":["../../../../../src/components/va-date-picker/hooks/sync-prop.ts"],"sourcesContent":["import { ref, computed, Ref, UnwrapRef } from 'vue'\n\nexport function useSyncProp<T, PropName extends string> (propRef: Ref<T> | undefined, propName: PropName, emit: (event: any, newValue: T) => any, defaultValue?: T) {\n  if (defaultValue === undefined) {\n    return {\n      syncProp: computed({\n        set (value: T) {\n          emit(`update:${propName}`, value)\n        },\n        get (): T {\n          return propRef!.value\n        },\n      }),\n    }\n  }\n\n  const statefulValue = ref<T>(defaultValue)\n\n  return {\n    syncProp: computed<NonNullable<T>>({\n      set (value: NonNullable<T>) {\n        statefulValue.value = value as UnwrapRef<NonNullable<T>>\n        emit(`update:${propName}`, value)\n      },\n      get (): NonNullable<T> {\n        return (propRef?.value === undefined ? (statefulValue.value) : propRef.value) as NonNullable<T>\n      },\n    }),\n  }\n}\n"],"names":["useSyncProp","propRef","propName","emit","defaultValue","undefined","syncProp","computed","set","value","get","statefulValue","ref"],"mappings":"iDAEgBA,EAAyCC,EAA6BC,EAAoBC,EAAwCC,GAChJ,QAAqBC,IAAjBD,EACF,MAAO,CACLE,SAAUC,EAAS,CACjBC,IAAKC,GACHN,EAAK,UAAUD,IAAYO,IAE7BC,IAAG,IACMT,EAASQ,SAMxB,MAAME,EAAgBC,EAAOR,GAE7B,MAAO,CACLE,SAAUC,EAAyB,CACjCC,IAAKC,GACHE,EAAcF,MAAQA,EACtBN,EAAK,UAAUD,IAAYO,IAE7BC,IAAG,SAC0BL,KAAnBJ,MAAAA,SAAAA,EAASQ,OAAuBE,EAAmB,MAAIV,EAAQQ"}