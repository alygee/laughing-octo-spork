{"version":3,"file":"VaDatePicker.vue_vue&type=template&id=efd6986a&lang.js","sources":["../../../../src/components/va-date-picker/VaDatePicker.vue?vue&type=template&id=efd6986a&lang.js"],"sourcesContent":["<template>\n  <div class=\"va-date-picker\" :class=\"{ 'va-date-picker__without-week-days': hideWeekDays }\" :style=\"colorsStyle\">\n    <va-date-picker-header\n      v-bind=\"headerProps\"\n      v-model:view=\"syncView\"\n    >\n      <template v-for=\"(_, name) in $slots\" v-slot:[name]=\"bind\">\n        <slot :name=\"name\" v-bind=\"bind\" />\n      </template>\n    </va-date-picker-header>\n\n    <div class=\"va-date-picker__picker-wrapper\">\n      <va-day-picker\n        v-if=\"syncView.type === 'day'\"\n        v-bind=\"dayPickerProps\"\n        v-model=\"valueComputed\"\n        ref=\"currentPicker\"\n        :view=\"syncView\"\n        @hover:day=\"(value) => $emit('hover:day', value)\"\n        @click:day=\"(value) => $emit('click:day', value)\"\n      >\n        <template v-for=\"(_, name) in $slots\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-day-picker>\n\n      <va-month-picker\n        v-if=\"syncView.type === 'month'\"\n        v-bind=\"monthPickerProps\"\n        ref=\"currentPicker\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        @update:model-value=\"onMonthModelValueUpdate\"\n        @hover:month=\"(value) => $emit('hover:month', value)\"\n        @click:month=\"onMonthClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-month-picker>\n\n      <va-year-picker\n        v-if=\"syncView.type === 'year'\"\n        v-bind=\"yearPickerProps\"\n        ref=\"currentPicker\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        @hover:year=\"(value) => $emit('hover:year', value)\"\n        @update:model-value=\"onYearModelValueUpdate\"\n        @click:year=\"onYearClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-year-picker>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ComponentOptions, defineComponent, nextTick, PropType, ref, watch } from 'vue'\nimport { useStateful, statefulComponentOptions } from '../../mixins/StatefulMixin/cStatefulMixin'\nimport { useColors } from '../../services/color-config/color-config'\n\nimport { VaDatePickerModelValue, VaDatePickerType, VaDatePickerView } from './types/types'\nimport { filterComponentProps, extractComponentProps, extractComponentEmits } from './utils/child-props'\nimport { useView } from './hooks/view'\n\nimport VaDayPicker from './components/VaDayPicker/VaDayPicker.vue'\nimport VaDatePickerHeader from './components/VaDatePickerHeader/VaDatePickerHeader.vue'\nimport VaMonthPicker from './components/VaMonthPicker/VaMonthPicker.vue'\nimport VaYearPicker from './components/VaYearPicker/VaYearPicker.vue'\n\nconst DEFAULT_MONTH_NAMES = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nconst DEFAULT_WEEKDAY_NAMES = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA']\n\nexport default defineComponent({\n  name: 'VaDatePicker',\n\n  components: { VaDayPicker, VaDatePickerHeader, VaMonthPicker, VaYearPicker },\n\n  props: {\n    ...statefulComponentOptions.props,\n    ...extractComponentProps(VaDayPicker),\n    ...extractComponentProps(VaMonthPicker),\n    ...extractComponentProps(VaYearPicker),\n    modelValue: { type: [Date, Array, Object] as PropType<VaDatePickerModelValue | undefined> },\n    monthNames: { type: Array as PropType<string[]>, required: false, default: DEFAULT_MONTH_NAMES },\n    weekdayNames: { type: Array as PropType<string[]>, required: false, default: DEFAULT_WEEKDAY_NAMES },\n    view: { type: Object as PropType<VaDatePickerView> },\n    type: { type: String as PropType<VaDatePickerType>, default: 'day' },\n\n    // Colors\n    color: { type: String, default: undefined },\n    weekendsColor: { type: String, default: undefined },\n  },\n\n  emits: [\n    ...statefulComponentOptions.emits,\n    ...extractComponentEmits(VaDatePickerHeader),\n    ...extractComponentEmits(VaYearPicker),\n    ...extractComponentEmits(VaDayPicker),\n    ...extractComponentEmits(VaMonthPicker),\n  ],\n\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit, undefined)\n\n    const { syncView } = useView(props, emit, { type: props.type })\n\n    const onMonthClick = (date: Date) => {\n      emit('click:month', date)\n      const year = date.getFullYear()\n      const month = date.getMonth()\n      if (props.type !== 'month') {\n        syncView.value = { type: 'day', year, month }\n      }\n    }\n\n    const onMonthModelValueUpdate = (modelValue: VaDatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'month') { valueComputed.value = modelValue }\n    }\n\n    const onYearClick = (date : Date) => {\n      emit('click:year', date)\n\n      const year = date.getFullYear()\n\n      if (props.type !== 'year') {\n        syncView.value = { type: 'month', year, month: syncView.value.month }\n      }\n    }\n\n    const onYearModelValueUpdate = (modelValue: VaDatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'year') { valueComputed.value = modelValue }\n    }\n\n    const { colorsToCSSVariable } = useColors()\n\n    const colorsStyle = colorsToCSSVariable({\n      color: props.color,\n      'weekends-color': props.weekendsColor,\n    }, 'va-date-picker')\n\n    const currentPicker = ref<ComponentOptions | null>(null)\n\n    watch(syncView, (newValue, prevValue) => {\n      // Don't focus new picker if user does not change type\n      if (newValue.type === prevValue.type) { return }\n\n      nextTick(() => {\n        if (currentPicker.value) { currentPicker.value.$el.focus() }\n      })\n    })\n\n    return {\n      dayPickerProps: filterComponentProps(props, extractComponentProps(VaDayPicker)),\n      headerProps: filterComponentProps(props, extractComponentProps(VaDatePickerHeader)),\n      monthPickerProps: filterComponentProps(props, extractComponentProps(VaMonthPicker)),\n      yearPickerProps: filterComponentProps(props, extractComponentProps(VaYearPicker)),\n\n      syncView,\n\n      valueComputed,\n      onMonthClick,\n      onMonthModelValueUpdate,\n\n      onYearClick,\n      onYearModelValueUpdate,\n\n      colorsStyle,\n      currentPicker,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import './_variables.scss';\n\n.va-date-picker {\n  --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n\n  width: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n\n  &__picker-wrapper {\n    height: var(--va-date-picker-content-height);\n  }\n\n  &__without-week-days {\n    --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 6 + var(--va-date-picker-cell-gap) * 6);\n  }\n\n  &_mobile {\n    .va-day-picker,\n    .va-month-picker,\n    .va-year-picker {\n      height: 100%;\n    }\n  }\n}\n\n.va-date-picker-header {\n  padding-bottom: 0.25rem;\n}\n</style>\n"],"names":["_mergeProps","class","_ctx","style","view","_","name","bind","_renderSlot","type","ref"],"mappings":"kWACEA,GAAKC,OAAM,sDAAgEC,iBAAiBC,MAAOD,6BACjGF,EACUE,eACAE,KAAMF,8BAAAA,0BAEgBA,WAAZG,EAAGC,WAAwBA,QAA7C,CAAqDC,wBACnDC,WAAaN,OAAcK,eAAdD,EAAcC,qFAMrBL,WAASO,WADjBT,EAEUE,6BACCA,yCAAAA,kBACTQ,IAAI,gBACHN,KAAMF,wBAIuBA,WAAZG,EAAGC,WAAwBA,QAA7C,CAAqDC,wBACnDC,WAAaN,OAAcK,eAAdD,EAAcC,wDAKvBL,WAASO,WADjBT,EAEUE,oBACRQ,IAAI,gBACHN,KAAMF,WACN,cAAaA,6BAKgBA,WAAZG,EAAGC,WAAwBA,QAA7C,CAAqDC,wBACnDC,WAAaN,OAAcK,eAAdD,EAAcC,uDAKvBL,WAASO,WADjBT,EAEUE,mBACRQ,IAAI,gBACHN,KAAMF,WACN,cAAaA,6BAKgBA,WAAZG,EAAGC,WAAwBA,QAA7C,CAAqDC,wBACnDC,WAAaN,OAAcK,eAAdD,EAAcC"}