{"version":3,"file":"VaDayPicker.vue_vue&type=script&lang.js","sources":["../../../../../../src/components/va-date-picker/components/VaDayPicker/VaDayPicker.vue"],"sourcesContent":["<template>\n  <div class=\"va-day-picker\" v-bind=\"containerAttributes\">\n    <template v-if=\"!hideWeekDays\">\n      <div\n        v-for=\"weekday in weekdayNamesComputed\" :key=\"weekday\"\n        class=\"va-day-picker__weekday\"\n      >\n        <slot name=\"weekday\">\n          {{ weekday }}\n        </slot>\n      </div>\n    </template>\n\n    <div\n      class=\"va-day-picker__calendar__day-wrapper\"\n      v-for=\"(date, index) in calendarDates\"\n      :key=\"date\"\n      @mouseenter=\"hoveredIndex = index\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      <va-date-picker-cell\n        :hidden=\"isOtherMonth(date) && !showOtherMonths\"\n        :today=\"isToday(date)\"\n        :selected=\"isSelected(date)\"\n        :in-range=\"isInRange(date)\"\n        :other-month=\"isOtherMonth(date)\"\n        :weekend=\"isDateWeekend(date)\"\n        :disabled=\"isDateDisabled(date)\"\n        :focused=\"hoveredIndex === index\"\n        :highlight-today=\"highlightToday\"\n        :highlight-weekend=\"highlightWeekend\"\n        @click=\"onClick(date); focusedCellIndex = index\"\n      >\n        <span class=\"va-date-picker-cell__day\">\n          <slot name=\"day\" v-bind=\"{ date }\">\n            {{ date.getDate() }}\n          </slot>\n        </span>\n      </va-date-picker-cell>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRefs, PropType, watch } from 'vue'\nimport { useVaDatePickerCalendar } from './va-date-picker-calendar-hook'\nimport { VaDatePickerMode, VaDatePickerModelValue, VaDatePickerView } from '../../types/types'\nimport { extractComponentProps, filterComponentProps } from '../../utils/child-props'\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\n\nconst VaDatePickerCellProps = extractComponentProps(VaDatePickerCell, ['date', 'selectedValue', 'focusedDate', 'focused'])\n\nexport default defineComponent({\n  name: 'VaDayPicker',\n\n  components: { VaDatePickerCell },\n\n  props: {\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    weekdayNames: { type: Array as PropType<string[]>, required: true },\n    firstWeekday: { type: String as PropType<'Monday' | 'Sunday'>, default: 'Sunday' },\n    hideWeekDays: { type: Boolean, default: false },\n    view: { type: Object as PropType<VaDatePickerView>, default: () => ({ type: 'day' }) },\n    modelValue: { type: [Date, Array, Object] as PropType<VaDatePickerModelValue> },\n    mode: { type: String as PropType<VaDatePickerMode>, default: 'auto' },\n    showOtherMonths: { type: Boolean, default: false },\n    allowedDays: { type: Function as PropType<(date: Date) => boolean> },\n    weekends: { type: [Function] as PropType<(d: Date) => boolean> },\n    highlightWeekend: { type: Boolean, default: false },\n    highlightToday: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue', 'hover:day', 'click:day'],\n\n  setup (props, { emit }) {\n    const { firstWeekday, weekdayNames, view } = toRefs(props)\n\n    const VaDayPickerCellPropValues = filterComponentProps(props, VaDatePickerCellProps)\n\n    const { calendarDates, currentMonthStartIndex, currentMonthEndIndex } = useVaDatePickerCalendar(view, { firstWeekday })\n\n    const weekdayNamesComputed = computed(() => {\n      return firstWeekday.value === 'Sunday'\n        ? weekdayNames.value\n        : [...weekdayNames.value.slice(1), weekdayNames.value[0]]\n    })\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('day', calendarDates, props, emit)\n\n    const gridStartIndex = computed(() => props.showOtherMonths ? 0 : currentMonthStartIndex.value)\n    const gridEndIndex = computed(() => props.showOtherMonths ? calendarDates.value.length : currentMonthEndIndex.value)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 7,\n      start: gridStartIndex,\n      end: gridEndIndex,\n      onSelected: (selectedValue) => onClick(calendarDates.value[selectedValue]),\n    })\n\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    const isOtherMonth = (date: Date) => props.view.month !== date.getMonth()\n    const isDateDisabled = (date: Date) => props.allowedDays === undefined ? false : !props.allowedDays(date)\n    const isDateWeekend = (date: Date) => {\n      if (props.weekends === undefined) {\n        return date.getDay() === 6 || date.getDay() === 0 // 0 - Sunday, 6 - Saturday\n      }\n\n      return props.weekends(date)\n    }\n\n    return {\n      hoveredIndex,\n      calendarDates,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isOtherMonth,\n      isDateDisabled,\n      isDateWeekend,\n      containerAttributes,\n      weekdayNamesComputed,\n      VaDayPickerCellPropValues,\n      focusedCellIndex,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-day-picker {\n  display: grid;\n  // 7 columns\n  grid-template-columns: repeat(7, 1fr);\n  grid-gap: var(--va-date-picker-cell-gap);\n\n  &__weekday {\n    text-align: center;\n    font-size: 9px;\n    color: var(--va-secondary);\n    font-weight: bold;\n    height: var(--va-date-picker-cell-size);\n    line-height: var(--va-date-picker-cell-size);\n  }\n}\n</style>\n"],"names":["VaDatePickerCellProps","extractComponentProps","VaDatePickerCell","defineComponent","name","components","props","monthNames","type","Array","required","weekdayNames","firstWeekday","String","default","hideWeekDays","Boolean","view","Object","modelValue","Date","mode","showOtherMonths","allowedDays","Function","weekends","highlightWeekend","highlightToday","emits","setup","emit","toRefs","VaDayPickerCellPropValues","filterComponentProps","calendarDates","currentMonthStartIndex","currentMonthEndIndex","useVaDatePickerCalendar","weekdayNamesComputed","computed","value","slice","hoveredIndex","onClick","isToday","isSelected","isInRange","useDatePicker","gridStartIndex","gridEndIndex","length","focusedCellIndex","containerAttributes","useGridKeyboardNavigation","rowSize","start","end","onSelected","selectedValue","watch","index","isOtherMonth","date","month","getMonth","isDateDisabled","undefined","isDateWeekend","getDay"],"mappings":"oeAoDA,MAAMA,EAAwBC,EAAsBC,EAAkB,CAAC,OAAQ,gBAAiB,cAAe,YAE/G,MAAeC,EAAgB,CAC7BC,KAAM,cAENC,WAAY,kBAAEH,GAEdI,MAAO,CACLC,WAAY,CAAEC,KAAMC,MAA6BC,UAAU,GAC3DC,aAAc,CAAEH,KAAMC,MAA6BC,UAAU,GAC7DE,aAAc,CAAEJ,KAAMK,OAAyCC,QAAS,UACxEC,aAAc,CAAEP,KAAMQ,QAASF,SAAS,GACxCG,KAAM,CAAET,KAAMU,OAAsCJ,QAAS,MAASN,KAAM,SAC5EW,WAAY,CAAEX,KAAM,CAACY,KAAMX,MAAOS,SAClCG,KAAM,CAAEb,KAAMK,OAAsCC,QAAS,QAC7DQ,gBAAiB,CAAEd,KAAMQ,QAASF,SAAS,GAC3CS,YAAa,CAAEf,KAAMgB,UACrBC,SAAU,CAAEjB,KAAM,CAACgB,WACnBE,iBAAkB,CAAElB,KAAMQ,QAASF,SAAS,GAC5Ca,eAAgB,CAAEnB,KAAMQ,QAASF,SAAS,IAG5Cc,MAAO,CAAC,oBAAqB,YAAa,aAE1CC,MAAOvB,GAAOwB,KAAEA,IACd,MAAMlB,aAAEA,EAAYD,aAAEA,EAAYM,KAAEA,GAASc,EAAOzB,GAE9C0B,EAA4BC,EAAqB3B,EAAON,IAExDkC,cAAEA,EAAaC,uBAAEA,EAAsBC,qBAAEA,GAAyBC,EAAwBpB,EAAM,CAAEL,aAAAA,IAElG0B,EAAuBC,GAAS,IACN,WAAvB3B,EAAa4B,MAChB7B,EAAa6B,MACb,IAAI7B,EAAa6B,MAAMC,MAAM,GAAI9B,EAAa6B,MAAM,OAGpDE,aACJA,EAAYC,QACZA,EAAOC,QACPA,EAAOC,WACPA,EAAUC,UACVA,GACEC,EAAc,MAAOb,EAAe5B,EAAOwB,GAEzCkB,EAAiBT,GAAS,IAAMjC,EAAMgB,gBAAkB,EAAIa,EAAuBK,QACnFS,EAAeV,GAAS,IAAMjC,EAAMgB,gBAAkBY,EAAcM,MAAMU,OAASd,EAAqBI,SAExGW,iBACJA,EAAgBC,oBAAEA,GAChBC,EAA0B,CAC5BC,QAAS,EACTC,MAAOP,EACPQ,IAAKP,EACLQ,WAAaC,GAAkBf,EAAQT,EAAcM,MAAMkB,MAG7DC,EAAMR,GAAmBS,IAAYlB,EAAaF,MAAQoB,KAC1DD,EAAMjB,GAAekB,IAAYT,EAAiBX,MAAQoB,KAY1D,MAAO,CACLlB,aAAAA,EACAR,cAAAA,EACAS,QAAAA,EACAC,QAAAA,EACAC,WAAAA,EACAC,UAAAA,EACAe,aAjBoBC,GAAexD,EAAMW,KAAK8C,QAAUD,EAAKE,WAkB7DC,eAjBsBH,QAAqCI,IAAtB5D,EAAMiB,cAAqCjB,EAAMiB,YAAYuC,GAkBlGK,cAjBqBL,QACEI,IAAnB5D,EAAMmB,SACiB,IAAlBqC,EAAKM,UAAoC,IAAlBN,EAAKM,SAG9B9D,EAAMmB,SAASqC,GAatBV,oBAAAA,EACAd,qBAAAA,EACAN,0BAAAA,EACAmB,iBAAAA"}