{"version":3,"file":"VaProgressBar.vue_vue&type=template&id=ab4dd37e&lang.js","sources":["../../../../src/components/va-progress-bar/VaProgressBar.vue?vue&type=template&id=ab4dd37e&lang.js"],"sourcesContent":["<template>\n  <div class=\"va-progress-bar\">\n    <div\n      :style=\"{colorComputed}\"\n      class=\"va-progress-bar__info\"\n    >\n      <slot v-if=\"!large\" />\n    </div>\n    <div\n      class=\"va-progress-bar__wrapper\"\n      :class=\"computedClass\"\n      :style=\"computedStyle\"\n    >\n      <div\n        :style=\"{\n          width: normalizedBuffer + '%',\n          backgroundColor: colorComputed,\n          ...(reverse ? { right: 0 } : { left: 0 })\n        }\"\n        class=\"va-progress-bar__buffer\"\n      />\n      <div\n        v-if=\"!indeterminate\"\n        :style=\"{\n          width: normalizedValue + '%',\n          backgroundColor: colorComputed,\n          ...(reverse && { 'margin-left': 'auto' })\n        }\"\n        class=\"va-progress-bar__overlay\"\n      >\n        <slot v-if=\"large\" />\n      </div>\n      <template v-else>\n        <div\n          :style=\"{backgroundColor: colorComputed, animationDirection: reverse ? 'reverse' : 'normal'}\"\n          class=\"va-progress-bar__overlay__indeterminate-start\"\n        />\n        <div\n          :style=\"{backgroundColor: colorComputed, animationDirection: reverse ? 'reverse' : 'normal'}\"\n          class=\"va-progress-bar__overlay__indeterminate-end\"\n        />\n      </template>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, mixins, prop, Vue } from 'vue-class-component'\n\nimport { normalizeValue } from '../../services/utils'\nimport { ProgressComponentMixin } from './ProgressComponentMixin'\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport { SizeMixin } from '../../mixins/SizeMixin'\n\nclass ProgressBarProps {\n  buffer = prop<number>({ type: Number, default: 100 })\n  rounded = prop<boolean>({ type: Boolean, default: true })\n  size = prop<string | number>({ type: [Number, String], default: 'medium' })\n  reverse = prop<boolean>({ type: Boolean, default: false })\n  color = prop<string>({ type: String, default: 'primary' })\n}\n\nconst ProgressBarPropsMixin = Vue.with(ProgressBarProps)\n\n@Options({\n  name: 'VaProgressBar',\n})\nexport default class VaProgressBar extends mixins(\n  ProgressComponentMixin,\n  ColorMixin,\n  SizeMixin,\n  ProgressBarPropsMixin,\n) {\n  get large () {\n    return this.size === 'large'\n  }\n\n  get small () {\n    return this.size === 'small'\n  }\n\n  get normalizedBuffer () {\n    if (this.indeterminate) {\n      return 100\n    }\n\n    return normalizeValue(this.buffer)\n  }\n\n  get computedClass () {\n    return {\n      'va-progress-bar__wrapper__square': (!this.rounded && !this.large) || this.small,\n      'va-progress-bar__small': this.small,\n      'va-progress-bar__large': this.large,\n    }\n  }\n\n  get computedStyle () {\n    if (this.size === 'medium') {\n      return { height: '0.5rem' }\n    }\n\n    if (!this.small && !this.large) {\n      return { height: typeof this.size === 'number' ? `${this.size}px` : this.size }\n    }\n\n    return {}\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources/resources\";\n@import 'variables';\n\n.va-progress-bar {\n  width: var(--va-progress-bar-width);\n  position: var(--va-progress-bar-position);\n  overflow: var(--va-progress-bar-overflow);\n\n  &__small {\n    height: var(--va-progress-bar-sm-height);\n  }\n\n  &__large {\n    height: var(--va-progress-bar-lg-height);\n  }\n\n  &__info {\n    font-weight: var(--va-progress-bar-info-font-weight);\n    text-align: var(--va-progress-bar-info-text-align);\n    text-transform: var(--va-progress-bar-info-text-transform);\n\n    &:not(:empty) {\n      margin-bottom: 0.3125rem;\n    }\n  }\n\n  &__wrapper {\n    position: var(--va-progress-bar--wrapper-position);\n    overflow: var(--va-progress-bar--wrapper-overflow);\n    border-radius: var(--va-progress-bar--wrapper-border-radius);\n\n    &__square {\n      border-radius: var(--va-progress-bar-square-border-radius);\n    }\n  }\n\n  &__buffer {\n    position: var(--va-progress-bar-buffer-position);\n    top: var(--va-progress-bar-buffer-top);\n    height: inherit;\n    border-radius: inherit;\n    opacity: var(--va-progress-bar-buffer-opacity);\n    transition: var(--va-progress-bar-buffer-transition);\n  }\n\n  &__overlay {\n    height: inherit;\n    border-radius: inherit;\n    transition: var(--va-progress-bar-transition);\n    text-align: var(--va-progress-bar-text-align);\n    color: var(--va-progress-bar-color);\n    letter-spacing: var(--va-progress-bar-letter-spacing);\n    line-height: var(--va-progress-bar-line-height);\n    font-size: var(--va-progress-bar-font-size);\n    font-weight: var(--va-progress-bar-font-weight);\n\n    &__indeterminate-start {\n      animation: va-progress-bar__overlay__indeterminate-start 2s ease-in infinite;\n      position: absolute;\n      height: inherit;\n    }\n\n    &__indeterminate-end {\n      animation: va-progress-bar__overlay__indeterminate-end 2s ease-out 1s infinite;\n      position: absolute;\n      height: inherit;\n    }\n  }\n}\n\n@keyframes va-progress-bar__overlay__indeterminate-start {\n  0% {\n    width: 10%;\n    left: -10%;\n  }\n\n  50% {\n    width: 100%;\n    left: 100%;\n  }\n\n  100% {\n    width: 100%;\n    left: 100%;\n  }\n}\n\n@keyframes va-progress-bar__overlay__indeterminate-end {\n  0% {\n    width: 100%;\n    left: -100%;\n  }\n\n  50% {\n    width: 10%;\n    left: 100%;\n  }\n\n  100% {\n    width: 10%;\n    left: 100%;\n  }\n}\n</style>\n"],"names":["_mergeProps","class","_ctx"],"mappings":"iLACEA,GAAKC,MAAM,uDAEEC,qDAGIA,uFAILA,0DACAA,8KAWCA,kEAYqBA,mCAAmCA,8HAInCA,mCAAmCA,0QARnDA"}