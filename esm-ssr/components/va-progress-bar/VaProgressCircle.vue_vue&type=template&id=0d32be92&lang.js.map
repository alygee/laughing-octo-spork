{"version":3,"file":"VaProgressCircle.vue_vue&type=template&id=0d32be92&lang.js","sources":["../../../../src/components/va-progress-bar/VaProgressCircle.vue?vue&type=template&id=0d32be92&lang.js"],"sourcesContent":["<template>\n  <div\n    class=\"va-progress-circle\"\n    ref=\"progress\"\n    :style=\"computedStyle\"\n    :class=\"computedClass\"\n  >\n    <svg\n      class=\"va-progress-circle__wrapper\"\n      viewBox=\"0 0 40 40\"\n    >\n      <circle\n        class=\"va-progress-circle__overlay\"\n        cx=\"50%\"\n        cy=\"50%\"\n        :r=\"radius\"\n        fill=\"none\"\n        :stroke=\"colorComputed\"\n        :stroke-width=\"computedThickness\"\n        :stroke-dasharray=\"dasharray\"\n        :stroke-dashoffset=\"dashoffset\"\n      />\n    </svg>\n    <div\n      :style=\"computedStyles\"\n      class=\"va-progress-circle__info\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, mixins, Vue, prop } from 'vue-class-component'\n\nimport { ProgressComponentMixin } from './ProgressComponentMixin'\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport { SizeMixin } from '../../mixins/SizeMixin'\n\nclass ProgressCircleProps {\n  thickness = prop<number>({ type: Number, default: 0.06 })\n  color = prop<string>({ type: String, default: 'primary' })\n}\n\nconst ProgressCirclePropsMixin = Vue.with(ProgressCircleProps)\n\n@Options({\n  name: 'VaProgressCircle',\n})\nexport default class VaProgressCircle extends mixins(\n  ProgressComponentMixin,\n  ColorMixin,\n  SizeMixin,\n  ProgressCirclePropsMixin,\n) {\n  get radius () {\n    return 20 - (20 * this.cappedThickness / 100)\n  }\n\n  get dasharray () {\n    return 2 * Math.PI * this.radius\n  }\n\n  get dashoffset () {\n    return this.dasharray * (1 - this.normalizedValue / 100)\n  }\n\n  get computedThickness () {\n    return `${this.cappedThickness}%`\n  }\n\n  get computedStyle () {\n    return { width: this.sizeComputed, height: this.sizeComputed }\n  }\n\n  get computedClass () {\n    return {\n      'va-progress-circle--indeterminate': this.indeterminate,\n    }\n  }\n\n  get computedStyles () {\n    return {\n      color: this.theme.getColor(this.color),\n    }\n  }\n\n  get cappedThickness () {\n    // value translated to percentage, divided in half, since final maximum value should be 50%\n    if (this.thickness <= 0) {\n      return 0\n    } else if (this.thickness >= 1) {\n      return 50\n    } else {\n      return this.thickness / 2 * 100\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources/resources\";\n\n.va-progress-circle {\n  position: var(--va-progress-circle-position);\n  overflow: var(--va-progress-circle-overflow); // Prevents resizing container back and forth.\n\n  &__wrapper {\n    position: var(--va-progress-circle-wrapper-position);\n    top: var(--va-progress-circle-wrapper-top);\n    left: var(--va-progress-circle-wrapper-left);\n    bottom: var(--va-progress-circle-wrapper-bottom);\n    right: var(--va-progress-circle-wrapper-right);\n    margin: var(--va-progress-circle-wrapper-margin);\n    transform: var(--va-progress-circle-wrapper-transform);\n    width: var(--va-progress-circle-wrapper-width);\n    height: var(--va-progress-circle-wrapper-height);\n\n    @include flex-center();\n\n    @at-root {\n      .va-progress-circle--indeterminate & {\n        animation: va-progress-circle__wrapper--indeterminate 2s linear infinite;\n      }\n    }\n  }\n\n  &__overlay {\n    transition: var(--va-progress-circle-overlay-transition);\n\n    @at-root {\n      .va-progress-circle--indeterminate & {\n        animation: va-progress-circle__overlay--indeterminate 2s ease-in-out infinite;\n      }\n    }\n  }\n\n  &__info {\n    font-size: var(--va-progress-circle-info-font-size);\n    position: var(--va-progress-circle-info-position);\n    left: var(--va-progress-circle-info-left);\n    top: var(--va-progress-circle-info-top);\n    transform: var(--va-progress-circle-info-transform);\n  }\n}\n\n@keyframes va-progress-circle__wrapper--indeterminate {\n  100% {\n    transform: rotate(270deg);\n  }\n}\n\n@keyframes va-progress-circle__overlay--indeterminate {\n  0% {\n    stroke-dasharray: 1, 125;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 125, 125;\n    stroke-dashoffset: -65px;\n  }\n\n  100% {\n    stroke-dasharray: 125, 125;\n    stroke-dashoffset: -125px;\n  }\n}\n</style>\n"],"names":["_mergeProps","class","_ctx","ref","style"],"mappings":"gLACEA,GACEC,OAAM,qBAGEC,iBAFRC,IAAI,WACHC,MAAOF,oJAWH,IAAGA,0BAEH,SAAQA,qBACR,eAAcA,yBACd,mBAAkBA,iBAClB,oBAAmBA,8CAIdA"}