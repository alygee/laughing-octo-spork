{"version":3,"file":"VaModal.vue_vue&type=template&id=fb3de2a4&lang.js","sources":["../../../../src/components/va-modal/VaModal.vue?vue&type=template&id=fb3de2a4&lang.js"],"sourcesContent":["<template>\n  <div class=\"va-modal\">\n    <modal-element\n      name=\"va-modal__overlay--transition\"\n      :isTransition=\"!$props.withoutTransitions\"\n      appear\n    >\n      <div\n        v-if=\"valueComputed && $props.overlay\"\n        class=\"va-modal__overlay\"\n        :style=\"computedOverlayStyles\"\n      />\n    </modal-element>\n    <modal-element\n      name=\"va-modal__container--transition\"\n      :isTransition=\"!$props.withoutTransitions\"\n      appear\n      @beforeEnter=\"onBeforeEnterTransition\"\n      @afterEnter=\"onAfterEnterTransition\"\n      @beforeLeave=\"onBeforeLeaveTransition\"\n      @afterLeave=\"onAfterLeaveTransition\"\n    >\n      <div\n        v-if=\"valueComputed\"\n        class=\"va-modal__container\"\n        :style=\"computedModalContainerStyle\"\n      >\n        <div\n          class=\"va-modal__dialog\"\n          :class=\"computedClass\"\n          :style=\"{ maxWidth: $props.maxWidth, maxHeight: $props.maxHeight }\"\n          ref=\"modal\"\n        >\n          <va-icon\n            v-if=\"$props.fullscreen\"\n            @click=\"cancel()\"\n            name=\"close\"\n            class=\"va-modal__close\"\n          />\n\n          <div\n            class=\"va-modal__inner\"\n            :style=\"{ maxWidth: $props.maxWidth, maxHeight: $props.maxHeight }\"\n          >\n            <div\n              v-if=\"title\"\n              class=\"va-modal__title\"\n              :style=\"{ color: theme.getColor('primary') }\"\n            >\n              {{ $props.title }}\n            </div>\n            <div v-if=\"hasHeaderSlot\" class=\"va-modal__header\">\n              <slot name=\"header\" />\n            </div>\n            <div v-if=\"$props.message\" class=\"va-modal__message\">\n              {{ $props.message }}\n            </div>\n            <div v-if=\"hasContentSlot\" class=\"va-modal__message\">\n              <slot />\n            </div>\n            <div\n              v-if=\"($props.cancelText || $props.okText) && !$props.hideDefaultActions\"\n              class=\"va-modal__footer\"\n            >\n              <va-button v-if=\"$props.cancelText\" color=\"gray\" class=\"mr-2\" flat @click=\"cancel\">\n                {{ $props.cancelText }}\n              </va-button>\n              <va-button @click=\"ok\">\n                {{ $props.okText }}\n              </va-button>\n            </div>\n            <div v-if=\"hasFooterSlot\" class=\"va-modal__footer\">\n              <slot name=\"footer\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </modal-element>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { watch, h, Transition } from 'vue'\nimport { Options, prop, Vue, mixins } from 'vue-class-component'\nimport { noop } from 'lodash-es'\n\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\nimport ClickOutsideMixin, { ClickOutsideOptions } from '../../mixins/ClickOutsideMixin/ClickOutsideMixin'\nimport VaButton from '../va-button'\nimport VaIcon from '../va-icon'\n\nclass ModalProps {\n  modelValue = prop<boolean>({ type: Boolean, default: false })\n  title = prop<string>({ type: String, default: '' })\n  message = prop<string>({ type: String, default: '' })\n  okText = prop<string>({ type: String, default: 'OK' })\n  cancelText = prop<string>({ type: String, default: 'Cancel' })\n  hideDefaultActions = prop<boolean>({ type: Boolean, default: false })\n  fullscreen = prop<boolean>({ type: Boolean, default: false })\n  mobileFullscreen = prop<boolean>({ type: Boolean, default: true })\n  noDismiss = prop<boolean>({ type: Boolean, default: false })\n  noOutsideDismiss = prop<boolean>({ type: Boolean, default: false })\n  noEscDismiss = prop<boolean>({ type: Boolean, default: false })\n  maxWidth = prop<string>({ type: String, default: '' })\n  maxHeight = prop<string>({ type: String, default: '' })\n  size = prop<string>({\n    type: String,\n    default: 'medium',\n    validator: (size: string) => {\n      return ['medium', 'small', 'large'].includes(size)\n    },\n  })\n\n  fixedLayout = prop<boolean>({ type: Boolean, default: false })\n  withoutTransitions = prop<boolean>({ type: Boolean, default: false })\n  overlay = prop<boolean>({ type: Boolean, default: true })\n  overlayOpacity = prop<number | string>({\n    type: [Number, String],\n    default: undefined,\n  })\n\n  zIndex = prop<number | string>({ type: [Number, String], default: undefined })\n}\n\nconst ModalPropsMixin = Vue.with(ModalProps)\n\nclass ModalElementProps {\n  isTransition = prop<boolean>({\n    type: Boolean,\n    default: true,\n  })\n}\n\n@Options({\n  name: 'ModalElement',\n})\nclass ModalElement extends Vue.with(ModalElementProps) {\n  render (): any {\n    const children = this.$slots.default ? this.$slots.default(this.$attrs) : null\n\n    return this.$props.isTransition\n      ? h(\n        Transition,\n        { ...this.$attrs },\n        this.$slots,\n      )\n      : children\n  }\n}\n\n@Options({\n  name: 'VaModal',\n  components: { VaButton, VaIcon, ModalElement },\n  emits: ['update:modelValue', 'cancel', 'ok', 'before-open', 'open', 'before-close', 'close', 'click-outside'],\n})\nexport default class VaModal extends mixins(\n  ColorMixin,\n  StatefulMixin,\n  ClickOutsideMixin,\n  ModalPropsMixin,\n) {\n  private clearClickOutsideEvents: () => void = noop\n\n  created () {\n    watch(() => this.valueComputed, (valueComputed: boolean) => {\n      if (valueComputed) {\n        window.addEventListener('keyup', this.listenKeyUp)\n\n        const options: ClickOutsideOptions = {\n          onClickOutside: () => {\n            this.$emit('click-outside')\n            this.cancel()\n          },\n          disabled: this.$props.noOutsideDismiss || this.$props.noDismiss || false,\n          trigger: 'mousedown',\n        }\n\n        this.$nextTick(() => {\n          const target = this.$refs.modal\n          this.clearClickOutsideEvents = this.registerClickOutsideEvents(\n            target as Element,\n            options,\n          )\n        })\n      } else {\n        this.clearClickOutsideEvents()\n        window.removeEventListener('keyup', this.listenKeyUp)\n      }\n    })\n  }\n\n  get computedClass () {\n    return {\n      'va-modal--fullscreen': this.$props.fullscreen,\n      'va-modal--mobile-fullscreen': this.$props.mobileFullscreen,\n      'va-modal--fixed-layout': this.$props.fixedLayout,\n      [`va-modal--size-${this.$props.size}`]: this.$props.size !== 'medium',\n    }\n  }\n\n  get computedOverlayStyles () {\n    // NOTE Not sure exactly what that does.\n    // Supposedly solves some case when background wasn't shown.\n    // As a side effect removes background from nested modals.\n\n    const moreThanOneModalIsOpen = !!document.querySelectorAll(\n      '.va-modal__overlay',\n    ).length\n\n    return moreThanOneModalIsOpen\n      ? {}\n      : {\n        'background-color': `rgba(0, 0, 0, ${this.$props.overlayOpacity || 0.6})`,\n        'z-index':\n          this.$props.zIndex != null ? parseInt(this.$props.zIndex as string) - 10 : undefined,\n      }\n  }\n\n  get computedModalContainerStyle () {\n    return {\n      'z-index': this.$props.zIndex,\n    }\n  }\n\n  get hasContentSlot () {\n    return this.$slots.default\n  }\n\n  get hasHeaderSlot () {\n    return this.$slots.header\n  }\n\n  get hasFooterSlot () {\n    return this.$slots.footer\n  }\n\n  show () {\n    this.valueComputed = true\n  }\n\n  hide () {\n    this.valueComputed = false\n  }\n\n  toggle () {\n    this.valueComputed = !this.valueComputed\n  }\n\n  cancel () {\n    this.hide()\n    this.$emit('cancel')\n  }\n\n  ok () {\n    this.hide()\n    this.$emit('ok')\n  }\n\n  listenKeyUp (e: KeyboardEvent) {\n    if (e.code === 'Escape' && !this.$props.noEscDismiss && !this.$props.noDismiss) {\n      this.cancel()\n    }\n  }\n\n  onBeforeEnterTransition (el: HTMLElement) {\n    this.$emit('before-open', el)\n  }\n\n  onAfterEnterTransition (el: HTMLElement) {\n    this.$emit('open', el)\n  }\n\n  onBeforeLeaveTransition (el: HTMLElement) {\n    this.$emit('before-close', el)\n  }\n\n  onAfterLeaveTransition (el: HTMLElement) {\n    this.$emit('close', el)\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import '../../styles/resources/resources';\n@import 'variables';\n\n.va-modal {\n  &__title {\n    margin-bottom: 1.5rem;\n\n    @include va-title();\n  }\n\n  &__container {\n    position: var(--va-modal-container-position);\n    top: var(--va-modal-container-top);\n    left: var(--va-modal-container-left);\n    z-index: var(--va-modal-container-z-index);\n    display: var(--va-modal-container-display);\n    width: var(--va-modal-container-width);\n    height: var(--va-modal-container-height);\n    align-items: var(--va-modal-container-align-items);\n    justify-content: var(--va-modal-container-justify-content);\n    overflow: var(--va-modal-container-overflow);\n    outline: var(--va-modal-container-outline);\n\n    &--transition {\n      @include va-modal-transition();\n    }\n  }\n\n  &__dialog {\n    background: var(--va-modal-dialog-background);\n    min-height: var(--va-modal-dialog-min-height);\n    height: var(--va-modal-dialog-height);\n    border-radius: var(--va-modal-dialog-border-radius, var(--va-block-border-radius));\n    margin: var(--va-modal-dialog-margin);\n    box-shadow: var(--va-modal-dialog-box-shadow, var(--va-block-box-shadow));\n    max-width: var(--va-modal-dialog-max-width);\n    max-height: var(--va-modal-dialog-max-height);\n    position: var(--va-modal-dialog-position);\n    overflow: auto;\n  }\n\n  &__overlay {\n    position: var(--va-modal-overlay-position);\n    top: var(--va-modal-overlay-top);\n    left: var(--va-modal-overlay-left);\n    z-index: var(--va-modal-overlay-z-index);\n    width: var(--va-modal-overlay-width);\n    height: var(--va-modal-overlay-height);\n\n    &--transition {\n      @include va-modal-transition(true);\n    }\n  }\n\n  &--fullscreen {\n    min-width: 100vw !important;\n    min-height: 100vh !important;\n    border-radius: 0;\n    margin: 0;\n  }\n\n  &--mobile-fullscreen {\n    @media all and (max-width: map-get($grid-breakpoints, sm)) {\n      min-width: 100vw !important;\n      min-height: 100vh !important;\n      border-radius: 0;\n      position: fixed;\n      margin: 0 !important;\n    }\n  }\n\n  &--size {\n    &-small {\n      max-width: map_get($grid-breakpoints, sm);\n\n      @media all and (max-width: map-get($grid-breakpoints, sm)) {\n        max-width: 100vw !important;\n      }\n\n      .va-modal__inner {\n        max-width: map_get($grid-breakpoints, sm);\n\n        @media all and (max-width: map-get($grid-breakpoints, sm)) {\n          max-width: 100vw !important;\n        }\n      }\n    }\n\n    &-large {\n      max-width: map-get($grid-breakpoints, lg);\n\n      .va-modal__inner {\n        max-width: map-get($grid-breakpoints, lg);\n      }\n    }\n  }\n\n  &--fixed-layout {\n    .va-modal__inner {\n      overflow: hidden;\n      padding: $modal-padding-top 0 $modal-padding-bottom;\n      max-height: calc(100vh - 2rem);\n\n      .va-modal__header,\n      .va-modal__footer,\n      .va-modal__title {\n        padding: 0 $modal-padding-right 0 $modal-padding-left;\n      }\n\n      .va-modal__message {\n        padding: 0 $modal-padding-right 0 $modal-padding-left;\n        overflow: auto;\n      }\n    }\n\n    .va-modal__dialog {\n      overflow: hidden;\n    }\n  }\n\n  &__message {\n    margin-bottom: 1.5rem;\n  }\n\n  &__inner {\n    overflow: visible;\n    display: flex;\n    position: relative;\n    flex-flow: column;\n    padding: $modal-padding-top $modal-padding-right $modal-padding-bottom $modal-padding-left;\n    max-width: map_get($grid-breakpoints, md);\n    margin: auto;\n\n    > div:last-of-type {\n      margin-bottom: 0 !important;\n    }\n  }\n\n  &__close {\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    cursor: pointer;\n    font-size: 1.5rem !important;\n    font-style: normal !important;\n    color: $brand-secondary;\n    z-index: 1;\n  }\n\n  &__footer {\n    margin-top: auto;\n    min-height: fit-content;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n\n    &:last-of-type {\n      margin-bottom: 0 !important;\n    }\n  }\n}\n</style>\n"],"names":["_mergeProps","class","name","isTransition","_ctx","withoutTransitions","appear","overlay","_createBlock","style","_createVNode","maxWidth","maxHeight","ref","onClick","getColor","title","_renderSlot","message","cancelText","okText","hideDefaultActions","color","flat","fullscreen"],"mappings":"8bACEA,GAAKC,MAAM,2BAEPC,KAAK,gCACJC,cAAeC,SAAOC,mBACvBC,OAAA,gBAHF,yBAMUF,iBAAiBA,SAAOG,aADhCC,eAEEP,MAAM,oBACLQ,MAAOL,gDAFFA,iBAAiBA,SAAOG,qDAEtBH,8EAIVF,KAAK,kCACJC,cAAeC,SAAOC,mBACvBC,OAAA,gBAHF,yBAUUF,EAAa,mBADrBI,eAEEP,MAAM,sBACLQ,MAAOL,gCAERM,SACET,OAAM,mBACEG,iBACPK,gBAAmBL,SAAOO,mBAAqBP,SAAOQ,WACvDC,IAAI,UAGIT,SAAiB,gBADzBI,WAEGM,WAAOV,WACRF,KAAK,QACLD,MAAM,qDAGRS,SACET,MAAM,kBACLQ,gBAAmBL,SAAOO,mBAAqBP,SAAOQ,aAG/CR,EAAK,WADbI,eAEEP,MAAM,kBACLQ,aAAgBL,QAAMW,wBAEpBX,SAAOY,wBAEDZ,EAAa,mBAAxBI,eAA0BP,MAAM,qBAC9BgB,qCAESb,SAAc,aAAzBI,eAA2BP,MAAM,uBAC5BG,SAAOc,0BAEDd,EAAc,oBAAzBI,eAA2BP,MAAM,sBAC/BgB,uCAGOb,SAAOe,aAAcf,SAAOgB,QAAYhB,SAAOiB,qCADxDb,eAEEP,MAAM,qBAEWG,SAAiB,gBAAlCI,WAAoCc,MAAM,OAAOrB,MAAM,OAAOsB,KAAA,GAAMT,QAAOV,sBACzE,SAAGA,SAAOe,oDAEZT,KAAYI,QAAOV,kBACjB,SAAGA,SAAOgB,qCAGHhB,EAAa,mBAAxBI,eAA0BP,MAAM,qBAC9BgB,gEAjDAb,gEAEEA,sDAIEA,4DACYA,SAAOO,mBAAqBP,SAAOQ,qBAI/CR,SAAOoB,kBAEbtB,KAAK,QACLD,MAAM,sGAKcG,SAAOO,mBAAqBP,SAAOQ,qBAG/CR,0DAEWA,QAAMW,gCAEpBX,SAAOY,mCAEDZ,4HAGAA,SAAOc,kDACbd,SAAOc,qCAEDd,gIAIFA,SAAOe,aAAcf,SAAOgB,QAAYhB,SAAOiB,+EAGrCjB,SAAOe,kBAAYG,MAAM,OAAOrB,MAAM,OAAOsB,KAAA,gBAA9D,6BACKnB,SAAOe,uBAAPf,SAAOe,uEAEZ,6BACKf,SAAOgB,mBAAPhB,SAAOgB,sCAGHhB"}