{"version":3,"file":"withConfigTransport.js","sources":["../../../../src/services/config-transport/withConfigTransport.ts"],"sourcesContent":["import { isArray, isObject, camelCase, upperFirst } from 'lodash-es'\nimport {\n  DefineComponent,\n  ComponentOptions,\n  h,\n  computed,\n  SetupContext,\n} from 'vue'\nimport { PropOptions } from 'vue-class-component'\n\nimport { useLocalConfig } from '../../components/va-config/VaConfig'\nimport { useGlobalConfig } from '../global-config/global-config'\nimport { getLocalConfigWithComponentProp } from './createConfigValueGetter'\nimport { ComponentConfig } from '../component-config/component-config'\n\nexport type Props = {\n  [key: string]: PropOptions;\n}\n\nconst createConfigValueGetter = (\n  globalConfig: ComponentConfig,\n  configChain: ComponentConfig[],\n  componentName = '',\n) => (\n  prop: string,\n  defaultValue: any,\n) => {\n  // We have to pass context here as this method will be mainly used in prop default,\n  // and methods are not accessible there.\n  const configLayers = globalConfig ? [globalConfig, ...configChain] : configChain\n\n  const configLayer = getLocalConfigWithComponentProp(configLayers, componentName, prop)\n\n  if (configLayer) {\n    return configLayer[componentName][prop]\n  }\n\n  return typeof defaultValue === 'function' ? defaultValue() : defaultValue\n}\n\nexport function getComponentOptions (component: DefineComponent): ComponentOptions {\n  switch (true) {\n  case Boolean(component.options):\n    return component.options\n  case Boolean(component.__vccOpts) || Boolean(component.__b):\n    return { ...component.__b, ...component.__vccOpts }\n  default:\n    return component\n  }\n}\n\nfunction normalizeProps (props: any) {\n  switch (true) {\n  case isArray(props):\n    return props.reduce((acc: Record<string, unknown>, prop: string) => ({\n      ...acc,\n      [prop]: null,\n    }), {})\n  case isObject(props):\n    return props\n  default:\n    return {}\n  }\n}\n\nfunction mergeProps (to: Record<string, any>, from: Record<string, any>, optionsType = 'props') {\n  const { mixins, extends: extendsOptions } = from\n\n  extendsOptions && mergeProps(to, extendsOptions, optionsType)\n  mixins && mixins.forEach((m: any) => mergeProps(to, m, optionsType))\n\n  const props = normalizeProps(from[optionsType])\n\n  for (const key in props) {\n    to[key] = props[key]\n  }\n}\n\nexport function resolveProps (options: any, optionsType = 'props') {\n  const mixins = options.mixins ?? []\n  const extendsOptions = options.extends ?? []\n  const result = {}\n\n  mergeProps(result, extendsOptions, optionsType)\n\n  for (let i = 0; i < mixins.length; i++) {\n    mergeProps(result, mixins[i], optionsType)\n  }\n\n  Object.assign(result, normalizeProps(options[optionsType]))\n\n  return result\n}\n\nconst formatEmitString = (str: string): string => {\n  const [beforeColon, afterColon] = str.split(':')\n\n  if (afterColon) {\n    return [upperFirst(beforeColon), camelCase(afterColon)].join(':')\n  }\n\n  return upperFirst(camelCase(beforeColon))\n}\n\n// TODO: improve typing\n// (component: DefineComponent | VueConstructor): ComponentOptions<any> doesn't work here\n\nconst withConfigTransport = (component: any): any => {\n  const options = getComponentOptions(component as DefineComponent)\n\n  const props = resolveProps(options)\n\n  // TODO: it's too generic to use resolveProps here\n  // NOTE: for some reason unit tests work without this feature\n  const emits = Object.keys(resolveProps(options, 'emits'))\n\n  const propsOptions: { [key: string]: PropOptions } = { ...props }\n  const methods: { [key: string]: (...args: any[]) => any } = { ...options.methods }\n  const optionsWithoutDefaults = Object.keys(propsOptions)\n\n  const componentName = upperFirst(camelCase(component.name))\n\n  return {\n    name: `WithConfigTransport${componentName || 'Component'}`,\n    props: optionsWithoutDefaults,\n    emits,\n    methods: Object.keys(methods).reduce((acc, name) => ({\n      ...acc,\n      [name]: function (...args: any[]) {\n        return (this as any).$refs.innerRef[name](...args)\n      },\n    }), {}),\n    setup (props: Record<string, any>, context: SetupContext) {\n      const configChain = useLocalConfig()\n      const { getGlobalConfig } = useGlobalConfig()\n\n      const computedProps = computed(() => {\n        const componentsConfig = getGlobalConfig().components\n        const getConfigValue = createConfigValueGetter(componentsConfig || {}, configChain.value, componentName)\n\n        const getValue = (name: string, defaultValue: any) => {\n          // We want to fallback to config in 2 cases:\n          // * prop value is undefined (allows user to dynamically enter/exit config).\n          // * prop value is not defined\n          if (!(name in props) || (props[name] === undefined)) {\n            return getConfigValue(name, defaultValue)\n          }\n\n          // In other cases we return the prop itself.\n          return props[name]\n        }\n\n        return Object.entries(propsOptions).reduce((computed, [name, definition]) => ({\n          ...computed,\n          [name]: getValue(name, definition.default),\n        }), {})\n      })\n\n      const proxiedEmits = emits.reduce((acc, emit) => ({\n        ...acc,\n        [`on${formatEmitString(emit)}`]: (...args: any[]) => context.emit(emit, ...args),\n      }), {})\n\n      return {\n        computedProps,\n        proxiedEmits,\n      }\n    },\n    render () {\n      return h(\n        component,\n        {\n          ...this.computedProps,\n          ...this.proxiedEmits,\n          ref: 'innerRef',\n        },\n        { ...this.$slots },\n      )\n    },\n  }\n}\n\nexport default withConfigTransport\n"],"names":["getComponentOptions","component","Boolean","options","__vccOpts","__b","normalizeProps","props","isArray","reduce","acc","prop","isObject","mergeProps","to","from","optionsType","mixins","extends","extendsOptions","forEach","m","key","resolveProps","result","i","length","Object","assign","formatEmitString","str","beforeColon","afterColon","split","upperFirst","camelCase","join","emits","keys","propsOptions","methods","optionsWithoutDefaults","componentName","name","args","this","$refs","innerRef","setup","context","configChain","useLocalConfig","getGlobalConfig","useGlobalConfig","computedProps","computed","getConfigValue","globalConfig","defaultValue","configLayers","configLayer","getLocalConfigWithComponentProp","createConfigValueGetter","components","value","getValue","undefined","entries","definition","default","proxiedEmits","emit","render","h","ref","$slots"],"mappings":"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"}