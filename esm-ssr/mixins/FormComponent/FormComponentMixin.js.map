{"version":3,"file":"FormComponentMixin.js","sources":["../../../../src/mixins/FormComponent/FormComponentMixin.ts"],"sourcesContent":["import { isString, isFunction, flatten } from 'lodash-es'\nimport { inject } from 'vue'\nimport { mixins, Options, prop, Vue, setup } from 'vue-class-component'\n\nimport { FormProvider, FormServiceKey } from '../../components/va-form/consts'\n\nconst prepareValidations = (messages: string | any[] = [], callArguments = null) => {\n  if (isString(messages)) {\n    messages = [messages]\n  }\n  return messages\n    .map((message: any) => isFunction(message) ? message(callArguments) : message)\n}\n\nclass Props {\n  rules = prop<any[]>({ type: Array, default: () => [] })\n  disabled = prop<boolean>({ type: Boolean, default: false })\n  readonly = prop<boolean>({ type: Boolean, default: false })\n  success = prop<boolean>({ type: Boolean, default: false })\n  messages = prop<any[]>({ type: Array, default: () => [] })\n  error = prop<boolean>({ type: Boolean, default: false })\n  errorMessages = prop<any[] | string>({ type: [Array, String] })\n  errorCount = prop<string | number>({ type: Number, default: 1 })\n  id = prop<string | number>({\n    type: [String, Number],\n    default: undefined,\n  })\n\n  name = prop<string | number>({\n    type: [String, Number],\n    default: undefined,\n  })\n\n  modelValue = prop({\n    validator: () => {\n      throw new Error('ValidateMixin: `modelValue` prop should be defined in component.')\n    },\n  })\n}\n\nconst PropsMixin = Vue.with(Props)\n\n@Options({})\nexport class FormComponentMixin extends mixins(\n  PropsMixin,\n) {\n  hadFocus = false\n  isFocused = false\n  internalErrorMessages: any[] = []\n  internalError = false\n  isFormComponent = true\n\n  // beforeMount () {\n  //   console.log('im here', )\n  //   // That's just a flag for form to figure out whether component is form component.\n  //   this.isFormComponent = true\n  // }\n\n  // @Watch('rules', { deep: true })\n  // onRulesChanged (newVal: any, oldVal: any) {\n  //   // We want this check, because rules are passed as function,\n  //   // and, therefore, are recalculated on pretty much every change.\n  //   if (deepEqual(newVal, oldVal)) {\n  //     return\n  //   }\n  //   this.validate()\n  // }\n\n  // @Watch('isFocused')\n  // onIsFocusedChanged (isFocused: boolean) {\n  //   if (isFocused) {\n  //     this.hadFocus = true\n  //   }\n  // }\n\n  formProvider = setup(() => {\n    const formProvider: FormProvider | undefined = inject(FormServiceKey, undefined)\n\n    return {\n      ...formProvider,\n    }\n  })\n\n  mounted () {\n    if (Object.keys(this.formProvider).length) {\n      (this.formProvider as FormProvider).onChildMounted(this)\n    }\n  }\n\n  unmounted () {\n    if (Object.keys(this.formProvider).length) {\n      (this.formProvider as FormProvider).onChildUnmounted(this)\n    }\n  }\n\n  /** @public */\n  validate (): any {\n    this.computedError = false\n    this.computedErrorMessages = []\n\n    if (this.rules && this.rules.length > 0) {\n      prepareValidations(flatten(this.rules), this.modelValue as any)\n        .forEach((validateResult: any) => {\n          if (isString(validateResult)) {\n            this.computedErrorMessages.push(validateResult)\n            this.computedError = true\n          } else if (validateResult === false) {\n            this.computedError = true\n          }\n        })\n    }\n\n    return !this.computedError\n  }\n\n  /** @public */\n  focus (): void {\n    throw new Error('focus method should be implemented in component')\n  }\n\n  /** @public */\n  reset (): void {\n    throw new Error('reset method should be implemented in component')\n  }\n\n  resetValidation (): void {\n    this.computedErrorMessages = []\n    this.computedError = false\n  }\n\n  hasError (): any {\n    return this.computedError\n  }\n\n  // eslint-disable-next-line camelcase\n  ValidateMixin_onBlur (): void {\n    this.isFocused = false\n    this.computedError = false\n    this.validate()\n  }\n\n  get shouldValidateOnBlur () {\n    // We want for inputs to validate on blur only after they've been interacted with.\n    return this.hadFocus\n  }\n\n  get computedError () {\n    return this.error || this.internalError\n  }\n\n  set computedError (errorMessage) {\n    this.internalError = errorMessage\n  }\n\n  get computedErrorMessages () {\n    return this.errorMessages ? prepareValidations(this.errorMessages) : this.internalErrorMessages\n  }\n\n  set computedErrorMessages (errorMessages) {\n    this.internalErrorMessages = errorMessages\n  }\n}\n"],"names":["prepareValidations","messages","callArguments","isString","map","message","isFunction","PropsMixin","Vue","with","constructor","this","prop","type","Array","default","Boolean","String","Number","undefined","validator","Error","FormComponentMixin","mixins","setup","inject","FormServiceKey","mounted","Object","keys","formProvider","length","onChildMounted","unmounted","onChildUnmounted","validate","computedError","computedErrorMessages","rules","flatten","modelValue","forEach","validateResult","push","focus","reset","resetValidation","hasError","ValidateMixin_onBlur","isFocused","shouldValidateOnBlur","hadFocus","error","internalError","errorMessage","errorMessages","internalErrorMessages","Options"],"mappings":"yVAMA,MAAMA,EAAqB,CAACC,EAA2B,GAAIC,EAAgB,QACrEC,EAASF,KACXA,EAAW,CAACA,IAEPA,EACJG,KAAKC,GAAiBC,EAAWD,GAAWA,EAAQH,GAAiBG,KA6B1E,MAAME,EAAaC,EAAIC,KA1BvB,MAAAC,cACEC,WAAQC,EAAY,CAAEC,KAAMC,MAAOC,QAAS,IAAM,KAClDJ,cAAWC,EAAc,CAAEC,KAAMG,QAASD,SAAS,IACnDJ,cAAWC,EAAc,CAAEC,KAAMG,QAASD,SAAS,IACnDJ,aAAUC,EAAc,CAAEC,KAAMG,QAASD,SAAS,IAClDJ,cAAWC,EAAY,CAAEC,KAAMC,MAAOC,QAAS,IAAM,KACrDJ,WAAQC,EAAc,CAAEC,KAAMG,QAASD,SAAS,IAChDJ,mBAAgBC,EAAqB,CAAEC,KAAM,CAACC,MAAOG,UACrDN,gBAAaC,EAAsB,CAAEC,KAAMK,OAAQH,QAAS,IAC5DJ,QAAKC,EAAsB,CACzBC,KAAM,CAACI,OAAQC,QACfH,aAASI,IAGXR,UAAOC,EAAsB,CAC3BC,KAAM,CAACI,OAAQC,QACfH,aAASI,IAGXR,gBAAaC,EAAK,CAChBQ,UAAW,KACT,MAAM,IAAIC,MAAM,8EAQTC,EAAb,cAAwCC,EACtChB,IADFG,kCAGEC,eAAW,EACXA,gBAAY,EACZA,2BAA+B,GAC/BA,oBAAgB,EAChBA,sBAAkB,EAyBlBA,kBAAea,GAAM,KAGZ,IAFwCC,EAAOC,OAAgBP,OAOxEQ,UACMC,OAAOC,KAAKlB,KAAKmB,cAAcC,QAChCpB,KAAKmB,aAA8BE,eAAerB,MAIvDsB,YACML,OAAOC,KAAKlB,KAAKmB,cAAcC,QAChCpB,KAAKmB,aAA8BI,iBAAiBvB,MAKzDwB,WAgBE,OAfAxB,KAAKyB,eAAgB,EACrBzB,KAAK0B,sBAAwB,GAEzB1B,KAAK2B,OAAS3B,KAAK2B,MAAMP,OAAS,GACpC/B,EAAmBuC,EAAQ5B,KAAK2B,OAAQ3B,KAAK6B,YAC1CC,SAASC,IACJvC,EAASuC,IACX/B,KAAK0B,sBAAsBM,KAAKD,GAChC/B,KAAKyB,eAAgB,IACO,IAAnBM,IACT/B,KAAKyB,eAAgB,OAKrBzB,KAAKyB,cAIfQ,QACE,MAAM,IAAIvB,MAAM,mDAIlBwB,QACE,MAAM,IAAIxB,MAAM,mDAGlByB,kBACEnC,KAAK0B,sBAAwB,GAC7B1B,KAAKyB,eAAgB,EAGvBW,WACE,OAAOpC,KAAKyB,cAIdY,uBACErC,KAAKsC,WAAY,EACjBtC,KAAKyB,eAAgB,EACrBzB,KAAKwB,WAGPe,2BAEE,OAAOvC,KAAKwC,SAGdf,oBACE,OAAOzB,KAAKyC,OAASzC,KAAK0C,cAG5BjB,kBAAmBkB,GACjB3C,KAAK0C,cAAgBC,EAGvBjB,4BACE,OAAO1B,KAAK4C,cAAgBvD,EAAmBW,KAAK4C,eAAiB5C,KAAK6C,sBAG5EnB,0BAA2BkB,GACzB5C,KAAK6C,sBAAwBD,IApHpBjC,KADZmC,EAAQ,KACInC"}