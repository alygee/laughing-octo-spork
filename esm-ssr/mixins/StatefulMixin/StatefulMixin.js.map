{"version":3,"file":"StatefulMixin.js","sources":["../../../../src/mixins/StatefulMixin/StatefulMixin.ts"],"sourcesContent":["import { mixins, Options, prop, Vue } from 'vue-class-component'\n\nexport type ValueState = {\n  modelValue?: any;\n}\n\nclass Props {\n  modelValue: any = prop<undefined>({\n    type: undefined,\n    default: undefined,\n  })\n\n  stateful = prop<boolean>({\n    type: Boolean,\n    default: false,\n  })\n}\n\nconst PropsMixin = Vue.with(Props)\n\n// TODO Definitions could be done better, but it's too complicated to bother.\n\n@Options({\n  emits: ['update:modelValue'],\n})\nexport class StatefulMixin extends mixins(PropsMixin) {\n  valueState: ValueState = {\n    modelValue: this.$props.modelValue,\n  }\n\n  hasStatefulMixin!: boolean\n\n  created () {\n    this.hasStatefulMixin = true\n  }\n\n  get valueComputed () {\n    if (this.$props.stateful) {\n      return this.valueState.modelValue\n    }\n    return this.$props.modelValue\n  }\n\n  set valueComputed (value) {\n    if (this.$props.stateful) {\n      this.valueState.modelValue = value\n    }\n    this.$emit('update:modelValue', value)\n  }\n}\n"],"names":["PropsMixin","Vue","with","constructor","this","prop","type","undefined","default","Boolean","StatefulMixin","mixins","modelValue","$props","created","hasStatefulMixin","valueComputed","stateful","valueState","value","$emit","Options","emits"],"mappings":"2KAkBA,MAAMA,EAAaC,EAAIC,KAZvB,MAAAC,cACEC,gBAAkBC,EAAgB,CAChCC,UAAMC,EACNC,aAASD,IAGXH,cAAWC,EAAc,CACvBC,KAAMG,QACND,SAAS,WAWAE,EAAb,cAAmCC,EAAOX,IAA1CG,kCACEC,gBAAyB,CACvBQ,WAAYR,KAAKS,OAAOD,YAK1BE,UACEV,KAAKW,kBAAmB,EAG1BC,oBACE,OAAIZ,KAAKS,OAAOI,SACPb,KAAKc,WAAWN,WAElBR,KAAKS,OAAOD,WAGrBI,kBAAmBG,GACbf,KAAKS,OAAOI,WACdb,KAAKc,WAAWN,WAAaO,GAE/Bf,KAAKgB,MAAM,oBAAqBD,KAtBvBT,KAHZW,EAAQ,CACPC,MAAO,CAAC,wBAEGZ"}