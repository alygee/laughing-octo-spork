{"version":3,"file":"RouterLinkMixin.js","sources":["../../../../src/mixins/RouterLinkMixin/RouterLinkMixin.ts"],"sourcesContent":["import { Options, Vue, prop, mixins } from 'vue-class-component'\n\nclass RouterLinkProps {\n  tag = prop<string>({ type: String, default: 'router-link' })\n  to = prop<string | Record<string, unknown>>({ type: [String, Object] })\n  replace = prop<boolean>({ type: Boolean })\n  append = prop<boolean>({ type: Boolean })\n  exact = prop<boolean>({ type: Boolean })\n  activeClass = prop<string>({ type: String })\n  exactActiveClass = prop<string>({ type: String })\n  href = prop<string>({ type: String })\n  target = prop<string>({ type: String })\n}\n\nconst RouterLinkPropsMixin = Vue.with(RouterLinkProps)\n\n@Options({})\nexport class RouterLinkMixin extends mixins(\n  RouterLinkPropsMixin,\n) {\n  hasRouterLinkMixin!: boolean\n\n  get tagComputed () {\n    const isNuxt = !!Object.getOwnPropertyDescriptor(this, '$nuxt')\n    if (this.tag === 'a' || (this.href && !this.to) || this.target) {\n      return 'a'\n    }\n    if (this.tag === 'nuxt-link' || (isNuxt && this.hasRouterLinkParams)) {\n      return 'nuxt-link'\n    }\n    if (this.tag === 'router-link' || this.hasRouterLinkParams) {\n      return 'router-link'\n    }\n    return this.tag\n  }\n\n  get hasRouterLinkParams () {\n    return Boolean(\n      this.to ||\n      this.append ||\n      this.replace ||\n      this.exact ||\n      this.activeClass ||\n      this.href ||\n      this.exactActiveClass,\n    )\n  }\n\n  get isActiveRouterLink () {\n    if (!(this as any).$router || !this.to) {\n      return false\n    }\n\n    const resolve = (this as any).$router.resolve(\n      this.to,\n    )\n\n    const to = resolve.href\n    const currentHref = (this as any).$router.currentRoute.value.path\n\n    return to.replace('#', '') === currentHref.replace('#', '')\n  }\n\n  get hrefComputed () {\n    // to resolve href on server for SEO optimization\n    // https://github.com/nuxt/nuxt.js/issues/8204\n    // @ts-ignore\n    return this.href || (this.to ? (this as any).$router?.resolve(this.to, (this as any).$route).href : null)\n  }\n\n  created () {\n    this.hasRouterLinkMixin = true\n  }\n}\n"],"names":["RouterLinkPropsMixin","Vue","with","constructor","this","prop","type","String","default","Object","Boolean","RouterLinkMixin","mixins","tagComputed","isNuxt","getOwnPropertyDescriptor","tag","href","to","target","hasRouterLinkParams","append","replace","exact","activeClass","exactActiveClass","isActiveRouterLink","$router","resolve","currentHref","currentRoute","value","path","hrefComputed","$route","created","hasRouterLinkMixin","Options"],"mappings":"2KAcA,MAAMA,EAAuBC,EAAIC,KAZjC,MAAAC,cACEC,SAAMC,EAAa,CAAEC,KAAMC,OAAQC,QAAS,gBAC5CJ,QAAKC,EAAuC,CAAEC,KAAM,CAACC,OAAQE,UAC7DL,aAAUC,EAAc,CAAEC,KAAMI,UAChCN,YAASC,EAAc,CAAEC,KAAMI,UAC/BN,WAAQC,EAAc,CAAEC,KAAMI,UAC9BN,iBAAcC,EAAa,CAAEC,KAAMC,SACnCH,sBAAmBC,EAAa,CAAEC,KAAMC,SACxCH,UAAOC,EAAa,CAAEC,KAAMC,SAC5BH,YAASC,EAAa,CAAEC,KAAMC,gBAMnBI,EAAb,cAAqCC,EACnCZ,IAIAa,kBACE,MAAMC,IAAWL,OAAOM,yBAAyBX,KAAM,SACvD,MAAiB,MAAbA,KAAKY,KAAgBZ,KAAKa,OAASb,KAAKc,IAAOd,KAAKe,OAC/C,IAEQ,cAAbf,KAAKY,KAAwBF,GAAUV,KAAKgB,oBACvC,YAEQ,gBAAbhB,KAAKY,KAAyBZ,KAAKgB,oBAC9B,cAEFhB,KAAKY,IAGdI,0BACE,OAAOV,QACLN,KAAKc,IACLd,KAAKiB,QACLjB,KAAKkB,SACLlB,KAAKmB,OACLnB,KAAKoB,aACLpB,KAAKa,MACLb,KAAKqB,kBAITC,yBACE,IAAMtB,KAAauB,UAAYvB,KAAKc,GAClC,OAAO,EAGT,MAIMA,EAJWd,KAAauB,QAAQC,QACpCxB,KAAKc,IAGYD,KACbY,EAAezB,KAAauB,QAAQG,aAAaC,MAAMC,KAE7D,OAAOd,EAAGI,QAAQ,IAAK,MAAQO,EAAYP,QAAQ,IAAK,IAG1DW,yBAIE,OAAO7B,KAAKa,OAASb,KAAKc,aAAMd,KAAauB,8BAASC,QAAQxB,KAAKc,GAAKd,KAAa8B,QAAQjB,KAAO,MAGtGkB,UACE/B,KAAKgC,oBAAqB,IAtDjBzB,KADZ0B,EAAQ,KACI1B"}